GAS LISTING /tmp/ccsl6Ocq.s 			page 1


   1              		.file	"kernel.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN6Kernel10initKernelEv
   9              	_ZN6Kernel10initKernelEv:
  10              	.LFB68:
  11              		.file 1 "src/kernel.cpp"
   1:src/kernel.cpp **** //
   2:src/kernel.cpp **** // Created by os on 9/6/22.
   3:src/kernel.cpp **** //
   4:src/kernel.cpp **** 
   5:src/kernel.cpp **** #include "../lib/hw.h"
   6:src/kernel.cpp **** 
   7:src/kernel.cpp **** #include "../h/kernel.hpp"
   8:src/kernel.cpp **** #include "../h/memory_allocator.hpp"
   9:src/kernel.cpp **** #include "../h/riscv.hpp"
  10:src/kernel.cpp **** #include "../h/console_interface.hpp"
  11:src/kernel.cpp **** 
  12:src/kernel.cpp **** extern void userMain();
  13:src/kernel.cpp **** 
  14:src/kernel.cpp **** void Kernel::initKernel() {
  12              		.loc 1 14 27
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  15:src/kernel.cpp ****     MemoryAllocator::initMem();
  22              		.loc 1 15 5
  23              		.loc 1 15 29 is_stmt 0
  24 0010 97000000 		call	_ZN15MemoryAllocator7initMemEv@plt
  24      E7800000 
  25              	.LVL0:
  16:src/kernel.cpp ****     RiscV::writeStvec((uint64) &supervisorTrap);
  26              		.loc 1 16 5 is_stmt 1
  27              		.loc 1 16 22 is_stmt 0
  28 0018 97070000 		la	a5,_ZN6Kernel14supervisorTrapEv
  28      83B70700 
  29              	.LVL1:
  30              	.LBB68:
  31              	.LBB69:
  32              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 9/6/22.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OSMIUM_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OSMIUM_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccsl6Ocq.s 			page 2


   9:src/../h/riscv.hpp **** #include "../lib/hw.h"
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp **** class RiscV {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp ****     // pop spp and spie sstatus bits
  14:src/../h/riscv.hpp ****     static void popSppSpie();
  15:src/../h/riscv.hpp **** 
  16:src/../h/riscv.hpp ****     //push x3...x31 registers on stack
  17:src/../h/riscv.hpp ****     static void pushRegisters();
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     //pop x3...x31 registers from stack
  20:src/../h/riscv.hpp ****     static void popRegisters();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     //read from scause register
  23:src/../h/riscv.hpp ****     static uint64 readScause();
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     //write to scause register
  26:src/../h/riscv.hpp ****     static void writeScause(uint64 scause);
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     //read from sepc register
  29:src/../h/riscv.hpp ****     static uint64 readSepc();
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     //write to sepc register
  32:src/../h/riscv.hpp ****     static void writeSepc(uint64 sepc);
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     //read from stvec register
  35:src/../h/riscv.hpp ****     static uint64 readStvec();
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     //write to stvec register
  38:src/../h/riscv.hpp ****     static void writeStvec(uint64 stvec);
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     enum SSTATUS
  41:src/../h/riscv.hpp ****     {
  42:src/../h/riscv.hpp ****         SIE = (1 << 1), //supervisor interrupt enable
  43:src/../h/riscv.hpp ****         SPIE = (1 << 5),//supervisor previous interrupt enable
  44:src/../h/riscv.hpp ****         SPP = (1 << 8), //supervisor previous privilege
  45:src/../h/riscv.hpp ****     };
  46:src/../h/riscv.hpp **** 
  47:src/../h/riscv.hpp ****     //set bit-mask bits in the sstatus register
  48:src/../h/riscv.hpp ****     static void setSstatus(uint64 mask);
  49:src/../h/riscv.hpp **** 
  50:src/../h/riscv.hpp ****     //clear bit-mask bits in the sstatus register
  51:src/../h/riscv.hpp ****     static void clearSstatus(uint64 mask);
  52:src/../h/riscv.hpp **** 
  53:src/../h/riscv.hpp ****     //read from sstatus register
  54:src/../h/riscv.hpp ****     static uint64 readSstatus();
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp ****     //write to sstatus register
  57:src/../h/riscv.hpp ****     static void writeSstatus(uint64 sstatus);
  58:src/../h/riscv.hpp **** 
  59:src/../h/riscv.hpp ****     enum SIP
  60:src/../h/riscv.hpp ****     {
  61:src/../h/riscv.hpp ****         SSIP = (1 << 1), //supervisor software interrupt pending
  62:src/../h/riscv.hpp ****         STIP = (1 << 5), //supervisor timer interrupt pending
  63:src/../h/riscv.hpp ****                          //(timer is configured to throw a software interrupt, so this is not used)
  64:src/../h/riscv.hpp ****         SEIP = (1 << 9), //supervisor external interrupt pending
  65:src/../h/riscv.hpp ****     };
GAS LISTING /tmp/ccsl6Ocq.s 			page 3


  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     //set bit-mask bits in the sip register
  68:src/../h/riscv.hpp ****     static void setSip(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     //clear bit-mask bits in the sip register
  71:src/../h/riscv.hpp ****     static void clearSip(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     //read from sip register
  74:src/../h/riscv.hpp ****     static uint64 readSip();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     //write to sip register
  77:src/../h/riscv.hpp ****     static void writeSip(uint64 Sip);
  78:src/../h/riscv.hpp **** private:
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp **** };
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp **** inline uint64 RiscV::readScause() {
  83:src/../h/riscv.hpp ****     uint64 volatile scause;
  84:src/../h/riscv.hpp ****     asm volatile("csrr %[scause], scause": [scause] "=r" (scause));
  85:src/../h/riscv.hpp ****     return scause;
  86:src/../h/riscv.hpp **** }
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp **** inline void RiscV::writeScause(uint64 scause) {
  89:src/../h/riscv.hpp ****     asm volatile("csrw scause, %[scause]":: [scause] "r" (scause));
  90:src/../h/riscv.hpp **** }
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp **** inline uint64 RiscV::readSepc() {
  93:src/../h/riscv.hpp ****     uint64 volatile sepc;
  94:src/../h/riscv.hpp ****     asm volatile("csrr %[sepc], sepc": [sepc] "=r" (sepc));
  95:src/../h/riscv.hpp ****     return sepc;
  96:src/../h/riscv.hpp **** }
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** inline void RiscV::writeSepc(uint64 sepc) {
  99:src/../h/riscv.hpp ****     asm volatile("csrw sepc, %[sepc]":: [sepc] "r" (sepc));
 100:src/../h/riscv.hpp **** }
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp **** inline uint64 RiscV::readStvec() {
 103:src/../h/riscv.hpp ****     uint64 volatile stvec;
 104:src/../h/riscv.hpp ****     asm volatile("csrr %[stvec], stvec": [stvec] "=r" (stvec));
 105:src/../h/riscv.hpp ****     return stvec;
 106:src/../h/riscv.hpp **** }
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp **** inline void RiscV::writeStvec(uint64 stvec) {
 109:src/../h/riscv.hpp ****     asm volatile("csrw stvec, %[stvec]":: [stvec] "r" (stvec));
  33              		.loc 2 109 5 is_stmt 1
  34              		.loc 2 109 63 is_stmt 0
  35              	#APP
  36              	# 109 "src/../h/riscv.hpp" 1
 110              	}
  37              		csrw stvec, a5
  38              	# 0 "" 2
  39              	.LVL2:
  40              	#NO_APP
  41              	.LBE69:
  42              	.LBE68:
  17:src/kernel.cpp ****     //RiscV::setSstatus(RiscV::SIE);
  18:src/kernel.cpp **** }
GAS LISTING /tmp/ccsl6Ocq.s 			page 4


  43              		.loc 1 18 1
  44 0024 83308100 		ld	ra,8(sp)
  45              		.cfi_restore 1
  46 0028 03340100 		ld	s0,0(sp)
  47              		.cfi_restore 8
  48              		.cfi_def_cfa 2, 16
  49 002c 13010101 		addi	sp,sp,16
  50              		.cfi_def_cfa_offset 0
  51 0030 67800000 		jr	ra
  52              		.cfi_endproc
  53              	.LFE68:
  55              		.section	.rodata.str1.8,"aMS",@progbits,1
  56              		.align	3
  57              	.LC0:
  58 0000 4572726F 		.string	"Error: Invalid syscall id!"
  58      723A2049 
  58      6E76616C 
  58      69642073 
  58      79736361 
  59              		.text
  60              		.align	2
  61              		.globl	_ZN6Kernel15syscall_handlerEv
  63              	_ZN6Kernel15syscall_handlerEv:
  64              	.LFB70:
  19:src/kernel.cpp **** 
  20:src/kernel.cpp **** void Kernel::supervisorTrapHandler() {
  21:src/kernel.cpp ****     uint64 scause = RiscV::readScause();
  22:src/kernel.cpp **** 
  23:src/kernel.cpp ****     if (scause == 0x0000000000000008UL || scause == 0x0000000000000009UL) {
  24:src/kernel.cpp ****         uint64 sepc = RiscV::readSepc() + 4;
  25:src/kernel.cpp ****         uint64 sstatus = RiscV::readSstatus();
  26:src/kernel.cpp **** 
  27:src/kernel.cpp ****         syscall_handler();
  28:src/kernel.cpp **** 
  29:src/kernel.cpp ****         asm volatile ("sd a0, 80(s0)");
  30:src/kernel.cpp ****         RiscV::writeSstatus(sstatus);
  31:src/kernel.cpp ****         RiscV::writeSepc(sepc);
  32:src/kernel.cpp ****         return;
  33:src/kernel.cpp ****     }
  34:src/kernel.cpp ****     /*if (scause == 0x0000000000000007UL) {
  35:src/kernel.cpp ****         uint64 sepc = RiscV::readSepc() + 4;
  36:src/kernel.cpp ****         __print_string("Nedozvoljena adresa upisa.\n");
  37:src/kernel.cpp ****         __print_string("scause: ");
  38:src/kernel.cpp ****         __print_uint64(scause);
  39:src/kernel.cpp ****         __putc('\n');
  40:src/kernel.cpp ****         //RiscV::clearSip(RiscV::SEIP);
  41:src/kernel.cpp ****         RiscV::writeSepc(sepc);
  42:src/kernel.cpp ****         return;
  43:src/kernel.cpp ****     }*/
  44:src/kernel.cpp ****     if (scause == 0x8000000000000001UL) {
  45:src/kernel.cpp ****         if (!TCB::running) { RiscV::clearSip(RiscV::SSIP); return; }
  46:src/kernel.cpp ****         Scheduler::timerInterrupt();
  47:src/kernel.cpp ****         TCB::incTimeSliceCounter();
  48:src/kernel.cpp ****         if (TCB::getTimeSliceCounter() >= TCB::running->getTimeSlice())
  49:src/kernel.cpp ****         {
  50:src/kernel.cpp ****             uint64 sepc = RiscV::readSepc();
  51:src/kernel.cpp ****             uint64 sstatus = RiscV::readSstatus();
GAS LISTING /tmp/ccsl6Ocq.s 			page 5


  52:src/kernel.cpp ****             TCB::resetTimeSliceCounter();
  53:src/kernel.cpp ****             TCB::dispatch();
  54:src/kernel.cpp ****             RiscV::writeSstatus(sstatus);
  55:src/kernel.cpp ****             RiscV::writeSepc(sepc);
  56:src/kernel.cpp ****         }
  57:src/kernel.cpp ****         RiscV::clearSip(RiscV::SSIP);
  58:src/kernel.cpp ****         return;
  59:src/kernel.cpp ****     }
  60:src/kernel.cpp ****     if (scause == 0x8000000000000009UL) {
  61:src/kernel.cpp ****         console_handler();
  62:src/kernel.cpp ****         //ConsoleInterface::console_handler();
  63:src/kernel.cpp ****         return;
  64:src/kernel.cpp ****     }
  65:src/kernel.cpp **** 
  66:src/kernel.cpp ****     uint64 sepc = RiscV::readSepc();
  67:src/kernel.cpp ****     __print_string("Neobradjen izuzetak.\n");
  68:src/kernel.cpp ****     __print_string("scause: ");
  69:src/kernel.cpp ****     //scause = RiscV::readScause();
  70:src/kernel.cpp ****     __print_uint64(scause);
  71:src/kernel.cpp ****     __putc('\n');
  72:src/kernel.cpp ****     //__print_string("Neobradjen izuzetak.\n");
  73:src/kernel.cpp ****     __print_string("sepc: ");
  74:src/kernel.cpp ****     //scause = RiscV::readScause();
  75:src/kernel.cpp ****     __print_uint64(sepc);
  76:src/kernel.cpp ****     __putc('\n');
  77:src/kernel.cpp ****     /*RiscV::clearSip(RiscV::SSIP);
  78:src/kernel.cpp ****     //RiscV::writeSip(0);
  79:src/kernel.cpp ****     //console_handler();*/
  80:src/kernel.cpp ****     RiscV::writeSepc(sepc);
  81:src/kernel.cpp ****     return;
  82:src/kernel.cpp **** }
  83:src/kernel.cpp **** 
  84:src/kernel.cpp **** void Kernel::syscall_handler() {
  65              		.loc 1 84 32 is_stmt 1
  66              		.cfi_startproc
  67 0034 130101F5 		addi	sp,sp,-176
  68              		.cfi_def_cfa_offset 176
  69 0038 2334110A 		sd	ra,168(sp)
  70 003c 2330810A 		sd	s0,160(sp)
  71 0040 233C9108 		sd	s1,152(sp)
  72              		.cfi_offset 1, -8
  73              		.cfi_offset 8, -16
  74              		.cfi_offset 9, -24
  75 0044 1304010B 		addi	s0,sp,176
  76              		.cfi_def_cfa 8, 0
  85:src/kernel.cpp ****     //uint64 sepc = RiscV::readSepc();
  86:src/kernel.cpp ****     volatile uint64 syscall_id;
  77              		.loc 1 86 5
  87:src/kernel.cpp ****     asm volatile ("mv %[syscall_id], a7": [syscall_id] "=r" (syscall_id));
  78              		.loc 1 87 5
  79              		.loc 1 87 74 is_stmt 0
  80              	#APP
  81              	# 87 "src/kernel.cpp" 1
  88              	
  82              		mv a5, a7
  83              	# 0 "" 2
  84              	#NO_APP
GAS LISTING /tmp/ccsl6Ocq.s 			page 6


  85 004c 233CF4FC 		sd	a5,-40(s0)
  89:src/kernel.cpp ****     //volatile uint64 arg0, arg1, arg2, temp;
  90:src/kernel.cpp ****     switch(syscall_id) {
  86              		.loc 1 90 5 is_stmt 1
  87              		.loc 1 90 12 is_stmt 0
  88 0050 833784FD 		ld	a5,-40(s0)
  89 0054 13072004 		li	a4,66
  90 0058 6368F720 		bgtu	a5,a4,.L4
  91 005c 93972700 		slli	a5,a5,2
  92 0060 17070000 		lla	a4,.L6
  92      13070700 
  93 0068 B387E700 		add	a5,a5,a4
  94 006c 83A70700 		lw	a5,0(a5)
  95 0070 B387E700 		add	a5,a5,a4
  96 0074 67800700 		jr	a5
  97              		.section	.rodata
  98              		.align	2
  99              		.align	2
 100              	.L6:
 101 0000 00000000 		.word	.L4-.L6
 102 0004 00000000 		.word	.L18-.L6
 103 0008 00000000 		.word	.L17-.L6
 104 000c 00000000 		.word	.L4-.L6
 105 0010 00000000 		.word	.L4-.L6
 106 0014 00000000 		.word	.L4-.L6
 107 0018 00000000 		.word	.L4-.L6
 108 001c 00000000 		.word	.L4-.L6
 109 0020 00000000 		.word	.L4-.L6
 110 0024 00000000 		.word	.L4-.L6
 111 0028 00000000 		.word	.L4-.L6
 112 002c 00000000 		.word	.L4-.L6
 113 0030 00000000 		.word	.L4-.L6
 114 0034 00000000 		.word	.L4-.L6
 115 0038 00000000 		.word	.L4-.L6
 116 003c 00000000 		.word	.L4-.L6
 117 0040 00000000 		.word	.L4-.L6
 118 0044 00000000 		.word	.L16-.L6
 119 0048 00000000 		.word	.L15-.L6
 120 004c 00000000 		.word	.L14-.L6
 121 0050 00000000 		.word	.L13-.L6
 122 0054 00000000 		.word	.L4-.L6
 123 0058 00000000 		.word	.L4-.L6
 124 005c 00000000 		.word	.L4-.L6
 125 0060 00000000 		.word	.L4-.L6
 126 0064 00000000 		.word	.L4-.L6
 127 0068 00000000 		.word	.L4-.L6
 128 006c 00000000 		.word	.L4-.L6
 129 0070 00000000 		.word	.L4-.L6
 130 0074 00000000 		.word	.L4-.L6
 131 0078 00000000 		.word	.L4-.L6
 132 007c 00000000 		.word	.L4-.L6
 133 0080 00000000 		.word	.L4-.L6
 134 0084 00000000 		.word	.L12-.L6
 135 0088 00000000 		.word	.L11-.L6
 136 008c 00000000 		.word	.L10-.L6
 137 0090 00000000 		.word	.L9-.L6
 138 0094 00000000 		.word	.L4-.L6
GAS LISTING /tmp/ccsl6Ocq.s 			page 7


 139 0098 00000000 		.word	.L4-.L6
 140 009c 00000000 		.word	.L4-.L6
 141 00a0 00000000 		.word	.L4-.L6
 142 00a4 00000000 		.word	.L4-.L6
 143 00a8 00000000 		.word	.L4-.L6
 144 00ac 00000000 		.word	.L4-.L6
 145 00b0 00000000 		.word	.L4-.L6
 146 00b4 00000000 		.word	.L4-.L6
 147 00b8 00000000 		.word	.L4-.L6
 148 00bc 00000000 		.word	.L4-.L6
 149 00c0 00000000 		.word	.L4-.L6
 150 00c4 00000000 		.word	.L8-.L6
 151 00c8 00000000 		.word	.L4-.L6
 152 00cc 00000000 		.word	.L4-.L6
 153 00d0 00000000 		.word	.L4-.L6
 154 00d4 00000000 		.word	.L4-.L6
 155 00d8 00000000 		.word	.L4-.L6
 156 00dc 00000000 		.word	.L4-.L6
 157 00e0 00000000 		.word	.L4-.L6
 158 00e4 00000000 		.word	.L4-.L6
 159 00e8 00000000 		.word	.L4-.L6
 160 00ec 00000000 		.word	.L4-.L6
 161 00f0 00000000 		.word	.L4-.L6
 162 00f4 00000000 		.word	.L4-.L6
 163 00f8 00000000 		.word	.L4-.L6
 164 00fc 00000000 		.word	.L4-.L6
 165 0100 00000000 		.word	.L4-.L6
 166 0104 00000000 		.word	.L7-.L6
 167 0108 00000000 		.word	.L5-.L6
 168              		.text
 169              	.L18:
  91:src/kernel.cpp ****         case 0x01:
 170              		.loc 1 91 9 is_stmt 1
  92:src/kernel.cpp ****             Kernel::mem_alloc_handler();
 171              		.loc 1 92 13
 172              	.LBB100:
 173              	.LBB101:
 174              		.file 3 "src/../h/kernel.hpp"
   1:src/../h/kernel.hpp **** //
   2:src/../h/kernel.hpp **** // Created by os on 9/6/22.
   3:src/../h/kernel.hpp **** //
   4:src/../h/kernel.hpp **** 
   5:src/../h/kernel.hpp **** #ifndef OSMIUM_KERNEL_HPP
   6:src/../h/kernel.hpp **** #define OSMIUM_KERNEL_HPP
   7:src/../h/kernel.hpp **** 
   8:src/../h/kernel.hpp **** #include "memory_allocator.hpp"
   9:src/../h/kernel.hpp **** #include "tcb.hpp"
  10:src/../h/kernel.hpp **** #include "sem.hpp"
  11:src/../h/kernel.hpp **** 
  12:src/../h/kernel.hpp **** class Kernel {
  13:src/../h/kernel.hpp **** public:
  14:src/../h/kernel.hpp ****     static void initKernel();
  15:src/../h/kernel.hpp ****     static void supervisorTrap();
  16:src/../h/kernel.hpp **** private:
  17:src/../h/kernel.hpp ****     static void supervisorTrapHandler();
  18:src/../h/kernel.hpp ****     static void syscall_handler();
  19:src/../h/kernel.hpp **** 
GAS LISTING /tmp/ccsl6Ocq.s 			page 8


  20:src/../h/kernel.hpp ****     //syscall_c handlers
  21:src/../h/kernel.hpp ****     static void mem_alloc_handler();        //0x01
  22:src/../h/kernel.hpp ****     static void mem_free_handler();         //0x02
  23:src/../h/kernel.hpp ****     static void thread_create_handler();    //0x11
  24:src/../h/kernel.hpp ****     static void thread_exit_handler();      //0x12
  25:src/../h/kernel.hpp ****     static void thread_dispatch_handler();  //0x13
  26:src/../h/kernel.hpp ****     static void thread_create_deactivated_handler();    //0x14
  27:src/../h/kernel.hpp ****     static void sem_open_handler();         //0x21
  28:src/../h/kernel.hpp ****     static void sem_close_handler();        //0x22
  29:src/../h/kernel.hpp ****     static void sem_wait_handler();         //0x23
  30:src/../h/kernel.hpp ****     static void sem_signal_handler();       //0x24
  31:src/../h/kernel.hpp ****     static void time_sleep_handler();       //0x31
  32:src/../h/kernel.hpp ****     static void getc_handler();             //0x41
  33:src/../h/kernel.hpp ****     static void putc_handler();             //0x42
  34:src/../h/kernel.hpp **** };
  35:src/../h/kernel.hpp **** 
  36:src/../h/kernel.hpp **** 
  37:src/../h/kernel.hpp **** 
  38:src/../h/kernel.hpp **** 
  39:src/../h/kernel.hpp **** 
  40:src/../h/kernel.hpp **** //0x01
  41:src/../h/kernel.hpp **** inline void Kernel::mem_alloc_handler() {
  42:src/../h/kernel.hpp ****     volatile uint64 arg0;
 175              		.loc 3 42 5
  43:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 176              		.loc 3 43 5
 177              		.loc 3 43 55 is_stmt 0
 178              	#APP
 179              	# 43 "src/../h/kernel.hpp" 1
  44              	    MemoryAllocator::allocate((size_t)arg0);
 180              		mv a5, a0
 181              	# 0 "" 2
 182              	#NO_APP
 183 007c 233CF4F4 		sd	a5,-168(s0)
 184              		.loc 3 44 5 is_stmt 1
 185              		.loc 3 44 30 is_stmt 0
 186 0080 033584F5 		ld	a0,-168(s0)
 187 0084 97000000 		call	_ZN15MemoryAllocator8allocateEm@plt
 187      E7800000 
 188              	.LVL3:
 189              	.L3:
 190              	.LBE101:
 191              	.LBE100:
  93:src/kernel.cpp ****             break;
  94:src/kernel.cpp ****         case 0x02:
  95:src/kernel.cpp ****             Kernel::mem_free_handler();
  96:src/kernel.cpp ****             break;
  97:src/kernel.cpp ****         case 0x11:
  98:src/kernel.cpp ****             Kernel::thread_create_handler();
  99:src/kernel.cpp ****             break;
 100:src/kernel.cpp ****         case 0x12:
 101:src/kernel.cpp ****             Kernel::thread_exit_handler();
 102:src/kernel.cpp ****             break;
 103:src/kernel.cpp ****         case 0x13:
 104:src/kernel.cpp ****             Kernel::thread_dispatch_handler();
 105:src/kernel.cpp ****             break;
 106:src/kernel.cpp ****         case 0x14:
GAS LISTING /tmp/ccsl6Ocq.s 			page 9


 107:src/kernel.cpp ****             Kernel::thread_create_deactivated_handler();
 108:src/kernel.cpp ****             break;
 109:src/kernel.cpp ****         case 0x21:
 110:src/kernel.cpp ****             Kernel::sem_open_handler();
 111:src/kernel.cpp ****             break;
 112:src/kernel.cpp ****         case 0x22:
 113:src/kernel.cpp ****             Kernel::sem_close_handler();
 114:src/kernel.cpp ****             break;
 115:src/kernel.cpp ****         case 0x23:
 116:src/kernel.cpp ****             Kernel::sem_wait_handler();
 117:src/kernel.cpp ****             break;
 118:src/kernel.cpp ****         case 0x24:
 119:src/kernel.cpp ****             Kernel::sem_signal_handler();
 120:src/kernel.cpp ****             break;
 121:src/kernel.cpp ****         case 0x31:
 122:src/kernel.cpp ****             Kernel::time_sleep_handler();
 123:src/kernel.cpp ****             break;
 124:src/kernel.cpp ****         case 0x41:
 125:src/kernel.cpp ****             Kernel::getc_handler();
 126:src/kernel.cpp ****             break;
 127:src/kernel.cpp ****         case 0x42:
 128:src/kernel.cpp ****             Kernel::putc_handler();
 129:src/kernel.cpp ****             break;
 130:src/kernel.cpp ****         default:
 131:src/kernel.cpp ****             asm volatile ("addi a0, zero, -1");
 132:src/kernel.cpp ****             __print_string("Error: Invalid syscall id!");
 133:src/kernel.cpp ****             break;
 134:src/kernel.cpp ****     }
 135:src/kernel.cpp ****     //RiscV::writeSepc(sepc);
 136:src/kernel.cpp **** }
 192              		.loc 1 136 1
 193 008c 8330810A 		ld	ra,168(sp)
 194              		.cfi_remember_state
 195              		.cfi_restore 1
 196 0090 0334010A 		ld	s0,160(sp)
 197              		.cfi_restore 8
 198              		.cfi_def_cfa 2, 176
 199 0094 83348109 		ld	s1,152(sp)
 200              		.cfi_restore 9
 201 0098 1301010B 		addi	sp,sp,176
 202              		.cfi_def_cfa_offset 0
 203 009c 67800000 		jr	ra
 204              	.L17:
 205              		.cfi_restore_state
  94:src/kernel.cpp ****             Kernel::mem_free_handler();
 206              		.loc 1 94 9 is_stmt 1
  95:src/kernel.cpp ****             break;
 207              		.loc 1 95 13
 208              	.LBB102:
 209              	.LBB103:
  45:src/../h/kernel.hpp **** }
  46:src/../h/kernel.hpp **** 
  47:src/../h/kernel.hpp **** 
  48:src/../h/kernel.hpp **** 
  49:src/../h/kernel.hpp **** //0x02
  50:src/../h/kernel.hpp **** inline void Kernel::mem_free_handler() {
  51:src/../h/kernel.hpp ****     volatile uint64 arg0;
GAS LISTING /tmp/ccsl6Ocq.s 			page 10


 210              		.loc 3 51 5
  52:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 211              		.loc 3 52 5
 212              		.loc 3 52 55 is_stmt 0
 213              	#APP
 214              	# 52 "src/../h/kernel.hpp" 1
  53              	    MemoryAllocator::free((void*)arg0);
 215              		mv a5, a0
 216              	# 0 "" 2
 217              	#NO_APP
 218 00a4 2330F4F6 		sd	a5,-160(s0)
 219              		.loc 3 53 5 is_stmt 1
 220              		.loc 3 53 26 is_stmt 0
 221 00a8 033504F6 		ld	a0,-160(s0)
 222 00ac 97000000 		call	_ZN15MemoryAllocator4freeEPv@plt
 222      E7800000 
 223              	.LVL4:
  54:src/../h/kernel.hpp **** }
 224              		.loc 3 54 1
 225 00b4 6FF09FFD 		j	.L3
 226              	.L16:
 227              	.LBE103:
 228              	.LBE102:
  97:src/kernel.cpp ****             Kernel::thread_create_handler();
 229              		.loc 1 97 9 is_stmt 1
  98:src/kernel.cpp ****             break;
 230              		.loc 1 98 13
 231              	.LBB104:
 232              	.LBB105:
  55:src/../h/kernel.hpp **** 
  56:src/../h/kernel.hpp **** 
  57:src/../h/kernel.hpp **** 
  58:src/../h/kernel.hpp **** //0x11
  59:src/../h/kernel.hpp **** inline void Kernel::thread_create_handler() {
  60:src/../h/kernel.hpp ****     volatile uint64 arg0, arg1, arg2;
 233              		.loc 3 60 5
  61:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 234              		.loc 3 61 5
 235              		.loc 3 61 55 is_stmt 0
 236              	#APP
 237              	# 61 "src/../h/kernel.hpp" 1
  62              	    asm volatile ("mv %[arg1], a1": [arg1] "=r"(arg1));
 238              		mv a5, a0
 239              	# 0 "" 2
 240              	#NO_APP
 241 00bc 2338F4F8 		sd	a5,-112(s0)
 242              		.loc 3 62 5 is_stmt 1
 243              		.loc 3 62 55 is_stmt 0
 244              	#APP
 245              	# 62 "src/../h/kernel.hpp" 1
  63              	    asm volatile ("mv %[arg2], a2": [arg2] "=r"(arg2));
 246              		mv a5, a1
 247              	# 0 "" 2
 248              	#NO_APP
 249 00c4 233CF4F8 		sd	a5,-104(s0)
 250              		.loc 3 63 5 is_stmt 1
 251              		.loc 3 63 55 is_stmt 0
GAS LISTING /tmp/ccsl6Ocq.s 			page 11


 252              	#APP
 253              	# 63 "src/../h/kernel.hpp" 1
  64              	
 254              		mv a5, a2
 255              	# 0 "" 2
 256              	#NO_APP
 257 00cc 2330F4FA 		sd	a5,-96(s0)
  65:src/../h/kernel.hpp ****     *(TCB**)arg0 = TCB::createTCB((TCB::Body)arg1, (void*)arg2);
 258              		.loc 3 65 5 is_stmt 1
 259              		.loc 3 65 34 is_stmt 0
 260 00d0 033584F9 		ld	a0,-104(s0)
 261 00d4 833504FA 		ld	a1,-96(s0)
 262              		.loc 3 65 5
 263 00d8 833404F9 		ld	s1,-112(s0)
 264              		.loc 3 65 34
 265 00dc 97000000 		call	_ZN3TCB9createTCBEPFvPvES0_@plt
 265      E7800000 
 266              	.LVL5:
 267              		.loc 3 65 18
 268 00e4 23B0A400 		sd	a0,0(s1)
  66:src/../h/kernel.hpp **** 
  67:src/../h/kernel.hpp ****     asm volatile("mv a0, zero");
 269              		.loc 3 67 5 is_stmt 1
 270              		.loc 3 67 32 is_stmt 0
 271              	#APP
 272              	# 67 "src/../h/kernel.hpp" 1
  68              	    if (!(*(TCB**)arg0)) asm volatile("addi a0, a0, -1");
 273              		mv a0, zero
 274              	# 0 "" 2
 275              		.loc 3 68 5 is_stmt 1
 276              		.loc 3 68 11 is_stmt 0
 277              	#NO_APP
 278 00ec 833704F9 		ld	a5,-112(s0)
 279 00f0 83B70700 		ld	a5,0(a5)
 280              		.loc 3 68 5
 281 00f4 E39C07F8 		bnez	a5,.L3
 282              		.loc 3 68 26 is_stmt 1
 283              		.loc 3 68 57 is_stmt 0
 284              	#APP
 285              	# 68 "src/../h/kernel.hpp" 1
  69              	}
 286              		addi a0, a0, -1
 287              	# 0 "" 2
 288              		.loc 3 69 1
 289              	#NO_APP
 290 00fc 6FF01FF9 		j	.L3
 291              	.L15:
 292              	.LBE105:
 293              	.LBE104:
 100:src/kernel.cpp ****             Kernel::thread_exit_handler();
 294              		.loc 1 100 9 is_stmt 1
 101:src/kernel.cpp ****             break;
 295              		.loc 1 101 13
 296              	.LBB106:
 297              	.LBB107:
  70:src/../h/kernel.hpp **** 
  71:src/../h/kernel.hpp **** 
GAS LISTING /tmp/ccsl6Ocq.s 			page 12


  72:src/../h/kernel.hpp **** 
  73:src/../h/kernel.hpp **** //0x12
  74:src/../h/kernel.hpp **** inline void Kernel::thread_exit_handler() {
  75:src/../h/kernel.hpp ****     TCB::running->setFinished(true);
 298              		.loc 3 75 5
 299              		.loc 3 75 30 is_stmt 0
 300 0100 97070000 		la	a5,_ZN3TCB7runningE
 300      83B70700 
 301 0108 83B70700 		ld	a5,0(a5)
 302              	.LVL6:
 303              	.LBB108:
 304              	.LBB109:
 305              		.file 4 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by os on 9/9/22.
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OSMIUM_TCB_HPP
   6:src/../h/tcb.hpp **** #define OSMIUM_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** //#include "../h/scheduler.hpp"
  10:src/../h/tcb.hpp **** #include "riscv.hpp"
  11:src/../h/tcb.hpp **** #include "memory_allocator.hpp"
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp **** class Scheduler;
  14:src/../h/tcb.hpp **** 
  15:src/../h/tcb.hpp **** 
  16:src/../h/tcb.hpp **** class TCB {
  17:src/../h/tcb.hpp **** public:
  18:src/../h/tcb.hpp ****     using Body = void (*)(void*);
  19:src/../h/tcb.hpp **** 
  20:src/../h/tcb.hpp ****     static TCB* createTCB(Body body, void* args);
  21:src/../h/tcb.hpp **** 
  22:src/../h/tcb.hpp ****     static TCB* createDeactivatedTCB(Body body, void* args);
  23:src/../h/tcb.hpp **** 
  24:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  25:src/../h/tcb.hpp **** 
  26:src/../h/tcb.hpp ****     void setFinished(bool val) { finished = val; }
 306              		.loc 4 26 34 is_stmt 1
 307              		.loc 4 26 43 is_stmt 0
 308 010c 13071000 		li	a4,1
 309 0110 238CE700 		sb	a4,24(a5)
 310              	.LVL7:
 311              	.LBE109:
 312              	.LBE108:
  76:src/../h/kernel.hpp ****     asm volatile ("addi a0, zero, 0");
 313              		.loc 3 76 5 is_stmt 1
 314              		.loc 3 76 38 is_stmt 0
 315              	#APP
 316              	# 76 "src/../h/kernel.hpp" 1
  77              	    //TCB::yield();
  78:src/../h/kernel.hpp ****     TCB::dispatch();
 317              		addi a0, zero, 0
 318              	# 0 "" 2
 319              		.loc 3 78 5 is_stmt 1
 320              		.loc 3 78 18 is_stmt 0
GAS LISTING /tmp/ccsl6Ocq.s 			page 13


 321              	#NO_APP
 322 0118 97000000 		call	_ZN3TCB8dispatchEv@plt
 322      E7800000 
 323              	.LVL8:
  79:src/../h/kernel.hpp **** }
 324              		.loc 3 79 1
 325 0120 6FF0DFF6 		j	.L3
 326              	.L14:
 327              	.LBE107:
 328              	.LBE106:
 103:src/kernel.cpp ****             Kernel::thread_dispatch_handler();
 329              		.loc 1 103 9 is_stmt 1
 104:src/kernel.cpp ****             break;
 330              		.loc 1 104 13
 331              	.LBB110:
 332              	.LBB111:
  80:src/../h/kernel.hpp **** 
  81:src/../h/kernel.hpp **** 
  82:src/../h/kernel.hpp **** 
  83:src/../h/kernel.hpp **** //0x13
  84:src/../h/kernel.hpp **** inline void Kernel::thread_dispatch_handler() {
  85:src/../h/kernel.hpp ****     //TCB::yield();
  86:src/../h/kernel.hpp ****     TCB::dispatch();
 333              		.loc 3 86 5
 334              		.loc 3 86 18 is_stmt 0
 335 0124 97000000 		call	_ZN3TCB8dispatchEv@plt
 335      E7800000 
 336              	.LVL9:
  87:src/../h/kernel.hpp **** }
 337              		.loc 3 87 1
 338 012c 6FF01FF6 		j	.L3
 339              	.L13:
 340              	.LBE111:
 341              	.LBE110:
 106:src/kernel.cpp ****             Kernel::thread_create_deactivated_handler();
 342              		.loc 1 106 9 is_stmt 1
 107:src/kernel.cpp ****             break;
 343              		.loc 1 107 13
 344              	.LBB112:
 345              	.LBB113:
  88:src/../h/kernel.hpp **** 
  89:src/../h/kernel.hpp **** 
  90:src/../h/kernel.hpp **** //0x14
  91:src/../h/kernel.hpp **** inline void Kernel::thread_create_deactivated_handler() {
  92:src/../h/kernel.hpp ****     volatile uint64 arg0, arg1, arg2;
 346              		.loc 3 92 5
  93:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 347              		.loc 3 93 5
 348              		.loc 3 93 55 is_stmt 0
 349              	#APP
 350              	# 93 "src/../h/kernel.hpp" 1
  94              	    asm volatile ("mv %[arg1], a1": [arg1] "=r"(arg1));
 351              		mv a5, a0
 352              	# 0 "" 2
 353              	#NO_APP
 354 0134 2334F4FA 		sd	a5,-88(s0)
 355              		.loc 3 94 5 is_stmt 1
GAS LISTING /tmp/ccsl6Ocq.s 			page 14


 356              		.loc 3 94 55 is_stmt 0
 357              	#APP
 358              	# 94 "src/../h/kernel.hpp" 1
  95              	    asm volatile ("mv %[arg2], a2": [arg2] "=r"(arg2));
 359              		mv a5, a1
 360              	# 0 "" 2
 361              	#NO_APP
 362 013c 2338F4FA 		sd	a5,-80(s0)
 363              		.loc 3 95 5 is_stmt 1
 364              		.loc 3 95 55 is_stmt 0
 365              	#APP
 366              	# 95 "src/../h/kernel.hpp" 1
  96              	
 367              		mv a5, a2
 368              	# 0 "" 2
 369              	#NO_APP
 370 0144 233CF4FA 		sd	a5,-72(s0)
  97:src/../h/kernel.hpp ****     *(TCB**)arg0 = TCB::createDeactivatedTCB((TCB::Body)arg1, (void*)arg2);
 371              		.loc 3 97 5 is_stmt 1
 372              		.loc 3 97 45 is_stmt 0
 373 0148 033504FB 		ld	a0,-80(s0)
 374 014c 833584FB 		ld	a1,-72(s0)
 375              		.loc 3 97 5
 376 0150 833484FA 		ld	s1,-88(s0)
 377              		.loc 3 97 45
 378 0154 97000000 		call	_ZN3TCB20createDeactivatedTCBEPFvPvES0_@plt
 378      E7800000 
 379              	.LVL10:
 380              		.loc 3 97 18
 381 015c 23B0A400 		sd	a0,0(s1)
  98:src/../h/kernel.hpp **** 
  99:src/../h/kernel.hpp ****     asm volatile("mv a0, zero");
 382              		.loc 3 99 5 is_stmt 1
 383              		.loc 3 99 32 is_stmt 0
 384              	#APP
 385              	# 99 "src/../h/kernel.hpp" 1
 100              	    if (!(*(TCB**)arg0)) asm volatile("addi a0, a0, -1");
 386              		mv a0, zero
 387              	# 0 "" 2
 388              		.loc 3 100 5 is_stmt 1
 389              		.loc 3 100 11 is_stmt 0
 390              	#NO_APP
 391 0164 833784FA 		ld	a5,-88(s0)
 392 0168 83B70700 		ld	a5,0(a5)
 393              		.loc 3 100 5
 394 016c E39007F2 		bnez	a5,.L3
 395              		.loc 3 100 26 is_stmt 1
 396              		.loc 3 100 57 is_stmt 0
 397              	#APP
 398              	# 100 "src/../h/kernel.hpp" 1
 101              	}
 399              		addi a0, a0, -1
 400              	# 0 "" 2
 401              		.loc 3 101 1
 402              	#NO_APP
 403 0174 6FF09FF1 		j	.L3
 404              	.L12:
GAS LISTING /tmp/ccsl6Ocq.s 			page 15


 405              	.LBE113:
 406              	.LBE112:
 109:src/kernel.cpp ****             Kernel::sem_open_handler();
 407              		.loc 1 109 9 is_stmt 1
 110:src/kernel.cpp ****             break;
 408              		.loc 1 110 13
 409              	.LBB114:
 410              	.LBB115:
 102:src/../h/kernel.hpp **** 
 103:src/../h/kernel.hpp **** 
 104:src/../h/kernel.hpp **** 
 105:src/../h/kernel.hpp **** //0x021
 106:src/../h/kernel.hpp **** inline void Kernel::sem_open_handler() {
 107:src/../h/kernel.hpp ****     volatile uint64 arg0, arg1;
 411              		.loc 3 107 5
 108:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 412              		.loc 3 108 5
 413              		.loc 3 108 55 is_stmt 0
 414              	#APP
 415              	# 108 "src/../h/kernel.hpp" 1
 109              	    asm volatile ("mv %[arg1], a1": [arg1] "=r"(arg1));
 416              		mv a5, a0
 417              	# 0 "" 2
 418              	#NO_APP
 419 017c 2330F4FC 		sd	a5,-64(s0)
 420              		.loc 3 109 5 is_stmt 1
 421              		.loc 3 109 55 is_stmt 0
 422              	#APP
 423              	# 109 "src/../h/kernel.hpp" 1
 110              	
 424              		mv a5, a1
 425              	# 0 "" 2
 426              	#NO_APP
 427 0184 2334F4FC 		sd	a5,-56(s0)
 111:src/../h/kernel.hpp ****     *(Sem**)arg0 = Sem::createSem((unsigned)arg1);
 428              		.loc 3 111 5 is_stmt 1
 429              		.loc 3 111 34 is_stmt 0
 430 0188 033584FC 		ld	a0,-56(s0)
 431              		.loc 3 111 5
 432 018c 833404FC 		ld	s1,-64(s0)
 433              		.loc 3 111 34
 434 0190 1B050500 		sext.w	a0,a0
 435 0194 97000000 		call	_ZN3Sem9createSemEj@plt
 435      E7800000 
 436              	.LVL11:
 437              		.loc 3 111 18
 438 019c 23B0A400 		sd	a0,0(s1)
 112:src/../h/kernel.hpp **** 
 113:src/../h/kernel.hpp ****     asm volatile("mv a0, zero");
 439              		.loc 3 113 5 is_stmt 1
 440              		.loc 3 113 32 is_stmt 0
 441              	#APP
 442              	# 113 "src/../h/kernel.hpp" 1
 114              	    if (!(*(Sem**)arg0)) asm volatile("addi a0, a0, -1");
 443              		mv a0, zero
 444              	# 0 "" 2
 445              		.loc 3 114 5 is_stmt 1
GAS LISTING /tmp/ccsl6Ocq.s 			page 16


 446              		.loc 3 114 11 is_stmt 0
 447              	#NO_APP
 448 01a4 833704FC 		ld	a5,-64(s0)
 449 01a8 83B70700 		ld	a5,0(a5)
 450              		.loc 3 114 5
 451 01ac E39007EE 		bnez	a5,.L3
 452              		.loc 3 114 26 is_stmt 1
 453              		.loc 3 114 57 is_stmt 0
 454              	#APP
 455              	# 114 "src/../h/kernel.hpp" 1
 115              	}
 456              		addi a0, a0, -1
 457              	# 0 "" 2
 458              		.loc 3 115 1
 459              	#NO_APP
 460 01b4 6FF09FED 		j	.L3
 461              	.L11:
 462              	.LBE115:
 463              	.LBE114:
 112:src/kernel.cpp ****             Kernel::sem_close_handler();
 464              		.loc 1 112 9 is_stmt 1
 113:src/kernel.cpp ****             break;
 465              		.loc 1 113 13
 466              	.LBB116:
 467              	.LBB117:
 116:src/../h/kernel.hpp **** 
 117:src/../h/kernel.hpp **** 
 118:src/../h/kernel.hpp **** 
 119:src/../h/kernel.hpp **** //0x22
 120:src/../h/kernel.hpp **** inline void Kernel::sem_close_handler() {
 121:src/../h/kernel.hpp ****     volatile uint64 arg0;
 468              		.loc 3 121 5
 122:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 469              		.loc 3 122 5
 470              		.loc 3 122 55 is_stmt 0
 471              	#APP
 472              	# 122 "src/../h/kernel.hpp" 1
 123              	    delete *(Sem**)arg0;
 473              		mv a5, a0
 474              	# 0 "" 2
 475              	#NO_APP
 476 01bc 2338F4FC 		sd	a5,-48(s0)
 477              		.loc 3 123 5 is_stmt 1
 478              		.loc 3 123 12 is_stmt 0
 479 01c0 833704FD 		ld	a5,-48(s0)
 480 01c4 83B40700 		ld	s1,0(a5)
 481              		.loc 3 123 24
 482 01c8 638E0400 		beqz	s1,.L23
 483              		.loc 3 123 20
 484 01cc 13850400 		mv	a0,s1
 485 01d0 97000000 		call	_ZN3SemD1Ev@plt
 485      E7800000 
 486              	.LVL12:
 487              	.LBB118:
 488              	.LBB119:
 489              		.file 5 "src/../h/sem.hpp"
   1:src/../h/sem.hpp **** //
GAS LISTING /tmp/ccsl6Ocq.s 			page 17


   2:src/../h/sem.hpp **** // Created by os on 9/12/22.
   3:src/../h/sem.hpp **** //
   4:src/../h/sem.hpp **** 
   5:src/../h/sem.hpp **** #ifndef OSMIUM_SEM_HPP
   6:src/../h/sem.hpp **** #define OSMIUM_SEM_HPP
   7:src/../h/sem.hpp **** 
   8:src/../h/sem.hpp **** #include "../lib/hw.h"
   9:src/../h/sem.hpp **** #include "tcb.hpp"
  10:src/../h/sem.hpp **** #include "../h/list.hpp"
  11:src/../h/sem.hpp **** #include "../h/scheduler.hpp"
  12:src/../h/sem.hpp **** 
  13:src/../h/sem.hpp **** class Sem {
  14:src/../h/sem.hpp **** public:
  15:src/../h/sem.hpp ****     static Sem* createSem(unsigned init);
  16:src/../h/sem.hpp **** 
  17:src/../h/sem.hpp ****     ~Sem();
  18:src/../h/sem.hpp **** 
  19:src/../h/sem.hpp ****     int semWait();
  20:src/../h/sem.hpp **** 
  21:src/../h/sem.hpp ****     int semSignal();
  22:src/../h/sem.hpp **** 
  23:src/../h/sem.hpp ****     void* operator new(size_t size) {
  24:src/../h/sem.hpp ****         return MemoryAllocator::allocate(size);
  25:src/../h/sem.hpp ****     }
  26:src/../h/sem.hpp **** 
  27:src/../h/sem.hpp ****     void* operator new[](size_t size) {
  28:src/../h/sem.hpp ****         return MemoryAllocator::allocate(size);
  29:src/../h/sem.hpp ****     }
  30:src/../h/sem.hpp **** 
  31:src/../h/sem.hpp ****     void operator delete(void* ptr) {
  32:src/../h/sem.hpp ****         MemoryAllocator::free(ptr);
 490              		.loc 5 32 9 is_stmt 1
 491              		.loc 5 32 30 is_stmt 0
 492 01d8 13850400 		mv	a0,s1
 493 01dc 97000000 		call	_ZN15MemoryAllocator4freeEPv@plt
 493      E7800000 
 494              	.LVL13:
 495              	.L23:
 496              	.LBE119:
 497              	.LBE118:
 124:src/../h/kernel.hpp **** 
 125:src/../h/kernel.hpp ****     asm volatile("mv a0, zero");
 498              		.loc 3 125 5 is_stmt 1
 499              		.loc 3 125 32 is_stmt 0
 500              	#APP
 501              	# 125 "src/../h/kernel.hpp" 1
 126              	}
 502              		mv a0, zero
 503              	# 0 "" 2
 504              		.loc 3 126 1
 505              	#NO_APP
 506 01e8 6FF05FEA 		j	.L3
 507              	.L10:
 508              	.LBE117:
 509              	.LBE116:
 115:src/kernel.cpp ****             Kernel::sem_wait_handler();
 510              		.loc 1 115 9 is_stmt 1
GAS LISTING /tmp/ccsl6Ocq.s 			page 18


 116:src/kernel.cpp ****             break;
 511              		.loc 1 116 13
 512              	.LBB120:
 513              	.LBB121:
 127:src/../h/kernel.hpp **** 
 128:src/../h/kernel.hpp **** 
 129:src/../h/kernel.hpp **** 
 130:src/../h/kernel.hpp **** //0x23
 131:src/../h/kernel.hpp **** inline void Kernel::sem_wait_handler() {
 132:src/../h/kernel.hpp ****     volatile uint64 arg0;
 514              		.loc 3 132 5
 133:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 515              		.loc 3 133 5
 516              		.loc 3 133 55 is_stmt 0
 517              	#APP
 518              	# 133 "src/../h/kernel.hpp" 1
 134              	    ((Sem*)arg0)->semWait();
 519              		mv a5, a0
 520              	# 0 "" 2
 521              	#NO_APP
 522 01f0 2334F4F6 		sd	a5,-152(s0)
 523              		.loc 3 134 5 is_stmt 1
 524              		.loc 3 134 26 is_stmt 0
 525 01f4 033584F6 		ld	a0,-152(s0)
 526 01f8 97000000 		call	_ZN3Sem7semWaitEv@plt
 526      E7800000 
 527              	.LVL14:
 135:src/../h/kernel.hpp **** 
 136:src/../h/kernel.hpp ****     //asm volatile("mv a0, zero");
 137:src/../h/kernel.hpp **** }
 528              		.loc 3 137 1
 529 0200 6FF0DFE8 		j	.L3
 530              	.L9:
 531              	.LBE121:
 532              	.LBE120:
 118:src/kernel.cpp ****             Kernel::sem_signal_handler();
 533              		.loc 1 118 9 is_stmt 1
 119:src/kernel.cpp ****             break;
 534              		.loc 1 119 13
 535              	.LBB122:
 536              	.LBB123:
 138:src/../h/kernel.hpp **** 
 139:src/../h/kernel.hpp **** 
 140:src/../h/kernel.hpp **** 
 141:src/../h/kernel.hpp **** //0x24
 142:src/../h/kernel.hpp **** inline void Kernel::sem_signal_handler() {
 143:src/../h/kernel.hpp ****     volatile uint64 arg0;
 537              		.loc 3 143 5
 144:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 538              		.loc 3 144 5
 539              		.loc 3 144 55 is_stmt 0
 540              	#APP
 541              	# 144 "src/../h/kernel.hpp" 1
 145              	    ((Sem*)arg0)->semSignal();
 542              		mv a5, a0
 543              	# 0 "" 2
 544              	#NO_APP
GAS LISTING /tmp/ccsl6Ocq.s 			page 19


 545 0208 2338F4F6 		sd	a5,-144(s0)
 546              		.loc 3 145 5 is_stmt 1
 547              		.loc 3 145 28 is_stmt 0
 548 020c 033504F7 		ld	a0,-144(s0)
 549 0210 97000000 		call	_ZN3Sem9semSignalEv@plt
 549      E7800000 
 550              	.LVL15:
 146:src/../h/kernel.hpp **** }
 551              		.loc 3 146 1
 552 0218 6FF05FE7 		j	.L3
 553              	.L8:
 554              	.LBE123:
 555              	.LBE122:
 121:src/kernel.cpp ****             Kernel::time_sleep_handler();
 556              		.loc 1 121 9 is_stmt 1
 122:src/kernel.cpp ****             break;
 557              		.loc 1 122 13
 558              	.LBB124:
 559              	.LBB125:
 147:src/../h/kernel.hpp **** 
 148:src/../h/kernel.hpp **** 
 149:src/../h/kernel.hpp **** 
 150:src/../h/kernel.hpp **** //0x31
 151:src/../h/kernel.hpp **** inline void Kernel::time_sleep_handler() {
 152:src/../h/kernel.hpp ****     volatile uint64 arg0;
 560              		.loc 3 152 5
 153:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 561              		.loc 3 153 5
 562              		.loc 3 153 55 is_stmt 0
 563              	#APP
 564              	# 153 "src/../h/kernel.hpp" 1
 154              	    Scheduler::timeSleep((time_t)arg0);
 565              		mv a5, a0
 566              	# 0 "" 2
 567              	#NO_APP
 568 0220 233CF4F6 		sd	a5,-136(s0)
 569              		.loc 3 154 5 is_stmt 1
 570              		.loc 3 154 25 is_stmt 0
 571 0224 033584F7 		ld	a0,-136(s0)
 572 0228 97000000 		call	_ZN9Scheduler9timeSleepEm@plt
 572      E7800000 
 573              	.LVL16:
 155:src/../h/kernel.hpp **** }
 574              		.loc 3 155 1
 575 0230 6FF0DFE5 		j	.L3
 576              	.L7:
 577              	.LBE125:
 578              	.LBE124:
 124:src/kernel.cpp ****             Kernel::getc_handler();
 579              		.loc 1 124 9 is_stmt 1
 125:src/kernel.cpp ****             break;
 580              		.loc 1 125 13
 581              	.LBB126:
 582              	.LBB127:
 156:src/../h/kernel.hpp **** 
 157:src/../h/kernel.hpp **** 
 158:src/../h/kernel.hpp **** 
GAS LISTING /tmp/ccsl6Ocq.s 			page 20


 159:src/../h/kernel.hpp **** //0x41
 160:src/../h/kernel.hpp **** inline void Kernel::getc_handler() {
 161:src/../h/kernel.hpp ****     volatile uint64 arg0;
 583              		.loc 3 161 5
 162:src/../h/kernel.hpp ****     arg0 = __getc();
 584              		.loc 3 162 5
 585              		.loc 3 162 18 is_stmt 0
 586 0234 97000000 		call	__getc@plt
 586      E7800000 
 587              	.LVL17:
 588              		.loc 3 162 10
 589 023c 2330A4F8 		sd	a0,-128(s0)
 163:src/../h/kernel.hpp ****     asm volatile ("mv a0, %[arg0]":: [arg0] "r"(arg0));
 590              		.loc 3 163 5 is_stmt 1
 591              		.loc 3 163 49 is_stmt 0
 592 0240 833704F8 		ld	a5,-128(s0)
 593              		.loc 3 163 55
 594              	#APP
 595              	# 163 "src/../h/kernel.hpp" 1
 164              	}
 596              		mv a0, a5
 597              	# 0 "" 2
 598              		.loc 3 164 1
 599              	#NO_APP
 600 0248 6FF05FE4 		j	.L3
 601              	.L5:
 602              	.LBE127:
 603              	.LBE126:
 127:src/kernel.cpp ****             Kernel::putc_handler();
 604              		.loc 1 127 9 is_stmt 1
 128:src/kernel.cpp ****             break;
 605              		.loc 1 128 13
 606              	.LBB128:
 607              	.LBB129:
 165:src/../h/kernel.hpp **** 
 166:src/../h/kernel.hpp **** 
 167:src/../h/kernel.hpp **** 
 168:src/../h/kernel.hpp **** //0x42
 169:src/../h/kernel.hpp **** inline void Kernel::putc_handler() {
 170:src/../h/kernel.hpp ****     volatile uint64 arg0;
 608              		.loc 3 170 5
 171:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 609              		.loc 3 171 5
 610              		.loc 3 171 55 is_stmt 0
 611              	#APP
 612              	# 171 "src/../h/kernel.hpp" 1
 172              	    __putc(arg0);
 613              		mv a5, a0
 614              	# 0 "" 2
 615              	#NO_APP
 616 0250 2334F4F8 		sd	a5,-120(s0)
 617              		.loc 3 172 5 is_stmt 1
 618              		.loc 3 172 11 is_stmt 0
 619 0254 033584F8 		ld	a0,-120(s0)
 620 0258 1375F50F 		andi	a0,a0,0xff
 621 025c 97000000 		call	__putc@plt
 621      E7800000 
GAS LISTING /tmp/ccsl6Ocq.s 			page 21


 622              	.LVL18:
 173:src/../h/kernel.hpp **** }
 623              		.loc 3 173 1
 624 0264 6FF09FE2 		j	.L3
 625              	.L4:
 626              	.LBE129:
 627              	.LBE128:
 130:src/kernel.cpp ****             asm volatile ("addi a0, zero, -1");
 628              		.loc 1 130 9 is_stmt 1
 131:src/kernel.cpp ****             __print_string("Error: Invalid syscall id!");
 629              		.loc 1 131 13
 131:src/kernel.cpp ****             __print_string("Error: Invalid syscall id!");
 630              		.loc 1 131 47 is_stmt 0
 631              	#APP
 632              	# 131 "src/kernel.cpp" 1
 132:src/kernel.cpp ****             break;
 633              		addi a0, zero, -1
 634              	# 0 "" 2
 635              		.loc 1 132 13 is_stmt 1
 132:src/kernel.cpp ****             break;
 636              		.loc 1 132 27 is_stmt 0
 637              	#NO_APP
 638 026c 17050000 		lla	a0,.LC0
 638      13050500 
 639 0274 97000000 		call	_Z14__print_stringPKc@plt
 639      E7800000 
 640              	.LVL19:
 133:src/kernel.cpp ****     }
 641              		.loc 1 133 13 is_stmt 1
 642              		.loc 1 136 1 is_stmt 0
 643 027c 6FF01FE1 		j	.L3
 644              		.cfi_endproc
 645              	.LFE70:
 647              		.section	.rodata.str1.8
 648 001b 00000000 		.align	3
 648      00
 649              	.LC1:
 650 0020 4E656F62 		.string	"Neobradjen izuzetak.\n"
 650      7261646A 
 650      656E2069 
 650      7A757A65 
 650      74616B2E 
 651 0036 0000     		.align	3
 652              	.LC2:
 653 0038 73636175 		.string	"scause: "
 653      73653A20 
 653      00
 654 0041 00000000 		.align	3
 654      000000
 655              	.LC3:
 656 0048 73657063 		.string	"sepc: "
 656      3A2000
 657              		.text
 658              		.align	2
 659              		.globl	_ZN6Kernel21supervisorTrapHandlerEv
 661              	_ZN6Kernel21supervisorTrapHandlerEv:
 662              	.LFB69:
GAS LISTING /tmp/ccsl6Ocq.s 			page 22


  20:src/kernel.cpp ****     uint64 scause = RiscV::readScause();
 663              		.loc 1 20 38 is_stmt 1
 664              		.cfi_startproc
 665 0280 130101FB 		addi	sp,sp,-80
 666              		.cfi_def_cfa_offset 80
 667 0284 23341104 		sd	ra,72(sp)
 668 0288 23308104 		sd	s0,64(sp)
 669 028c 233C9102 		sd	s1,56(sp)
 670 0290 23382103 		sd	s2,48(sp)
 671              		.cfi_offset 1, -8
 672              		.cfi_offset 8, -16
 673              		.cfi_offset 9, -24
 674              		.cfi_offset 18, -32
 675 0294 13040105 		addi	s0,sp,80
 676              		.cfi_def_cfa 8, 0
  21:src/kernel.cpp **** 
 677              		.loc 1 21 5
 678              	.LBB130:
 679              	.LBB131:
  83:src/../h/riscv.hpp ****     asm volatile("csrr %[scause], scause": [scause] "=r" (scause));
 680              		.loc 2 83 5
  84:src/../h/riscv.hpp ****     return scause;
 681              		.loc 2 84 5
  84:src/../h/riscv.hpp ****     return scause;
 682              		.loc 2 84 67 is_stmt 0
 683              	#APP
 684              	# 84 "src/../h/riscv.hpp" 1
 685              		csrr a5, scause
 686              	# 0 "" 2
 687              	#NO_APP
 688 029c 2338F4FA 		sd	a5,-80(s0)
  85:src/../h/riscv.hpp **** }
 689              		.loc 2 85 5 is_stmt 1
  85:src/../h/riscv.hpp **** }
 690              		.loc 2 85 12 is_stmt 0
 691 02a0 833404FB 		ld	s1,-80(s0)
 692              	.LVL20:
 693              	.LBE131:
 694              	.LBE130:
  23:src/kernel.cpp ****         uint64 sepc = RiscV::readSepc() + 4;
 695              		.loc 1 23 5 is_stmt 1
 696              	.LBB132:
  23:src/kernel.cpp ****         uint64 sepc = RiscV::readSepc() + 4;
 697              		.loc 1 23 40 is_stmt 0
 698 02a4 138784FF 		addi	a4,s1,-8
  23:src/kernel.cpp ****         uint64 sepc = RiscV::readSepc() + 4;
 699              		.loc 1 23 5
 700 02a8 93071000 		li	a5,1
 701 02ac 63F6E70A 		bleu	a4,a5,.L33
 702              	.LBE132:
  44:src/kernel.cpp ****         if (!TCB::running) { RiscV::clearSip(RiscV::SSIP); return; }
 703              		.loc 1 44 5 is_stmt 1
 704              	.LBB142:
 705 02b0 9307F0FF 		li	a5,-1
 706 02b4 9397F703 		slli	a5,a5,63
 707 02b8 93871700 		addi	a5,a5,1
 708 02bc 6388F40C 		beq	s1,a5,.L34
GAS LISTING /tmp/ccsl6Ocq.s 			page 23


 709              	.LBE142:
  60:src/kernel.cpp ****         console_handler();
 710              		.loc 1 60 5
 711 02c0 9307F0FF 		li	a5,-1
 712 02c4 9397F703 		slli	a5,a5,63
 713 02c8 93879700 		addi	a5,a5,9
 714 02cc 6388F414 		beq	s1,a5,.L35
  66:src/kernel.cpp ****     __print_string("Neobradjen izuzetak.\n");
 715              		.loc 1 66 5
 716              	.LBB166:
 717              	.LBB167:
  93:src/../h/riscv.hpp ****     asm volatile("csrr %[sepc], sepc": [sepc] "=r" (sepc));
 718              		.loc 2 93 5
  94:src/../h/riscv.hpp ****     return sepc;
 719              		.loc 2 94 5
  94:src/../h/riscv.hpp ****     return sepc;
 720              		.loc 2 94 59 is_stmt 0
 721              	#APP
 722              	# 94 "src/../h/riscv.hpp" 1
 723              		csrr a5, sepc
 724              	# 0 "" 2
 725              	#NO_APP
 726 02d4 233CF4FC 		sd	a5,-40(s0)
  95:src/../h/riscv.hpp **** }
 727              		.loc 2 95 5 is_stmt 1
  95:src/../h/riscv.hpp **** }
 728              		.loc 2 95 12 is_stmt 0
 729 02d8 033984FD 		ld	s2,-40(s0)
 730              	.LVL21:
 731              	.LBE167:
 732              	.LBE166:
  67:src/kernel.cpp ****     __print_string("scause: ");
 733              		.loc 1 67 5 is_stmt 1
  67:src/kernel.cpp ****     __print_string("scause: ");
 734              		.loc 1 67 19 is_stmt 0
 735 02dc 17050000 		lla	a0,.LC1
 735      13050500 
 736 02e4 97000000 		call	_Z14__print_stringPKc@plt
 736      E7800000 
 737              	.LVL22:
  68:src/kernel.cpp ****     //scause = RiscV::readScause();
 738              		.loc 1 68 5 is_stmt 1
  68:src/kernel.cpp ****     //scause = RiscV::readScause();
 739              		.loc 1 68 19 is_stmt 0
 740 02ec 17050000 		lla	a0,.LC2
 740      13050500 
 741 02f4 97000000 		call	_Z14__print_stringPKc@plt
 741      E7800000 
 742              	.LVL23:
  70:src/kernel.cpp ****     __putc('\n');
 743              		.loc 1 70 5 is_stmt 1
  70:src/kernel.cpp ****     __putc('\n');
 744              		.loc 1 70 19 is_stmt 0
 745 02fc 13850400 		mv	a0,s1
 746 0300 97000000 		call	_Z14__print_uint64m@plt
 746      E7800000 
 747              	.LVL24:
GAS LISTING /tmp/ccsl6Ocq.s 			page 24


  71:src/kernel.cpp ****     //__print_string("Neobradjen izuzetak.\n");
 748              		.loc 1 71 5 is_stmt 1
  71:src/kernel.cpp ****     //__print_string("Neobradjen izuzetak.\n");
 749              		.loc 1 71 11 is_stmt 0
 750 0308 1305A000 		li	a0,10
 751 030c 97000000 		call	__putc@plt
 751      E7800000 
 752              	.LVL25:
  73:src/kernel.cpp ****     //scause = RiscV::readScause();
 753              		.loc 1 73 5 is_stmt 1
  73:src/kernel.cpp ****     //scause = RiscV::readScause();
 754              		.loc 1 73 19 is_stmt 0
 755 0314 17050000 		lla	a0,.LC3
 755      13050500 
 756 031c 97000000 		call	_Z14__print_stringPKc@plt
 756      E7800000 
 757              	.LVL26:
  75:src/kernel.cpp ****     __putc('\n');
 758              		.loc 1 75 5 is_stmt 1
  75:src/kernel.cpp ****     __putc('\n');
 759              		.loc 1 75 19 is_stmt 0
 760 0324 13050900 		mv	a0,s2
 761 0328 97000000 		call	_Z14__print_uint64m@plt
 761      E7800000 
 762              	.LVL27:
  76:src/kernel.cpp ****     /*RiscV::clearSip(RiscV::SSIP);
 763              		.loc 1 76 5 is_stmt 1
  76:src/kernel.cpp ****     /*RiscV::clearSip(RiscV::SSIP);
 764              		.loc 1 76 11 is_stmt 0
 765 0330 1305A000 		li	a0,10
 766 0334 97000000 		call	__putc@plt
 766      E7800000 
 767              	.LVL28:
  80:src/kernel.cpp ****     return;
 768              		.loc 1 80 5 is_stmt 1
 769              	.LBB168:
 770              	.LBB169:
  99:src/../h/riscv.hpp **** }
 771              		.loc 2 99 5
  99:src/../h/riscv.hpp **** }
 772              		.loc 2 99 59 is_stmt 0
 773              	#APP
 774              	# 99 "src/../h/riscv.hpp" 1
 775              		csrw sepc, s2
 776              	# 0 "" 2
 777              	.LVL29:
 778              	#NO_APP
 779              	.L25:
 780              	.LBE169:
 781              	.LBE168:
  82:src/kernel.cpp **** 
 782              		.loc 1 82 1
 783 0340 83308104 		ld	ra,72(sp)
 784              		.cfi_remember_state
 785              		.cfi_restore 1
 786 0344 03340104 		ld	s0,64(sp)
 787              		.cfi_restore 8
GAS LISTING /tmp/ccsl6Ocq.s 			page 25


 788              		.cfi_def_cfa 2, 80
 789 0348 83348103 		ld	s1,56(sp)
 790              		.cfi_restore 9
 791 034c 03390103 		ld	s2,48(sp)
 792              		.cfi_restore 18
 793 0350 13010105 		addi	sp,sp,80
 794              		.cfi_def_cfa_offset 0
 795 0354 67800000 		jr	ra
 796              	.LVL30:
 797              	.L33:
 798              		.cfi_restore_state
 799              	.LBB170:
 800              	.LBB133:
  24:src/kernel.cpp ****         uint64 sstatus = RiscV::readSstatus();
 801              		.loc 1 24 9 is_stmt 1
 802              	.LBB134:
 803              	.LBB135:
  93:src/../h/riscv.hpp ****     asm volatile("csrr %[sepc], sepc": [sepc] "=r" (sepc));
 804              		.loc 2 93 5
  94:src/../h/riscv.hpp ****     return sepc;
 805              		.loc 2 94 5
  94:src/../h/riscv.hpp ****     return sepc;
 806              		.loc 2 94 59 is_stmt 0
 807              	#APP
 808              	# 94 "src/../h/riscv.hpp" 1
 809              		csrr a5, sepc
 810              	# 0 "" 2
 811              	#NO_APP
 812 035c 2330F4FC 		sd	a5,-64(s0)
  95:src/../h/riscv.hpp **** }
 813              		.loc 2 95 5 is_stmt 1
  95:src/../h/riscv.hpp **** }
 814              		.loc 2 95 12 is_stmt 0
 815 0360 833404FC 		ld	s1,-64(s0)
 816              	.LVL31:
 817              	.LBE135:
 818              	.LBE134:
  24:src/kernel.cpp ****         uint64 sstatus = RiscV::readSstatus();
 819              		.loc 1 24 43
 820 0364 93844400 		addi	s1,s1,4
 821              	.LVL32:
  25:src/kernel.cpp **** 
 822              		.loc 1 25 9 is_stmt 1
 823              	.LBB136:
 824              	.LBB137:
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp **** inline void RiscV::setSstatus(uint64 mask) {
 113:src/../h/riscv.hpp ****     asm volatile("csrs sstatus, %[mask]":: [mask] "r" (mask));
 114:src/../h/riscv.hpp **** }
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp **** inline void RiscV::clearSstatus(uint64 mask) {
 117:src/../h/riscv.hpp ****     asm volatile("csrc sstatus, %[mask]":: [mask] "r" (mask));
 118:src/../h/riscv.hpp **** }
 119:src/../h/riscv.hpp **** 
 120:src/../h/riscv.hpp **** inline uint64 RiscV::readSstatus() {
 121:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 825              		.loc 2 121 5
GAS LISTING /tmp/ccsl6Ocq.s 			page 26


 122:src/../h/riscv.hpp ****     asm volatile("csrr %[sstatus], sstatus": [sstatus] "=r" (sstatus));
 826              		.loc 2 122 5
 827              		.loc 2 122 71 is_stmt 0
 828              	#APP
 829              	# 122 "src/../h/riscv.hpp" 1
 123              	    return sstatus;
 830              		csrr a5, sstatus
 831              	# 0 "" 2
 832              	#NO_APP
 833 036c 233CF4FA 		sd	a5,-72(s0)
 834              		.loc 2 123 5 is_stmt 1
 835              		.loc 2 123 12 is_stmt 0
 836 0370 033984FB 		ld	s2,-72(s0)
 837              	.LVL33:
 838              	.LBE137:
 839              	.LBE136:
  27:src/kernel.cpp **** 
 840              		.loc 1 27 9 is_stmt 1
  27:src/kernel.cpp **** 
 841              		.loc 1 27 24 is_stmt 0
 842 0374 97000000 		call	_ZN6Kernel15syscall_handlerEv
 842      E7800000 
 843              	.LVL34:
  29:src/kernel.cpp ****         RiscV::writeSstatus(sstatus);
 844              		.loc 1 29 9 is_stmt 1
  29:src/kernel.cpp ****         RiscV::writeSstatus(sstatus);
 845              		.loc 1 29 39 is_stmt 0
 846              	#APP
 847              	# 29 "src/kernel.cpp" 1
  30:src/kernel.cpp ****         RiscV::writeSepc(sepc);
 848              		sd a0, 80(s0)
 849              	# 0 "" 2
 850              		.loc 1 30 9 is_stmt 1
 851              	.LVL35:
 852              	#NO_APP
 853              	.LBB138:
 854              	.LBB139:
 124:src/../h/riscv.hpp **** }
 125:src/../h/riscv.hpp **** 
 126:src/../h/riscv.hpp **** inline void RiscV::writeSstatus(uint64 sstatus) {
 127:src/../h/riscv.hpp ****     asm volatile("csrw sstatus, %[sstatus]":: [sstatus] "r" (sstatus));
 855              		.loc 2 127 5
 856              		.loc 2 127 71 is_stmt 0
 857              	#APP
 858              	# 127 "src/../h/riscv.hpp" 1
 128              	}
 859              		csrw sstatus, s2
 860              	# 0 "" 2
 861              	.LVL36:
 862              	#NO_APP
 863              	.LBE139:
 864              	.LBE138:
  31:src/kernel.cpp ****         return;
 865              		.loc 1 31 9 is_stmt 1
 866              	.LBB140:
 867              	.LBB141:
  99:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccsl6Ocq.s 			page 27


 868              		.loc 2 99 5
  99:src/../h/riscv.hpp **** }
 869              		.loc 2 99 59 is_stmt 0
 870              	#APP
 871              	# 99 "src/../h/riscv.hpp" 1
 872              		csrw sepc, s1
 873              	# 0 "" 2
 874              	.LVL37:
 875              	#NO_APP
 876              	.LBE141:
 877              	.LBE140:
  32:src/kernel.cpp ****     }
 878              		.loc 1 32 9 is_stmt 1
 879 0388 6FF09FFB 		j	.L25
 880              	.LVL38:
 881              	.L34:
 882              	.LBE133:
 883              	.LBE170:
 884              	.LBB171:
 885              	.LBB143:
  45:src/kernel.cpp ****         Scheduler::timerInterrupt();
 886              		.loc 1 45 9
  45:src/kernel.cpp ****         Scheduler::timerInterrupt();
 887              		.loc 1 45 13 is_stmt 0
 888 038c 97070000 		la	a5,_ZN3TCB7runningE
 888      83B70700 
 889 0394 83B70700 		ld	a5,0(a5)
  45:src/kernel.cpp ****         Scheduler::timerInterrupt();
 890              		.loc 1 45 9
 891 0398 63800704 		beqz	a5,.L36
  46:src/kernel.cpp ****         TCB::incTimeSliceCounter();
 892              		.loc 1 46 9 is_stmt 1
  46:src/kernel.cpp ****         TCB::incTimeSliceCounter();
 893              		.loc 1 46 34 is_stmt 0
 894 039c 97000000 		call	_ZN9Scheduler14timerInterruptEv@plt
 894      E7800000 
 895              	.LVL39:
  47:src/kernel.cpp ****         if (TCB::getTimeSliceCounter() >= TCB::running->getTimeSlice())
 896              		.loc 1 47 9 is_stmt 1
 897              	.LBB144:
 898              	.LBB145:
  27:src/../h/tcb.hpp **** 
  28:src/../h/tcb.hpp ****     bool isBlocked() const { return blocked; }
  29:src/../h/tcb.hpp **** 
  30:src/../h/tcb.hpp ****     void setBlocked(bool val) { blocked = val; }
  31:src/../h/tcb.hpp **** 
  32:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  33:src/../h/tcb.hpp **** 
  34:src/../h/tcb.hpp ****     static TCB* running;
  35:src/../h/tcb.hpp **** 
  36:src/../h/tcb.hpp ****     //static void yield();
  37:src/../h/tcb.hpp **** 
  38:src/../h/tcb.hpp ****     static void dispatch();
  39:src/../h/tcb.hpp **** 
  40:src/../h/tcb.hpp ****     static void incTimeSliceCounter() { timeSliceCounter++; }
 899              		.loc 4 40 41
 900              		.loc 4 40 57 is_stmt 0
GAS LISTING /tmp/ccsl6Ocq.s 			page 28


 901 03a4 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 901      03370700 
 902 03ac 83370700 		ld	a5,0(a4)
 903 03b0 93871700 		addi	a5,a5,1
 904 03b4 2330F700 		sd	a5,0(a4)
 905              	.LBE145:
 906              	.LBE144:
  48:src/kernel.cpp ****         {
 907              		.loc 1 48 9 is_stmt 1
 908              	.LBE143:
 909              	.LBE171:
  41:src/../h/tcb.hpp ****     static uint64 getTimeSliceCounter() { return timeSliceCounter; }
 910              		.loc 4 41 43
 911              	.LBB172:
 912              	.LBB165:
 913              	.LBB146:
  48:src/kernel.cpp ****         {
 914              		.loc 1 48 69 is_stmt 0
 915 03b8 17070000 		la	a4,_ZN3TCB7runningE
 915      03370700 
 916 03c0 03370700 		ld	a4,0(a4)
 917              	.LVL40:
 918              	.LBB147:
 919              	.LBB148:
  32:src/../h/tcb.hpp **** 
 920              		.loc 4 32 35 is_stmt 1
  32:src/../h/tcb.hpp **** 
 921              		.loc 4 32 42 is_stmt 0
 922 03c4 03370702 		ld	a4,32(a4)
 923              	.LVL41:
 924              	.LBE148:
 925              	.LBE147:
  48:src/kernel.cpp ****         {
 926              		.loc 1 48 9
 927 03c8 63FEE700 		bleu	a4,a5,.L37
 928              	.LVL42:
 929              	.L30:
 930              	.LBE146:
  57:src/kernel.cpp ****         return;
 931              		.loc 1 57 9 is_stmt 1
 932              	.LBB160:
 933              	.LBB161:
 129:src/../h/riscv.hpp **** 
 130:src/../h/riscv.hpp **** inline void RiscV::setSip(uint64 mask) {
 131:src/../h/riscv.hpp ****     asm volatile("csrs sip, %[mask]":: [mask] "r" (mask));
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline void RiscV::clearSip(uint64 mask) {
 135:src/../h/riscv.hpp ****     asm volatile("csrc sip, %[mask]":: [mask] "r" (mask));
 934              		.loc 2 135 5
 935              		.loc 2 135 58 is_stmt 0
 936 03cc 93072000 		li	a5,2
 937              	#APP
 938              	# 135 "src/../h/riscv.hpp" 1
 136              	}
 939              		csrc sip, a5
 940              	# 0 "" 2
GAS LISTING /tmp/ccsl6Ocq.s 			page 29


 941              	.LVL43:
 942              	#NO_APP
 943              	.LBE161:
 944              	.LBE160:
  58:src/kernel.cpp ****     }
 945              		.loc 1 58 9 is_stmt 1
 946 03d4 6FF0DFF6 		j	.L25
 947              	.LVL44:
 948              	.L36:
  45:src/kernel.cpp ****         Scheduler::timerInterrupt();
 949              		.loc 1 45 30
 950              	.LBB162:
 951              	.LBB163:
 135:src/../h/riscv.hpp **** }
 952              		.loc 2 135 5
 135:src/../h/riscv.hpp **** }
 953              		.loc 2 135 58 is_stmt 0
 954 03d8 93072000 		li	a5,2
 955              	#APP
 956              	# 135 "src/../h/riscv.hpp" 1
 957              		csrc sip, a5
 958              	# 0 "" 2
 959              	.LVL45:
 960              	#NO_APP
 961              	.LBE163:
 962              	.LBE162:
  45:src/kernel.cpp ****         Scheduler::timerInterrupt();
 963              		.loc 1 45 60 is_stmt 1
 964 03e0 6FF01FF6 		j	.L25
 965              	.L37:
 966              	.LBB164:
 967              	.LBB149:
  50:src/kernel.cpp ****             uint64 sstatus = RiscV::readSstatus();
 968              		.loc 1 50 13
 969              	.LBB150:
 970              	.LBB151:
  93:src/../h/riscv.hpp ****     asm volatile("csrr %[sepc], sepc": [sepc] "=r" (sepc));
 971              		.loc 2 93 5
  94:src/../h/riscv.hpp ****     return sepc;
 972              		.loc 2 94 5
  94:src/../h/riscv.hpp ****     return sepc;
 973              		.loc 2 94 59 is_stmt 0
 974              	#APP
 975              	# 94 "src/../h/riscv.hpp" 1
 976              		csrr a5, sepc
 977              	# 0 "" 2
 978              	#NO_APP
 979 03e8 2338F4FC 		sd	a5,-48(s0)
  95:src/../h/riscv.hpp **** }
 980              		.loc 2 95 5 is_stmt 1
  95:src/../h/riscv.hpp **** }
 981              		.loc 2 95 12 is_stmt 0
 982 03ec 833404FD 		ld	s1,-48(s0)
 983              	.LVL46:
 984              	.LBE151:
 985              	.LBE150:
  51:src/kernel.cpp ****             TCB::resetTimeSliceCounter();
GAS LISTING /tmp/ccsl6Ocq.s 			page 30


 986              		.loc 1 51 13 is_stmt 1
 987              	.LBB152:
 988              	.LBB153:
 121:src/../h/riscv.hpp ****     asm volatile("csrr %[sstatus], sstatus": [sstatus] "=r" (sstatus));
 989              		.loc 2 121 5
 122:src/../h/riscv.hpp ****     return sstatus;
 990              		.loc 2 122 5
 122:src/../h/riscv.hpp ****     return sstatus;
 991              		.loc 2 122 71 is_stmt 0
 992              	#APP
 993              	# 122 "src/../h/riscv.hpp" 1
 994              		csrr a5, sstatus
 995              	# 0 "" 2
 996              	#NO_APP
 997 03f4 2334F4FC 		sd	a5,-56(s0)
 123:src/../h/riscv.hpp **** }
 998              		.loc 2 123 5 is_stmt 1
 123:src/../h/riscv.hpp **** }
 999              		.loc 2 123 12 is_stmt 0
 1000 03f8 033984FC 		ld	s2,-56(s0)
 1001              	.LVL47:
 1002              	.LBE153:
 1003              	.LBE152:
  52:src/kernel.cpp ****             TCB::dispatch();
 1004              		.loc 1 52 13 is_stmt 1
 1005              	.LBB154:
 1006              	.LBB155:
  42:src/../h/tcb.hpp ****     static void resetTimeSliceCounter() { timeSliceCounter = 0; }
 1007              		.loc 4 42 43
 1008              		.loc 4 42 60 is_stmt 0
 1009 03fc 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 1009      83B70700 
 1010 0404 23B00700 		sd	zero,0(a5)
 1011              	.LBE155:
 1012              	.LBE154:
  53:src/kernel.cpp ****             RiscV::writeSstatus(sstatus);
 1013              		.loc 1 53 13 is_stmt 1
  53:src/kernel.cpp ****             RiscV::writeSstatus(sstatus);
 1014              		.loc 1 53 26 is_stmt 0
 1015 0408 97000000 		call	_ZN3TCB8dispatchEv@plt
 1015      E7800000 
 1016              	.LVL48:
  54:src/kernel.cpp ****             RiscV::writeSepc(sepc);
 1017              		.loc 1 54 13 is_stmt 1
 1018              	.LBB156:
 1019              	.LBB157:
 127:src/../h/riscv.hpp **** }
 1020              		.loc 2 127 5
 127:src/../h/riscv.hpp **** }
 1021              		.loc 2 127 71 is_stmt 0
 1022              	#APP
 1023              	# 127 "src/../h/riscv.hpp" 1
 1024              		csrw sstatus, s2
 1025              	# 0 "" 2
 1026              	.LVL49:
 1027              	#NO_APP
 1028              	.LBE157:
GAS LISTING /tmp/ccsl6Ocq.s 			page 31


 1029              	.LBE156:
  55:src/kernel.cpp ****         }
 1030              		.loc 1 55 13 is_stmt 1
 1031              	.LBB158:
 1032              	.LBB159:
  99:src/../h/riscv.hpp **** }
 1033              		.loc 2 99 5
  99:src/../h/riscv.hpp **** }
 1034              		.loc 2 99 59 is_stmt 0
 1035              	#APP
 1036              	# 99 "src/../h/riscv.hpp" 1
 100:src/../h/riscv.hpp **** 
 1037              		csrw sepc, s1
 1038              	# 0 "" 2
 1039              		.loc 2 100 1
 1040              	#NO_APP
 1041 0418 6FF05FFB 		j	.L30
 1042              	.LVL50:
 1043              	.L35:
 1044              	.LBE159:
 1045              	.LBE158:
 1046              	.LBE149:
 1047              	.LBE164:
 1048              	.LBE165:
 1049              	.LBE172:
  61:src/kernel.cpp ****         //ConsoleInterface::console_handler();
 1050              		.loc 1 61 9 is_stmt 1
  61:src/kernel.cpp ****         //ConsoleInterface::console_handler();
 1051              		.loc 1 61 24 is_stmt 0
 1052 041c 97000000 		call	console_handler@plt
 1052      E7800000 
 1053              	.LVL51:
  63:src/kernel.cpp ****     }
 1054              		.loc 1 63 9 is_stmt 1
 1055 0424 6FF0DFF1 		j	.L25
 1056              		.cfi_endproc
 1057              	.LFE69:
 1059              	.Letext0:
 1060              		.file 6 "src/../lib/hw.h"
 1061              		.file 7 "src/../h/memory_allocator.hpp"
 1062              		.file 8 "src/../h/../h/scheduler.hpp"
 1063              		.file 9 "src/../h/../h/list.hpp"
 1064              		.file 10 "src/../h/../lib/console.h"
 1065              		.file 11 "src/../h/__print.hpp"
 1066              		.file 12 "src/../h/../h/syscall_c.h"
GAS LISTING /tmp/ccsl6Ocq.s 			page 32


DEFINED SYMBOLS
                            *ABS*:0000000000000000 kernel.cpp
     /tmp/ccsl6Ocq.s:9      .text:0000000000000000 _ZN6Kernel10initKernelEv
     /tmp/ccsl6Ocq.s:13     .text:0000000000000000 .L0 
     /tmp/ccsl6Ocq.s:14     .text:0000000000000000 .L0 
     /tmp/ccsl6Ocq.s:15     .text:0000000000000004 .L0 
     /tmp/ccsl6Ocq.s:18     .text:000000000000000c .L0 
     /tmp/ccsl6Ocq.s:19     .text:000000000000000c .L0 
     /tmp/ccsl6Ocq.s:21     .text:0000000000000010 .L0 
     /tmp/ccsl6Ocq.s:23     .text:0000000000000010 .L0 
     /tmp/ccsl6Ocq.s:24     .text:0000000000000010 .L0 
     /tmp/ccsl6Ocq.s:27     .text:0000000000000018 .L0 
     /tmp/ccsl6Ocq.s:28     .text:0000000000000018 .L0 
     /tmp/ccsl6Ocq.s:34     .text:0000000000000020 .L0 
  src/../h/riscv.hpp:109    .text:0000000000000020 .L0 
     /tmp/ccsl6Ocq.s:44     .text:0000000000000024 .L0 
     /tmp/ccsl6Ocq.s:45     .text:0000000000000028 .L0 
     /tmp/ccsl6Ocq.s:47     .text:000000000000002c .L0 
     /tmp/ccsl6Ocq.s:48     .text:000000000000002c .L0 
     /tmp/ccsl6Ocq.s:50     .text:0000000000000030 .L0 
     /tmp/ccsl6Ocq.s:52     .text:0000000000000034 .L0 
     /tmp/ccsl6Ocq.s:63     .text:0000000000000034 _ZN6Kernel15syscall_handlerEv
     /tmp/ccsl6Ocq.s:66     .text:0000000000000034 .L0 
     /tmp/ccsl6Ocq.s:67     .text:0000000000000034 .L0 
     /tmp/ccsl6Ocq.s:68     .text:0000000000000038 .L0 
     /tmp/ccsl6Ocq.s:72     .text:0000000000000044 .L0 
     /tmp/ccsl6Ocq.s:73     .text:0000000000000044 .L0 
     /tmp/ccsl6Ocq.s:74     .text:0000000000000044 .L0 
     /tmp/ccsl6Ocq.s:76     .text:0000000000000048 .L0 
     /tmp/ccsl6Ocq.s:78     .text:0000000000000048 .L0 
     /tmp/ccsl6Ocq.s:79     .text:0000000000000048 .L0 
      src/kernel.cpp:87     .text:0000000000000048 .L0 
     /tmp/ccsl6Ocq.s:87     .text:0000000000000050 .L0 
     /tmp/ccsl6Ocq.s:88     .text:0000000000000050 .L0 
     /tmp/ccsl6Ocq.s:171    .text:0000000000000078 .L0 
     /tmp/ccsl6Ocq.s:175    .text:0000000000000078 .L0 
     /tmp/ccsl6Ocq.s:176    .text:0000000000000078 .L0 
     /tmp/ccsl6Ocq.s:177    .text:0000000000000078 .L0 
 src/../h/kernel.hpp:43     .text:0000000000000078 .L0 
     /tmp/ccsl6Ocq.s:185    .text:0000000000000080 .L0 
     /tmp/ccsl6Ocq.s:186    .text:0000000000000080 .L0 
     /tmp/ccsl6Ocq.s:193    .text:000000000000008c .L0 
     /tmp/ccsl6Ocq.s:194    .text:0000000000000090 .L0 
     /tmp/ccsl6Ocq.s:195    .text:0000000000000090 .L0 
     /tmp/ccsl6Ocq.s:197    .text:0000000000000094 .L0 
     /tmp/ccsl6Ocq.s:198    .text:0000000000000094 .L0 
     /tmp/ccsl6Ocq.s:200    .text:0000000000000098 .L0 
     /tmp/ccsl6Ocq.s:202    .text:000000000000009c .L0 
     /tmp/ccsl6Ocq.s:205    .text:00000000000000a0 .L0 
     /tmp/ccsl6Ocq.s:207    .text:00000000000000a0 .L0 
     /tmp/ccsl6Ocq.s:210    .text:00000000000000a0 .L0 
     /tmp/ccsl6Ocq.s:211    .text:00000000000000a0 .L0 
     /tmp/ccsl6Ocq.s:212    .text:00000000000000a0 .L0 
 src/../h/kernel.hpp:52     .text:00000000000000a0 .L0 
     /tmp/ccsl6Ocq.s:220    .text:00000000000000a8 .L0 
     /tmp/ccsl6Ocq.s:221    .text:00000000000000a8 .L0 
     /tmp/ccsl6Ocq.s:225    .text:00000000000000b4 .L0 
GAS LISTING /tmp/ccsl6Ocq.s 			page 33


     /tmp/ccsl6Ocq.s:230    .text:00000000000000b8 .L0 
     /tmp/ccsl6Ocq.s:233    .text:00000000000000b8 .L0 
     /tmp/ccsl6Ocq.s:234    .text:00000000000000b8 .L0 
     /tmp/ccsl6Ocq.s:235    .text:00000000000000b8 .L0 
 src/../h/kernel.hpp:61     .text:00000000000000b8 .L0 
     /tmp/ccsl6Ocq.s:243    .text:00000000000000c0 .L0 
 src/../h/kernel.hpp:62     .text:00000000000000c0 .L0 
     /tmp/ccsl6Ocq.s:251    .text:00000000000000c8 .L0 
 src/../h/kernel.hpp:63     .text:00000000000000c8 .L0 
     /tmp/ccsl6Ocq.s:259    .text:00000000000000d0 .L0 
     /tmp/ccsl6Ocq.s:260    .text:00000000000000d0 .L0 
     /tmp/ccsl6Ocq.s:263    .text:00000000000000d8 .L0 
     /tmp/ccsl6Ocq.s:265    .text:00000000000000dc .L0 
     /tmp/ccsl6Ocq.s:268    .text:00000000000000e4 .L0 
     /tmp/ccsl6Ocq.s:270    .text:00000000000000e8 .L0 
 src/../h/kernel.hpp:67     .text:00000000000000e8 .L0 
     /tmp/ccsl6Ocq.s:276    .text:00000000000000ec .L0 
     /tmp/ccsl6Ocq.s:278    .text:00000000000000ec .L0 
     /tmp/ccsl6Ocq.s:281    .text:00000000000000f4 .L0 
     /tmp/ccsl6Ocq.s:283    .text:00000000000000f8 .L0 
 src/../h/kernel.hpp:68     .text:00000000000000f8 .L0 
     /tmp/ccsl6Ocq.s:290    .text:00000000000000fc .L0 
     /tmp/ccsl6Ocq.s:295    .text:0000000000000100 .L0 
     /tmp/ccsl6Ocq.s:298    .text:0000000000000100 .L0 
     /tmp/ccsl6Ocq.s:299    .text:0000000000000100 .L0 
     /tmp/ccsl6Ocq.s:300    .text:0000000000000100 .L0 
     /tmp/ccsl6Ocq.s:307    .text:000000000000010c .L0 
     /tmp/ccsl6Ocq.s:308    .text:000000000000010c .L0 
     /tmp/ccsl6Ocq.s:314    .text:0000000000000114 .L0 
 src/../h/kernel.hpp:76     .text:0000000000000114 .L0 
     /tmp/ccsl6Ocq.s:320    .text:0000000000000118 .L0 
     /tmp/ccsl6Ocq.s:322    .text:0000000000000118 .L0 
     /tmp/ccsl6Ocq.s:325    .text:0000000000000120 .L0 
     /tmp/ccsl6Ocq.s:330    .text:0000000000000124 .L0 
     /tmp/ccsl6Ocq.s:333    .text:0000000000000124 .L0 
     /tmp/ccsl6Ocq.s:334    .text:0000000000000124 .L0 
     /tmp/ccsl6Ocq.s:335    .text:0000000000000124 .L0 
     /tmp/ccsl6Ocq.s:338    .text:000000000000012c .L0 
     /tmp/ccsl6Ocq.s:343    .text:0000000000000130 .L0 
     /tmp/ccsl6Ocq.s:346    .text:0000000000000130 .L0 
     /tmp/ccsl6Ocq.s:347    .text:0000000000000130 .L0 
     /tmp/ccsl6Ocq.s:348    .text:0000000000000130 .L0 
 src/../h/kernel.hpp:93     .text:0000000000000130 .L0 
     /tmp/ccsl6Ocq.s:356    .text:0000000000000138 .L0 
 src/../h/kernel.hpp:94     .text:0000000000000138 .L0 
     /tmp/ccsl6Ocq.s:364    .text:0000000000000140 .L0 
 src/../h/kernel.hpp:95     .text:0000000000000140 .L0 
     /tmp/ccsl6Ocq.s:372    .text:0000000000000148 .L0 
     /tmp/ccsl6Ocq.s:373    .text:0000000000000148 .L0 
     /tmp/ccsl6Ocq.s:376    .text:0000000000000150 .L0 
     /tmp/ccsl6Ocq.s:378    .text:0000000000000154 .L0 
     /tmp/ccsl6Ocq.s:381    .text:000000000000015c .L0 
     /tmp/ccsl6Ocq.s:383    .text:0000000000000160 .L0 
 src/../h/kernel.hpp:99     .text:0000000000000160 .L0 
     /tmp/ccsl6Ocq.s:389    .text:0000000000000164 .L0 
     /tmp/ccsl6Ocq.s:391    .text:0000000000000164 .L0 
     /tmp/ccsl6Ocq.s:394    .text:000000000000016c .L0 
GAS LISTING /tmp/ccsl6Ocq.s 			page 34


     /tmp/ccsl6Ocq.s:396    .text:0000000000000170 .L0 
 src/../h/kernel.hpp:100    .text:0000000000000170 .L0 
     /tmp/ccsl6Ocq.s:403    .text:0000000000000174 .L0 
     /tmp/ccsl6Ocq.s:408    .text:0000000000000178 .L0 
     /tmp/ccsl6Ocq.s:411    .text:0000000000000178 .L0 
     /tmp/ccsl6Ocq.s:412    .text:0000000000000178 .L0 
     /tmp/ccsl6Ocq.s:413    .text:0000000000000178 .L0 
 src/../h/kernel.hpp:108    .text:0000000000000178 .L0 
     /tmp/ccsl6Ocq.s:421    .text:0000000000000180 .L0 
 src/../h/kernel.hpp:109    .text:0000000000000180 .L0 
     /tmp/ccsl6Ocq.s:429    .text:0000000000000188 .L0 
     /tmp/ccsl6Ocq.s:430    .text:0000000000000188 .L0 
     /tmp/ccsl6Ocq.s:432    .text:000000000000018c .L0 
     /tmp/ccsl6Ocq.s:434    .text:0000000000000190 .L0 
     /tmp/ccsl6Ocq.s:438    .text:000000000000019c .L0 
     /tmp/ccsl6Ocq.s:440    .text:00000000000001a0 .L0 
 src/../h/kernel.hpp:113    .text:00000000000001a0 .L0 
     /tmp/ccsl6Ocq.s:446    .text:00000000000001a4 .L0 
     /tmp/ccsl6Ocq.s:448    .text:00000000000001a4 .L0 
     /tmp/ccsl6Ocq.s:451    .text:00000000000001ac .L0 
     /tmp/ccsl6Ocq.s:453    .text:00000000000001b0 .L0 
 src/../h/kernel.hpp:114    .text:00000000000001b0 .L0 
     /tmp/ccsl6Ocq.s:460    .text:00000000000001b4 .L0 
     /tmp/ccsl6Ocq.s:465    .text:00000000000001b8 .L0 
     /tmp/ccsl6Ocq.s:468    .text:00000000000001b8 .L0 
     /tmp/ccsl6Ocq.s:469    .text:00000000000001b8 .L0 
     /tmp/ccsl6Ocq.s:470    .text:00000000000001b8 .L0 
 src/../h/kernel.hpp:122    .text:00000000000001b8 .L0 
     /tmp/ccsl6Ocq.s:478    .text:00000000000001c0 .L0 
     /tmp/ccsl6Ocq.s:479    .text:00000000000001c0 .L0 
     /tmp/ccsl6Ocq.s:482    .text:00000000000001c8 .L0 
     /tmp/ccsl6Ocq.s:484    .text:00000000000001cc .L0 
     /tmp/ccsl6Ocq.s:491    .text:00000000000001d8 .L0 
     /tmp/ccsl6Ocq.s:492    .text:00000000000001d8 .L0 
     /tmp/ccsl6Ocq.s:499    .text:00000000000001e4 .L0 
 src/../h/kernel.hpp:125    .text:00000000000001e4 .L0 
     /tmp/ccsl6Ocq.s:506    .text:00000000000001e8 .L0 
     /tmp/ccsl6Ocq.s:511    .text:00000000000001ec .L0 
     /tmp/ccsl6Ocq.s:514    .text:00000000000001ec .L0 
     /tmp/ccsl6Ocq.s:515    .text:00000000000001ec .L0 
     /tmp/ccsl6Ocq.s:516    .text:00000000000001ec .L0 
 src/../h/kernel.hpp:133    .text:00000000000001ec .L0 
     /tmp/ccsl6Ocq.s:524    .text:00000000000001f4 .L0 
     /tmp/ccsl6Ocq.s:525    .text:00000000000001f4 .L0 
     /tmp/ccsl6Ocq.s:529    .text:0000000000000200 .L0 
     /tmp/ccsl6Ocq.s:534    .text:0000000000000204 .L0 
     /tmp/ccsl6Ocq.s:537    .text:0000000000000204 .L0 
     /tmp/ccsl6Ocq.s:538    .text:0000000000000204 .L0 
     /tmp/ccsl6Ocq.s:539    .text:0000000000000204 .L0 
 src/../h/kernel.hpp:144    .text:0000000000000204 .L0 
     /tmp/ccsl6Ocq.s:547    .text:000000000000020c .L0 
     /tmp/ccsl6Ocq.s:548    .text:000000000000020c .L0 
     /tmp/ccsl6Ocq.s:552    .text:0000000000000218 .L0 
     /tmp/ccsl6Ocq.s:557    .text:000000000000021c .L0 
     /tmp/ccsl6Ocq.s:560    .text:000000000000021c .L0 
     /tmp/ccsl6Ocq.s:561    .text:000000000000021c .L0 
     /tmp/ccsl6Ocq.s:562    .text:000000000000021c .L0 
GAS LISTING /tmp/ccsl6Ocq.s 			page 35


 src/../h/kernel.hpp:153    .text:000000000000021c .L0 
     /tmp/ccsl6Ocq.s:570    .text:0000000000000224 .L0 
     /tmp/ccsl6Ocq.s:571    .text:0000000000000224 .L0 
     /tmp/ccsl6Ocq.s:575    .text:0000000000000230 .L0 
     /tmp/ccsl6Ocq.s:580    .text:0000000000000234 .L0 
     /tmp/ccsl6Ocq.s:583    .text:0000000000000234 .L0 
     /tmp/ccsl6Ocq.s:584    .text:0000000000000234 .L0 
     /tmp/ccsl6Ocq.s:585    .text:0000000000000234 .L0 
     /tmp/ccsl6Ocq.s:586    .text:0000000000000234 .L0 
     /tmp/ccsl6Ocq.s:589    .text:000000000000023c .L0 
     /tmp/ccsl6Ocq.s:591    .text:0000000000000240 .L0 
     /tmp/ccsl6Ocq.s:592    .text:0000000000000240 .L0 
 src/../h/kernel.hpp:163    .text:0000000000000244 .L0 
     /tmp/ccsl6Ocq.s:600    .text:0000000000000248 .L0 
     /tmp/ccsl6Ocq.s:605    .text:000000000000024c .L0 
     /tmp/ccsl6Ocq.s:608    .text:000000000000024c .L0 
     /tmp/ccsl6Ocq.s:609    .text:000000000000024c .L0 
     /tmp/ccsl6Ocq.s:610    .text:000000000000024c .L0 
 src/../h/kernel.hpp:171    .text:000000000000024c .L0 
     /tmp/ccsl6Ocq.s:618    .text:0000000000000254 .L0 
     /tmp/ccsl6Ocq.s:619    .text:0000000000000254 .L0 
     /tmp/ccsl6Ocq.s:624    .text:0000000000000264 .L0 
     /tmp/ccsl6Ocq.s:629    .text:0000000000000268 .L0 
     /tmp/ccsl6Ocq.s:630    .text:0000000000000268 .L0 
      src/kernel.cpp:131    .text:0000000000000268 .L0 
     /tmp/ccsl6Ocq.s:636    .text:000000000000026c .L0 
     /tmp/ccsl6Ocq.s:638    .text:000000000000026c .L0 
     /tmp/ccsl6Ocq.s:642    .text:000000000000027c .L0 
     /tmp/ccsl6Ocq.s:643    .text:000000000000027c .L0 
     /tmp/ccsl6Ocq.s:644    .text:0000000000000280 .L0 
     /tmp/ccsl6Ocq.s:661    .text:0000000000000280 _ZN6Kernel21supervisorTrapHandlerEv
     /tmp/ccsl6Ocq.s:664    .text:0000000000000280 .L0 
     /tmp/ccsl6Ocq.s:665    .text:0000000000000280 .L0 
     /tmp/ccsl6Ocq.s:666    .text:0000000000000284 .L0 
     /tmp/ccsl6Ocq.s:671    .text:0000000000000294 .L0 
     /tmp/ccsl6Ocq.s:672    .text:0000000000000294 .L0 
     /tmp/ccsl6Ocq.s:673    .text:0000000000000294 .L0 
     /tmp/ccsl6Ocq.s:674    .text:0000000000000294 .L0 
     /tmp/ccsl6Ocq.s:676    .text:0000000000000298 .L0 
     /tmp/ccsl6Ocq.s:680    .text:0000000000000298 .L0 
     /tmp/ccsl6Ocq.s:681    .text:0000000000000298 .L0 
     /tmp/ccsl6Ocq.s:682    .text:0000000000000298 .L0 
  src/../h/riscv.hpp:84     .text:0000000000000298 .L0 
     /tmp/ccsl6Ocq.s:690    .text:00000000000002a0 .L0 
     /tmp/ccsl6Ocq.s:691    .text:00000000000002a0 .L0 
     /tmp/ccsl6Ocq.s:697    .text:00000000000002a4 .L0 
     /tmp/ccsl6Ocq.s:698    .text:00000000000002a4 .L0 
     /tmp/ccsl6Ocq.s:700    .text:00000000000002a8 .L0 
     /tmp/ccsl6Ocq.s:705    .text:00000000000002b0 .L0 
     /tmp/ccsl6Ocq.s:711    .text:00000000000002c0 .L0 
     /tmp/ccsl6Ocq.s:718    .text:00000000000002d0 .L0 
     /tmp/ccsl6Ocq.s:719    .text:00000000000002d0 .L0 
     /tmp/ccsl6Ocq.s:720    .text:00000000000002d0 .L0 
  src/../h/riscv.hpp:94     .text:00000000000002d0 .L0 
     /tmp/ccsl6Ocq.s:728    .text:00000000000002d8 .L0 
     /tmp/ccsl6Ocq.s:729    .text:00000000000002d8 .L0 
     /tmp/ccsl6Ocq.s:734    .text:00000000000002dc .L0 
GAS LISTING /tmp/ccsl6Ocq.s 			page 36


     /tmp/ccsl6Ocq.s:735    .text:00000000000002dc .L0 
     /tmp/ccsl6Ocq.s:739    .text:00000000000002ec .L0 
     /tmp/ccsl6Ocq.s:740    .text:00000000000002ec .L0 
     /tmp/ccsl6Ocq.s:744    .text:00000000000002fc .L0 
     /tmp/ccsl6Ocq.s:745    .text:00000000000002fc .L0 
     /tmp/ccsl6Ocq.s:749    .text:0000000000000308 .L0 
     /tmp/ccsl6Ocq.s:750    .text:0000000000000308 .L0 
     /tmp/ccsl6Ocq.s:754    .text:0000000000000314 .L0 
     /tmp/ccsl6Ocq.s:755    .text:0000000000000314 .L0 
     /tmp/ccsl6Ocq.s:759    .text:0000000000000324 .L0 
     /tmp/ccsl6Ocq.s:760    .text:0000000000000324 .L0 
     /tmp/ccsl6Ocq.s:764    .text:0000000000000330 .L0 
     /tmp/ccsl6Ocq.s:765    .text:0000000000000330 .L0 
     /tmp/ccsl6Ocq.s:771    .text:000000000000033c .L0 
     /tmp/ccsl6Ocq.s:772    .text:000000000000033c .L0 
  src/../h/riscv.hpp:99     .text:000000000000033c .L0 
     /tmp/ccsl6Ocq.s:783    .text:0000000000000340 .L0 
     /tmp/ccsl6Ocq.s:784    .text:0000000000000344 .L0 
     /tmp/ccsl6Ocq.s:785    .text:0000000000000344 .L0 
     /tmp/ccsl6Ocq.s:787    .text:0000000000000348 .L0 
     /tmp/ccsl6Ocq.s:788    .text:0000000000000348 .L0 
     /tmp/ccsl6Ocq.s:790    .text:000000000000034c .L0 
     /tmp/ccsl6Ocq.s:792    .text:0000000000000350 .L0 
     /tmp/ccsl6Ocq.s:794    .text:0000000000000354 .L0 
     /tmp/ccsl6Ocq.s:798    .text:0000000000000358 .L0 
     /tmp/ccsl6Ocq.s:804    .text:0000000000000358 .L0 
     /tmp/ccsl6Ocq.s:805    .text:0000000000000358 .L0 
     /tmp/ccsl6Ocq.s:806    .text:0000000000000358 .L0 
  src/../h/riscv.hpp:94     .text:0000000000000358 .L0 
     /tmp/ccsl6Ocq.s:814    .text:0000000000000360 .L0 
     /tmp/ccsl6Ocq.s:815    .text:0000000000000360 .L0 
     /tmp/ccsl6Ocq.s:820    .text:0000000000000364 .L0 
     /tmp/ccsl6Ocq.s:825    .text:0000000000000368 .L0 
     /tmp/ccsl6Ocq.s:826    .text:0000000000000368 .L0 
     /tmp/ccsl6Ocq.s:827    .text:0000000000000368 .L0 
  src/../h/riscv.hpp:122    .text:0000000000000368 .L0 
     /tmp/ccsl6Ocq.s:835    .text:0000000000000370 .L0 
     /tmp/ccsl6Ocq.s:836    .text:0000000000000370 .L0 
     /tmp/ccsl6Ocq.s:841    .text:0000000000000374 .L0 
     /tmp/ccsl6Ocq.s:842    .text:0000000000000374 .L0 
     /tmp/ccsl6Ocq.s:845    .text:000000000000037c .L0 
      src/kernel.cpp:29     .text:000000000000037c .L0 
     /tmp/ccsl6Ocq.s:855    .text:0000000000000380 .L0 
     /tmp/ccsl6Ocq.s:856    .text:0000000000000380 .L0 
  src/../h/riscv.hpp:127    .text:0000000000000380 .L0 
     /tmp/ccsl6Ocq.s:868    .text:0000000000000384 .L0 
     /tmp/ccsl6Ocq.s:869    .text:0000000000000384 .L0 
  src/../h/riscv.hpp:99     .text:0000000000000384 .L0 
     /tmp/ccsl6Ocq.s:879    .text:0000000000000388 .L0 
     /tmp/ccsl6Ocq.s:887    .text:000000000000038c .L0 
     /tmp/ccsl6Ocq.s:888    .text:000000000000038c .L0 
     /tmp/ccsl6Ocq.s:891    .text:0000000000000398 .L0 
     /tmp/ccsl6Ocq.s:893    .text:000000000000039c .L0 
     /tmp/ccsl6Ocq.s:894    .text:000000000000039c .L0 
     /tmp/ccsl6Ocq.s:899    .text:00000000000003a4 .L0 
     /tmp/ccsl6Ocq.s:900    .text:00000000000003a4 .L0 
     /tmp/ccsl6Ocq.s:901    .text:00000000000003a4 .L0 
GAS LISTING /tmp/ccsl6Ocq.s 			page 37


     /tmp/ccsl6Ocq.s:910    .text:00000000000003b8 .L0 
     /tmp/ccsl6Ocq.s:914    .text:00000000000003b8 .L0 
     /tmp/ccsl6Ocq.s:915    .text:00000000000003b8 .L0 
     /tmp/ccsl6Ocq.s:921    .text:00000000000003c4 .L0 
     /tmp/ccsl6Ocq.s:922    .text:00000000000003c4 .L0 
     /tmp/ccsl6Ocq.s:927    .text:00000000000003c8 .L0 
     /tmp/ccsl6Ocq.s:934    .text:00000000000003cc .L0 
     /tmp/ccsl6Ocq.s:935    .text:00000000000003cc .L0 
     /tmp/ccsl6Ocq.s:936    .text:00000000000003cc .L0 
     /tmp/ccsl6Ocq.s:946    .text:00000000000003d4 .L0 
     /tmp/ccsl6Ocq.s:952    .text:00000000000003d8 .L0 
     /tmp/ccsl6Ocq.s:953    .text:00000000000003d8 .L0 
     /tmp/ccsl6Ocq.s:954    .text:00000000000003d8 .L0 
     /tmp/ccsl6Ocq.s:964    .text:00000000000003e0 .L0 
     /tmp/ccsl6Ocq.s:971    .text:00000000000003e4 .L0 
     /tmp/ccsl6Ocq.s:972    .text:00000000000003e4 .L0 
     /tmp/ccsl6Ocq.s:973    .text:00000000000003e4 .L0 
  src/../h/riscv.hpp:94     .text:00000000000003e4 .L0 
     /tmp/ccsl6Ocq.s:981    .text:00000000000003ec .L0 
     /tmp/ccsl6Ocq.s:982    .text:00000000000003ec .L0 
     /tmp/ccsl6Ocq.s:989    .text:00000000000003f0 .L0 
     /tmp/ccsl6Ocq.s:990    .text:00000000000003f0 .L0 
     /tmp/ccsl6Ocq.s:991    .text:00000000000003f0 .L0 
  src/../h/riscv.hpp:122    .text:00000000000003f0 .L0 
     /tmp/ccsl6Ocq.s:999    .text:00000000000003f8 .L0 
     /tmp/ccsl6Ocq.s:1000   .text:00000000000003f8 .L0 
     /tmp/ccsl6Ocq.s:1007   .text:00000000000003fc .L0 
     /tmp/ccsl6Ocq.s:1008   .text:00000000000003fc .L0 
     /tmp/ccsl6Ocq.s:1009   .text:00000000000003fc .L0 
     /tmp/ccsl6Ocq.s:1014   .text:0000000000000408 .L0 
     /tmp/ccsl6Ocq.s:1015   .text:0000000000000408 .L0 
     /tmp/ccsl6Ocq.s:1020   .text:0000000000000410 .L0 
     /tmp/ccsl6Ocq.s:1021   .text:0000000000000410 .L0 
  src/../h/riscv.hpp:127    .text:0000000000000410 .L0 
     /tmp/ccsl6Ocq.s:1033   .text:0000000000000414 .L0 
     /tmp/ccsl6Ocq.s:1034   .text:0000000000000414 .L0 
  src/../h/riscv.hpp:99     .text:0000000000000414 .L0 
     /tmp/ccsl6Ocq.s:1041   .text:0000000000000418 .L0 
     /tmp/ccsl6Ocq.s:1051   .text:000000000000041c .L0 
     /tmp/ccsl6Ocq.s:1052   .text:000000000000041c .L0 
     /tmp/ccsl6Ocq.s:1055   .text:0000000000000424 .L0 
     /tmp/ccsl6Ocq.s:1056   .text:0000000000000428 .L0 
     /tmp/ccsl6Ocq.s:1067   .text:0000000000000428 .L0 
     /tmp/ccsl6Ocq.s:28     .text:0000000000000018 .L0 
     /tmp/ccsl6Ocq.s:100    .rodata:0000000000000000 .L6
     /tmp/ccsl6Ocq.s:92     .text:0000000000000060 .L0 
     /tmp/ccsl6Ocq.s:300    .text:0000000000000100 .L0 
     /tmp/ccsl6Ocq.s:57     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccsl6Ocq.s:638    .text:000000000000026c .L0 
     /tmp/ccsl6Ocq.s:649    .rodata.str1.8:0000000000000020 .LC1
     /tmp/ccsl6Ocq.s:735    .text:00000000000002dc .L0 
     /tmp/ccsl6Ocq.s:652    .rodata.str1.8:0000000000000038 .LC2
     /tmp/ccsl6Ocq.s:740    .text:00000000000002ec .L0 
     /tmp/ccsl6Ocq.s:655    .rodata.str1.8:0000000000000048 .LC3
     /tmp/ccsl6Ocq.s:755    .text:0000000000000314 .L0 
     /tmp/ccsl6Ocq.s:888    .text:000000000000038c .L0 
     /tmp/ccsl6Ocq.s:901    .text:00000000000003a4 .L0 
GAS LISTING /tmp/ccsl6Ocq.s 			page 38


     /tmp/ccsl6Ocq.s:915    .text:00000000000003b8 .L0 
     /tmp/ccsl6Ocq.s:1009   .text:00000000000003fc .L0 
     /tmp/ccsl6Ocq.s:625    .text:0000000000000268 .L4
     /tmp/ccsl6Ocq.s:189    .text:000000000000008c .L3
     /tmp/ccsl6Ocq.s:495    .text:00000000000001e4 .L23
     /tmp/ccsl6Ocq.s:797    .text:0000000000000358 .L33
     /tmp/ccsl6Ocq.s:881    .text:000000000000038c .L34
     /tmp/ccsl6Ocq.s:1043   .text:000000000000041c .L35
     /tmp/ccsl6Ocq.s:779    .text:0000000000000340 .L25
     /tmp/ccsl6Ocq.s:948    .text:00000000000003d8 .L36
     /tmp/ccsl6Ocq.s:965    .text:00000000000003e4 .L37
     /tmp/ccsl6Ocq.s:929    .text:00000000000003cc .L30
     /tmp/ccsl6Ocq.s:169    .text:0000000000000078 .L18
     /tmp/ccsl6Ocq.s:204    .text:00000000000000a0 .L17
     /tmp/ccsl6Ocq.s:226    .text:00000000000000b8 .L16
     /tmp/ccsl6Ocq.s:291    .text:0000000000000100 .L15
     /tmp/ccsl6Ocq.s:326    .text:0000000000000124 .L14
     /tmp/ccsl6Ocq.s:339    .text:0000000000000130 .L13
     /tmp/ccsl6Ocq.s:404    .text:0000000000000178 .L12
     /tmp/ccsl6Ocq.s:461    .text:00000000000001b8 .L11
     /tmp/ccsl6Ocq.s:507    .text:00000000000001ec .L10
     /tmp/ccsl6Ocq.s:530    .text:0000000000000204 .L9
     /tmp/ccsl6Ocq.s:553    .text:000000000000021c .L8
     /tmp/ccsl6Ocq.s:576    .text:0000000000000234 .L7
     /tmp/ccsl6Ocq.s:601    .text:000000000000024c .L5
     /tmp/ccsl6Ocq.s:3493   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccsl6Ocq.s:5175   .debug_str:0000000000000ce6 .LASF231
     /tmp/ccsl6Ocq.s:4847   .debug_str:00000000000001db .LASF232
     /tmp/ccsl6Ocq.s:5133   .debug_str:0000000000000b97 .LASF233
     /tmp/ccsl6Ocq.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccsl6Ocq.s:1059   .text:0000000000000428 .Letext0
     /tmp/ccsl6Ocq.s:4793   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccsl6Ocq.s:4949   .debug_str:0000000000000530 .LASF0
     /tmp/ccsl6Ocq.s:4979   .debug_str:000000000000064e .LASF1
     /tmp/ccsl6Ocq.s:5101   .debug_str:0000000000000a77 .LASF2
     /tmp/ccsl6Ocq.s:5111   .debug_str:0000000000000ac5 .LASF4
     /tmp/ccsl6Ocq.s:4955   .debug_str:000000000000055f .LASF3
     /tmp/ccsl6Ocq.s:4813   .debug_str:00000000000000ae .LASF5
     /tmp/ccsl6Ocq.s:5079   .debug_str:00000000000009f7 .LASF6
     /tmp/ccsl6Ocq.s:5065   .debug_str:000000000000095a .LASF7
     /tmp/ccsl6Ocq.s:4969   .debug_str:0000000000000600 .LASF8
     /tmp/ccsl6Ocq.s:4917   .debug_str:00000000000003e6 .LASF9
     /tmp/ccsl6Ocq.s:4929   .debug_str:000000000000045c .LASF10
     /tmp/ccsl6Ocq.s:4855   .debug_str:000000000000022b .LASF11
     /tmp/ccsl6Ocq.s:4907   .debug_str:00000000000003b1 .LASF12
     /tmp/ccsl6Ocq.s:4871   .debug_str:00000000000002a3 .LASF13
     /tmp/ccsl6Ocq.s:4853   .debug_str:000000000000021b .LASF14
     /tmp/ccsl6Ocq.s:5149   .debug_str:0000000000000c2b .LASF15
     /tmp/ccsl6Ocq.s:4895   .debug_str:0000000000000345 .LASF16
     /tmp/ccsl6Ocq.s:5139   .debug_str:0000000000000bd7 .LASF17
     /tmp/ccsl6Ocq.s:5055   .debug_str:00000000000008f8 .LASF33
     /tmp/ccsl6Ocq.s:5169   .debug_str:0000000000000cca .LASF234
     /tmp/ccsl6Ocq.s:4977   .debug_str:0000000000000649 .LASF18
     /tmp/ccsl6Ocq.s:4825   .debug_str:0000000000000133 .LASF19
     /tmp/ccsl6Ocq.s:4857   .debug_str:000000000000023a .LASF20
     /tmp/ccsl6Ocq.s:5271   .debug_str:00000000000010b5 .LASF70
     /tmp/ccsl6Ocq.s:4927   .debug_str:000000000000043c .LASF72
GAS LISTING /tmp/ccsl6Ocq.s 			page 39


     /tmp/ccsl6Ocq.s:5195   .debug_str:0000000000000e29 .LASF25
     /tmp/ccsl6Ocq.s:4959   .debug_str:0000000000000582 .LASF27
     /tmp/ccsl6Ocq.s:5017   .debug_str:00000000000007a7 .LASF21
     /tmp/ccsl6Ocq.s:5117   .debug_str:0000000000000aeb .LASF23
     /tmp/ccsl6Ocq.s:5099   .debug_str:0000000000000a6e .LASF22
     /tmp/ccsl6Ocq.s:5063   .debug_str:000000000000093a .LASF24
     /tmp/ccsl6Ocq.s:5251   .debug_str:0000000000001027 .LASF104
     /tmp/ccsl6Ocq.s:4973   .debug_str:000000000000062b .LASF26
     /tmp/ccsl6Ocq.s:5037   .debug_str:0000000000000856 .LASF28
     /tmp/ccsl6Ocq.s:4897   .debug_str:000000000000035b .LASF29
     /tmp/ccsl6Ocq.s:5223   .debug_str:0000000000000f1c .LASF30
     /tmp/ccsl6Ocq.s:5267   .debug_str:00000000000010a2 .LASF31
     /tmp/ccsl6Ocq.s:4829   .debug_str:0000000000000153 .LASF32
     /tmp/ccsl6Ocq.s:4861   .debug_str:0000000000000258 .LASF152
     /tmp/ccsl6Ocq.s:5167   .debug_str:0000000000000c9b .LASF153
     /tmp/ccsl6Ocq.s:5197   .debug_str:0000000000000e2e .LASF34
     /tmp/ccsl6Ocq.s:4837   .debug_str:0000000000000196 .LASF35
     /tmp/ccsl6Ocq.s:5235   .debug_str:0000000000000f82 .LASF36
     /tmp/ccsl6Ocq.s:5093   .debug_str:0000000000000a4d .LASF37
     /tmp/ccsl6Ocq.s:4939   .debug_str:00000000000004ce .LASF38
     /tmp/ccsl6Ocq.s:5025   .debug_str:00000000000007f2 .LASF39
     /tmp/ccsl6Ocq.s:5119   .debug_str:0000000000000b0a .LASF40
     /tmp/ccsl6Ocq.s:4931   .debug_str:000000000000046a .LASF41
     /tmp/ccsl6Ocq.s:4951   .debug_str:000000000000053d .LASF42
     /tmp/ccsl6Ocq.s:5031   .debug_str:0000000000000820 .LASF43
     /tmp/ccsl6Ocq.s:4911   .debug_str:00000000000003c5 .LASF46
     /tmp/ccsl6Ocq.s:4865   .debug_str:0000000000000276 .LASF48
     /tmp/ccsl6Ocq.s:5039   .debug_str:0000000000000876 .LASF44
     /tmp/ccsl6Ocq.s:5185   .debug_str:0000000000000dec .LASF45
     /tmp/ccsl6Ocq.s:5225   .debug_str:0000000000000f4d .LASF47
     /tmp/ccsl6Ocq.s:5237   .debug_str:0000000000000f87 .LASF49
     /tmp/ccsl6Ocq.s:5091   .debug_str:0000000000000a43 .LASF50
     /tmp/ccsl6Ocq.s:5255   .debug_str:000000000000104e .LASF51
     /tmp/ccsl6Ocq.s:4867   .debug_str:000000000000028e .LASF52
     /tmp/ccsl6Ocq.s:4845   .debug_str:00000000000001c5 .LASF53
     /tmp/ccsl6Ocq.s:4875   .debug_str:00000000000002be .LASF54
     /tmp/ccsl6Ocq.s:4971   .debug_str:0000000000000613 .LASF55
     /tmp/ccsl6Ocq.s:5005   .debug_str:000000000000071b .LASF56
     /tmp/ccsl6Ocq.s:5239   .debug_str:0000000000000f9c .LASF57
     /tmp/ccsl6Ocq.s:5187   .debug_str:0000000000000e05 .LASF58
     /tmp/ccsl6Ocq.s:5115   .debug_str:0000000000000ad1 .LASF59
     /tmp/ccsl6Ocq.s:5083   .debug_str:0000000000000a07 .LASF60
     /tmp/ccsl6Ocq.s:4985   .debug_str:000000000000067d .LASF61
     /tmp/ccsl6Ocq.s:4899   .debug_str:0000000000000367 .LASF62
     /tmp/ccsl6Ocq.s:4901   .debug_str:0000000000000374 .LASF63
     /tmp/ccsl6Ocq.s:5151   .debug_str:0000000000000c37 .LASF64
     /tmp/ccsl6Ocq.s:5125   .debug_str:0000000000000b4d .LASF65
     /tmp/ccsl6Ocq.s:5081   .debug_str:00000000000009fe .LASF66
     /tmp/ccsl6Ocq.s:4953   .debug_str:000000000000054a .LASF67
     /tmp/ccsl6Ocq.s:4795   .debug_str:0000000000000000 .LASF68
     /tmp/ccsl6Ocq.s:5181   .debug_str:0000000000000dcd .LASF69
     /tmp/ccsl6Ocq.s:5127   .debug_str:0000000000000b60 .LASF113
     /tmp/ccsl6Ocq.s:4975   .debug_str:0000000000000634 .LASF115
     /tmp/ccsl6Ocq.s:5159   .debug_str:0000000000000c71 .LASF145
     /tmp/ccsl6Ocq.s:5261   .debug_str:000000000000106e .LASF71
     /tmp/ccsl6Ocq.s:4851   .debug_str:00000000000001ff .LASF73
     /tmp/ccsl6Ocq.s:5051   .debug_str:00000000000008ea .LASF235
GAS LISTING /tmp/ccsl6Ocq.s 			page 40


     /tmp/ccsl6Ocq.s:5023   .debug_str:00000000000007dd .LASF74
     /tmp/ccsl6Ocq.s:5129   .debug_str:0000000000000b69 .LASF75
     /tmp/ccsl6Ocq.s:5161   .debug_str:0000000000000c79 .LASF78
     /tmp/ccsl6Ocq.s:5033   .debug_str:000000000000083a .LASF80
     /tmp/ccsl6Ocq.s:4831   .debug_str:0000000000000173 .LASF76
     /tmp/ccsl6Ocq.s:5049   .debug_str:00000000000008d3 .LASF77
     /tmp/ccsl6Ocq.s:5105   .debug_str:0000000000000a92 .LASF79
     /tmp/ccsl6Ocq.s:4849   .debug_str:00000000000001ea .LASF81
     /tmp/ccsl6Ocq.s:5163   .debug_str:0000000000000c84 .LASF82
     /tmp/ccsl6Ocq.s:4905   .debug_str:000000000000039b .LASF83
     /tmp/ccsl6Ocq.s:4987   .debug_str:0000000000000696 .LASF84
     /tmp/ccsl6Ocq.s:5211   .debug_str:0000000000000e9c .LASF85
     /tmp/ccsl6Ocq.s:5171   .debug_str:0000000000000cd2 .LASF236
     /tmp/ccsl6Ocq.s:4887   .debug_str:0000000000000308 .LASF86
     /tmp/ccsl6Ocq.s:4863   .debug_str:0000000000000263 .LASF87
     /tmp/ccsl6Ocq.s:4889   .debug_str:0000000000000311 .LASF88
     /tmp/ccsl6Ocq.s:5107   .debug_str:0000000000000a9c .LASF89
     /tmp/ccsl6Ocq.s:4995   .debug_str:00000000000006c7 .LASF90
     /tmp/ccsl6Ocq.s:4935   .debug_str:00000000000004a0 .LASF91
     /tmp/ccsl6Ocq.s:5045   .debug_str:00000000000008b5 .LASF92
     /tmp/ccsl6Ocq.s:5205   .debug_str:0000000000000e47 .LASF93
     /tmp/ccsl6Ocq.s:5113   .debug_str:0000000000000acc .LASF94
     /tmp/ccsl6Ocq.s:4809   .debug_str:0000000000000088 .LASF95
     /tmp/ccsl6Ocq.s:5265   .debug_str:0000000000001095 .LASF96
     /tmp/ccsl6Ocq.s:4925   .debug_str:0000000000000430 .LASF97
     /tmp/ccsl6Ocq.s:4841   .debug_str:00000000000001a9 .LASF98
     /tmp/ccsl6Ocq.s:4913   .debug_str:00000000000003d0 .LASF99
     /tmp/ccsl6Ocq.s:4801   .debug_str:0000000000000019 .LASF100
     /tmp/ccsl6Ocq.s:5003   .debug_str:000000000000070e .LASF101
     /tmp/ccsl6Ocq.s:5137   .debug_str:0000000000000bc4 .LASF102
     /tmp/ccsl6Ocq.s:5103   .debug_str:0000000000000a85 .LASF103
     /tmp/ccsl6Ocq.s:5155   .debug_str:0000000000000c52 .LASF130
     /tmp/ccsl6Ocq.s:5121   .debug_str:0000000000000b18 .LASF105
     /tmp/ccsl6Ocq.s:4799   .debug_str:0000000000000014 .LASF106
     /tmp/ccsl6Ocq.s:5259   .debug_str:0000000000001069 .LASF107
     /tmp/ccsl6Ocq.s:5131   .debug_str:0000000000000b91 .LASF108
     /tmp/ccsl6Ocq.s:5157   .debug_str:0000000000000c68 .LASF109
     /tmp/ccsl6Ocq.s:5047   .debug_str:00000000000008cb .LASF110
     /tmp/ccsl6Ocq.s:5179   .debug_str:0000000000000dc3 .LASF111
     /tmp/ccsl6Ocq.s:5193   .debug_str:0000000000000e21 .LASF112
     /tmp/ccsl6Ocq.s:4877   .debug_str:00000000000002c9 .LASF114
     /tmp/ccsl6Ocq.s:4807   .debug_str:0000000000000060 .LASF116
     /tmp/ccsl6Ocq.s:4839   .debug_str:000000000000019b .LASF182
     /tmp/ccsl6Ocq.s:4989   .debug_str:00000000000006a3 .LASF184
     /tmp/ccsl6Ocq.s:5095   .debug_str:0000000000000a52 .LASF117
     /tmp/ccsl6Ocq.s:5135   .debug_str:0000000000000bba .LASF118
     /tmp/ccsl6Ocq.s:5001   .debug_str:00000000000006fa .LASF119
     /tmp/ccsl6Ocq.s:4991   .debug_str:00000000000006bc .LASF120
     /tmp/ccsl6Ocq.s:4797   .debug_str:0000000000000008 .LASF121
     /tmp/ccsl6Ocq.s:5057   .debug_str:0000000000000908 .LASF122
     /tmp/ccsl6Ocq.s:5009   .debug_str:000000000000073f .LASF123
     /tmp/ccsl6Ocq.s:4835   .debug_str:000000000000018c .LASF124
     /tmp/ccsl6Ocq.s:4981   .debug_str:0000000000000661 .LASF125
     /tmp/ccsl6Ocq.s:4919   .debug_str:00000000000003f6 .LASF126
     /tmp/ccsl6Ocq.s:5173   .debug_str:0000000000000cda .LASF127
     /tmp/ccsl6Ocq.s:4967   .debug_str:00000000000005f3 .LASF128
     /tmp/ccsl6Ocq.s:4903   .debug_str:000000000000038e .LASF129
GAS LISTING /tmp/ccsl6Ocq.s 			page 41


     /tmp/ccsl6Ocq.s:4843   .debug_str:00000000000001b9 .LASF131
     /tmp/ccsl6Ocq.s:5257   .debug_str:0000000000001064 .LASF132
     /tmp/ccsl6Ocq.s:5085   .debug_str:0000000000000a13 .LASF133
     /tmp/ccsl6Ocq.s:4915   .debug_str:00000000000003dc .LASF134
     /tmp/ccsl6Ocq.s:4869   .debug_str:0000000000000298 .LASF135
     /tmp/ccsl6Ocq.s:5183   .debug_str:0000000000000de1 .LASF136
     /tmp/ccsl6Ocq.s:5153   .debug_str:0000000000000c3e .LASF237
     /tmp/ccsl6Ocq.s:4945   .debug_str:00000000000004fd .LASF137
     /tmp/ccsl6Ocq.s:5275   .debug_str:00000000000010c6 .LASF138
     /tmp/ccsl6Ocq.s:5219   .debug_str:0000000000000eec .LASF139
     /tmp/ccsl6Ocq.s:4815   .debug_str:00000000000000b5 .LASF140
     /tmp/ccsl6Ocq.s:5207   .debug_str:0000000000000e68 .LASF141
     /tmp/ccsl6Ocq.s:5189   .debug_str:0000000000000e12 .LASF142
     /tmp/ccsl6Ocq.s:5011   .debug_str:0000000000000751 .LASF143
     /tmp/ccsl6Ocq.s:5067   .debug_str:000000000000096d .LASF144
     /tmp/ccsl6Ocq.s:4881   .debug_str:00000000000002e1 .LASF146
     /tmp/ccsl6Ocq.s:5191   .debug_str:0000000000000e1c .LASF147
     /tmp/ccsl6Ocq.s:4805   .debug_str:0000000000000041 .LASF148
     /tmp/ccsl6Ocq.s:4819   .debug_str:00000000000000e8 .LASF149
     /tmp/ccsl6Ocq.s:4803   .debug_str:0000000000000029 .LASF150
     /tmp/ccsl6Ocq.s:4859   .debug_str:000000000000023f .LASF151
     /tmp/ccsl6Ocq.s:5007   .debug_str:0000000000000726 .LASF154
     /tmp/ccsl6Ocq.s:5145   .debug_str:0000000000000c07 .LASF155
     /tmp/ccsl6Ocq.s:5035   .debug_str:0000000000000851 .LASF156
     /tmp/ccsl6Ocq.s:5027   .debug_str:000000000000080a .LASF157
     /tmp/ccsl6Ocq.s:5141   .debug_str:0000000000000bed .LASF158
     /tmp/ccsl6Ocq.s:4893   .debug_str:000000000000032e .LASF159
     /tmp/ccsl6Ocq.s:4879   .debug_str:00000000000002d7 .LASF238
     /tmp/ccsl6Ocq.s:5097   .debug_str:0000000000000a57 .LASF239
     /tmp/ccsl6Ocq.s:5203   .debug_str:0000000000000e3e .LASF160
     /tmp/ccsl6Ocq.s:4941   .debug_str:00000000000004d9 .LASF161
     /tmp/ccsl6Ocq.s:4983   .debug_str:0000000000000675 .LASF162
     /tmp/ccsl6Ocq.s:5019   .debug_str:00000000000007af .LASF163
     /tmp/ccsl6Ocq.s:5109   .debug_str:0000000000000abb .LASF164
     /tmp/ccsl6Ocq.s:4923   .debug_str:0000000000000412 .LASF165
     /tmp/ccsl6Ocq.s:5269   .debug_str:00000000000010ab .LASF166
     /tmp/ccsl6Ocq.s:4933   .debug_str:0000000000000485 .LASF167
     /tmp/ccsl6Ocq.s:5231   .debug_str:0000000000000f71 .LASF168
     /tmp/ccsl6Ocq.s:5241   .debug_str:0000000000000fb4 .LASF169
     /tmp/ccsl6Ocq.s:5053   .debug_str:00000000000008ef .LASF170
     /tmp/ccsl6Ocq.s:4811   .debug_str:0000000000000094 .LASF171
     /tmp/ccsl6Ocq.s:5273   .debug_str:00000000000010be .LASF172
     /tmp/ccsl6Ocq.s:5075   .debug_str:00000000000009b8 .LASF173
     /tmp/ccsl6Ocq.s:5165   .debug_str:0000000000000c8f .LASF174
     /tmp/ccsl6Ocq.s:5089   .debug_str:0000000000000a25 .LASF175
     /tmp/ccsl6Ocq.s:4827   .debug_str:0000000000000138 .LASF240
     /tmp/ccsl6Ocq.s:4891   .debug_str:0000000000000325 .LASF176
     /tmp/ccsl6Ocq.s:5249   .debug_str:0000000000001020 .LASF177
     /tmp/ccsl6Ocq.s:5073   .debug_str:00000000000009ad .LASF178
     /tmp/ccsl6Ocq.s:5177   .debug_str:0000000000000daa .LASF179
     /tmp/ccsl6Ocq.s:4937   .debug_str:00000000000004bf .LASF180
     /tmp/ccsl6Ocq.s:5263   .debug_str:0000000000001078 .LASF181
     /tmp/ccsl6Ocq.s:5059   .debug_str:0000000000000910 .LASF183
     /tmp/ccsl6Ocq.s:4817   .debug_str:00000000000000c4 .LASF185
     /tmp/ccsl6Ocq.s:5243   .debug_str:0000000000000fce .LASF186
     /tmp/ccsl6Ocq.s:5253   .debug_str:0000000000001030 .LASF187
     /tmp/ccsl6Ocq.s:5043   .debug_str:00000000000008a3 .LASF188
GAS LISTING /tmp/ccsl6Ocq.s 			page 42


     /tmp/ccsl6Ocq.s:5069   .debug_str:0000000000000977 .LASF189
     /tmp/ccsl6Ocq.s:5029   .debug_str:000000000000080f .LASF190
     /tmp/ccsl6Ocq.s:5215   .debug_str:0000000000000ec8 .LASF191
     /tmp/ccsl6Ocq.s:5229   .debug_str:0000000000000f5b .LASF192
     /tmp/ccsl6Ocq.s:5123   .debug_str:0000000000000b29 .LASF193
     /tmp/ccsl6Ocq.s:5209   .debug_str:0000000000000e88 .LASF194
     /tmp/ccsl6Ocq.s:5245   .debug_str:0000000000000fde .LASF195
     /tmp/ccsl6Ocq.s:4997   .debug_str:00000000000006db .LASF196
     /tmp/ccsl6Ocq.s:5077   .debug_str:00000000000009d1 .LASF197
     /tmp/ccsl6Ocq.s:4821   .debug_str:0000000000000100 .LASF198
     /tmp/ccsl6Ocq.s:4963   .debug_str:00000000000005a4 .LASF199
     /tmp/ccsl6Ocq.s:4823   .debug_str:0000000000000122 .LASF200
     /tmp/ccsl6Ocq.s:5147   .debug_str:0000000000000c0c .LASF201
     /tmp/ccsl6Ocq.s:5021   .debug_str:00000000000007cb .LASF202
     /tmp/ccsl6Ocq.s:5247   .debug_str:0000000000001000 .LASF203
     /tmp/ccsl6Ocq.s:4957   .debug_str:0000000000000571 .LASF204
     /tmp/ccsl6Ocq.s:4965   .debug_str:00000000000005d4 .LASF205
     /tmp/ccsl6Ocq.s:4885   .debug_str:00000000000002f5 .LASF206
     /tmp/ccsl6Ocq.s:5041   .debug_str:0000000000000882 .LASF207
     /tmp/ccsl6Ocq.s:5213   .debug_str:0000000000000eb5 .LASF208
     /tmp/ccsl6Ocq.s:5015   .debug_str:0000000000000786 .LASF209
     /tmp/ccsl6Ocq.s:5087   .debug_str:0000000000000a18 .LASF210
     /tmp/ccsl6Ocq.s:4947   .debug_str:0000000000000515 .LASF211
     /tmp/ccsl6Ocq.s:4833   .debug_str:000000000000017f .LASF212
     /tmp/ccsl6Ocq.s:5013   .debug_str:000000000000076b .LASF213
     /tmp/ccsl6Ocq.s:64     .text:0000000000000034 .LFB70
     /tmp/ccsl6Ocq.s:645    .text:0000000000000280 .LFE70
     /tmp/ccsl6Ocq.s:4873   .debug_str:00000000000002b3 .LASF214
     /tmp/ccsl6Ocq.s:172    .text:0000000000000078 .LBB100
     /tmp/ccsl6Ocq.s:191    .text:000000000000008c .LBE100
     /tmp/ccsl6Ocq.s:188    .text:000000000000008c .LVL3
     /tmp/ccsl6Ocq.s:208    .text:00000000000000a0 .LBB102
     /tmp/ccsl6Ocq.s:228    .text:00000000000000b8 .LBE102
     /tmp/ccsl6Ocq.s:223    .text:00000000000000b4 .LVL4
     /tmp/ccsl6Ocq.s:231    .text:00000000000000b8 .LBB104
     /tmp/ccsl6Ocq.s:293    .text:0000000000000100 .LBE104
     /tmp/ccsl6Ocq.s:266    .text:00000000000000e4 .LVL5
     /tmp/ccsl6Ocq.s:296    .text:0000000000000100 .LBB106
     /tmp/ccsl6Ocq.s:328    .text:0000000000000124 .LBE106
     /tmp/ccsl6Ocq.s:303    .text:000000000000010c .LBB108
     /tmp/ccsl6Ocq.s:312    .text:0000000000000114 .LBE108
     /tmp/ccsl6Ocq.s:4636   .debug_loc:0000000000000000 .LLST0
     /tmp/ccsl6Ocq.s:4644   .debug_loc:0000000000000024 .LLST1
     /tmp/ccsl6Ocq.s:323    .text:0000000000000120 .LVL8
     /tmp/ccsl6Ocq.s:331    .text:0000000000000124 .LBB110
     /tmp/ccsl6Ocq.s:341    .text:0000000000000130 .LBE110
     /tmp/ccsl6Ocq.s:336    .text:000000000000012c .LVL9
     /tmp/ccsl6Ocq.s:344    .text:0000000000000130 .LBB112
     /tmp/ccsl6Ocq.s:406    .text:0000000000000178 .LBE112
     /tmp/ccsl6Ocq.s:379    .text:000000000000015c .LVL10
     /tmp/ccsl6Ocq.s:409    .text:0000000000000178 .LBB114
     /tmp/ccsl6Ocq.s:463    .text:00000000000001b8 .LBE114
     /tmp/ccsl6Ocq.s:436    .text:000000000000019c .LVL11
     /tmp/ccsl6Ocq.s:466    .text:00000000000001b8 .LBB116
     /tmp/ccsl6Ocq.s:509    .text:00000000000001ec .LBE116
     /tmp/ccsl6Ocq.s:487    .text:00000000000001d8 .LBB118
     /tmp/ccsl6Ocq.s:497    .text:00000000000001e4 .LBE118
GAS LISTING /tmp/ccsl6Ocq.s 			page 43


     /tmp/ccsl6Ocq.s:4651   .debug_loc:0000000000000047 .LLST2
     /tmp/ccsl6Ocq.s:494    .text:00000000000001e4 .LVL13
     /tmp/ccsl6Ocq.s:486    .text:00000000000001d8 .LVL12
     /tmp/ccsl6Ocq.s:512    .text:00000000000001ec .LBB120
     /tmp/ccsl6Ocq.s:532    .text:0000000000000204 .LBE120
     /tmp/ccsl6Ocq.s:527    .text:0000000000000200 .LVL14
     /tmp/ccsl6Ocq.s:535    .text:0000000000000204 .LBB122
     /tmp/ccsl6Ocq.s:555    .text:000000000000021c .LBE122
     /tmp/ccsl6Ocq.s:550    .text:0000000000000218 .LVL15
     /tmp/ccsl6Ocq.s:558    .text:000000000000021c .LBB124
     /tmp/ccsl6Ocq.s:578    .text:0000000000000234 .LBE124
     /tmp/ccsl6Ocq.s:573    .text:0000000000000230 .LVL16
     /tmp/ccsl6Ocq.s:581    .text:0000000000000234 .LBB126
     /tmp/ccsl6Ocq.s:603    .text:000000000000024c .LBE126
     /tmp/ccsl6Ocq.s:587    .text:000000000000023c .LVL17
     /tmp/ccsl6Ocq.s:606    .text:000000000000024c .LBB128
     /tmp/ccsl6Ocq.s:627    .text:0000000000000268 .LBE128
     /tmp/ccsl6Ocq.s:622    .text:0000000000000264 .LVL18
     /tmp/ccsl6Ocq.s:640    .text:000000000000027c .LVL19
     /tmp/ccsl6Ocq.s:662    .text:0000000000000280 .LFB69
     /tmp/ccsl6Ocq.s:1057   .text:0000000000000428 .LFE69
     /tmp/ccsl6Ocq.s:5143   .debug_str:0000000000000c00 .LASF215
     /tmp/ccsl6Ocq.s:4658   .debug_loc:000000000000006a .LLST3
     /tmp/ccsl6Ocq.s:5227   .debug_str:0000000000000f56 .LASF216
     /tmp/ccsl6Ocq.s:4687   .debug_loc:00000000000000ee .LLST4
     /tmp/ccsl6Ocq.s:800    .text:0000000000000358 .LBB133
     /tmp/ccsl6Ocq.s:882    .text:000000000000038c .LBE133
     /tmp/ccsl6Ocq.s:4694   .debug_loc:0000000000000111 .LLST5
     /tmp/ccsl6Ocq.s:5233   .debug_str:0000000000000f7a .LASF217
     /tmp/ccsl6Ocq.s:4701   .debug_loc:0000000000000134 .LLST6
     /tmp/ccsl6Ocq.s:802    .text:0000000000000358 .LBB134
     /tmp/ccsl6Ocq.s:818    .text:0000000000000364 .LBE134
     /tmp/ccsl6Ocq.s:823    .text:0000000000000368 .LBB136
     /tmp/ccsl6Ocq.s:839    .text:0000000000000374 .LBE136
     /tmp/ccsl6Ocq.s:853    .text:0000000000000380 .LBB138
     /tmp/ccsl6Ocq.s:864    .text:0000000000000384 .LBE138
     /tmp/ccsl6Ocq.s:4708   .debug_loc:0000000000000157 .LLST7
     /tmp/ccsl6Ocq.s:866    .text:0000000000000384 .LBB140
     /tmp/ccsl6Ocq.s:877    .text:0000000000000388 .LBE140
     /tmp/ccsl6Ocq.s:4715   .debug_loc:000000000000017a .LLST8
     /tmp/ccsl6Ocq.s:843    .text:000000000000037c .LVL34
     /tmp/ccsl6Ocq.s:967    .text:00000000000003e4 .LBB149
     /tmp/ccsl6Ocq.s:1046   .text:000000000000041c .LBE149
     /tmp/ccsl6Ocq.s:4722   .debug_loc:000000000000019d .LLST10
     /tmp/ccsl6Ocq.s:4729   .debug_loc:00000000000001c0 .LLST11
     /tmp/ccsl6Ocq.s:969    .text:00000000000003e4 .LBB150
     /tmp/ccsl6Ocq.s:985    .text:00000000000003f0 .LBE150
     /tmp/ccsl6Ocq.s:987    .text:00000000000003f0 .LBB152
     /tmp/ccsl6Ocq.s:1003   .text:00000000000003fc .LBE152
     /tmp/ccsl6Ocq.s:1005   .text:00000000000003fc .LBB154
     /tmp/ccsl6Ocq.s:1012   .text:0000000000000408 .LBE154
     /tmp/ccsl6Ocq.s:1018   .text:0000000000000410 .LBB156
     /tmp/ccsl6Ocq.s:1029   .text:0000000000000414 .LBE156
     /tmp/ccsl6Ocq.s:4736   .debug_loc:00000000000001e3 .LLST12
     /tmp/ccsl6Ocq.s:1031   .text:0000000000000414 .LBB158
     /tmp/ccsl6Ocq.s:1045   .text:000000000000041c .LBE158
     /tmp/ccsl6Ocq.s:4743   .debug_loc:0000000000000206 .LLST13
GAS LISTING /tmp/ccsl6Ocq.s 			page 44


     /tmp/ccsl6Ocq.s:1016   .text:0000000000000410 .LVL48
     /tmp/ccsl6Ocq.s:678    .text:0000000000000298 .LBB130
     /tmp/ccsl6Ocq.s:694    .text:00000000000002a4 .LBE130
     /tmp/ccsl6Ocq.s:897    .text:00000000000003a4 .LBB144
     /tmp/ccsl6Ocq.s:906    .text:00000000000003b8 .LBE144
     /tmp/ccsl6Ocq.s:918    .text:00000000000003c4 .LBB147
     /tmp/ccsl6Ocq.s:925    .text:00000000000003c8 .LBE147
     /tmp/ccsl6Ocq.s:4750   .debug_loc:0000000000000229 .LLST9
     /tmp/ccsl6Ocq.s:932    .text:00000000000003cc .LBB160
     /tmp/ccsl6Ocq.s:944    .text:00000000000003d4 .LBE160
     /tmp/ccsl6Ocq.s:4757   .debug_loc:000000000000024c .LLST14
     /tmp/ccsl6Ocq.s:950    .text:00000000000003d8 .LBB162
     /tmp/ccsl6Ocq.s:962    .text:00000000000003e0 .LBE162
     /tmp/ccsl6Ocq.s:4765   .debug_loc:0000000000000270 .LLST15
     /tmp/ccsl6Ocq.s:716    .text:00000000000002d0 .LBB166
     /tmp/ccsl6Ocq.s:732    .text:00000000000002dc .LBE166
     /tmp/ccsl6Ocq.s:769    .text:000000000000033c .LBB168
     /tmp/ccsl6Ocq.s:781    .text:0000000000000340 .LBE168
     /tmp/ccsl6Ocq.s:4773   .debug_loc:0000000000000294 .LLST16
     /tmp/ccsl6Ocq.s:737    .text:00000000000002ec .LVL22
     /tmp/ccsl6Ocq.s:742    .text:00000000000002fc .LVL23
     /tmp/ccsl6Ocq.s:747    .text:0000000000000308 .LVL24
     /tmp/ccsl6Ocq.s:752    .text:0000000000000314 .LVL25
     /tmp/ccsl6Ocq.s:757    .text:0000000000000324 .LVL26
     /tmp/ccsl6Ocq.s:762    .text:0000000000000330 .LVL27
     /tmp/ccsl6Ocq.s:767    .text:000000000000033c .LVL28
     /tmp/ccsl6Ocq.s:895    .text:00000000000003a4 .LVL39
     /tmp/ccsl6Ocq.s:1053   .text:0000000000000424 .LVL51
     /tmp/ccsl6Ocq.s:10     .text:0000000000000000 .LFB68
     /tmp/ccsl6Ocq.s:53     .text:0000000000000034 .LFE68
     /tmp/ccsl6Ocq.s:30     .text:0000000000000020 .LBB68
     /tmp/ccsl6Ocq.s:42     .text:0000000000000024 .LBE68
     /tmp/ccsl6Ocq.s:25     .text:0000000000000018 .LVL0
     /tmp/ccsl6Ocq.s:5199   .debug_str:0000000000000e34 .LASF218
     /tmp/ccsl6Ocq.s:5201   .debug_str:0000000000000e39 .LASF219
     /tmp/ccsl6Ocq.s:4961   .debug_str:000000000000059f .LASF220
     /tmp/ccsl6Ocq.s:4909   .debug_str:00000000000003c0 .LASF221
     /tmp/ccsl6Ocq.s:5217   .debug_str:0000000000000ee7 .LASF222
     /tmp/ccsl6Ocq.s:4993   .debug_str:00000000000006c1 .LASF223
     /tmp/ccsl6Ocq.s:4943   .debug_str:00000000000004f6 .LASF224
     /tmp/ccsl6Ocq.s:4999   .debug_str:00000000000006f3 .LASF225
     /tmp/ccsl6Ocq.s:5071   .debug_str:0000000000000997 .LASF226
     /tmp/ccsl6Ocq.s:4883   .debug_str:00000000000002e6 .LASF227
     /tmp/ccsl6Ocq.s:5061   .debug_str:0000000000000926 .LASF228
     /tmp/ccsl6Ocq.s:5221   .debug_str:0000000000000f0d .LASF229
     /tmp/ccsl6Ocq.s:4921   .debug_str:0000000000000402 .LASF230
     /tmp/ccsl6Ocq.s:302    .text:000000000000010c .LVL6
     /tmp/ccsl6Ocq.s:310    .text:0000000000000114 .LVL7
     /tmp/ccsl6Ocq.s:692    .text:00000000000002a4 .LVL20
     /tmp/ccsl6Ocq.s:777    .text:0000000000000340 .LVL29
     /tmp/ccsl6Ocq.s:796    .text:0000000000000358 .LVL30
     /tmp/ccsl6Ocq.s:816    .text:0000000000000364 .LVL31
     /tmp/ccsl6Ocq.s:880    .text:000000000000038c .LVL38
     /tmp/ccsl6Ocq.s:928    .text:00000000000003cc .LVL42
     /tmp/ccsl6Ocq.s:947    .text:00000000000003d8 .LVL44
     /tmp/ccsl6Ocq.s:983    .text:00000000000003f0 .LVL46
     /tmp/ccsl6Ocq.s:1042   .text:000000000000041c .LVL50
GAS LISTING /tmp/ccsl6Ocq.s 			page 45


     /tmp/ccsl6Ocq.s:730    .text:00000000000002dc .LVL21
     /tmp/ccsl6Ocq.s:821    .text:0000000000000368 .LVL32
     /tmp/ccsl6Ocq.s:837    .text:0000000000000374 .LVL33
     /tmp/ccsl6Ocq.s:851    .text:0000000000000380 .LVL35
     /tmp/ccsl6Ocq.s:861    .text:0000000000000384 .LVL36
     /tmp/ccsl6Ocq.s:874    .text:0000000000000388 .LVL37
     /tmp/ccsl6Ocq.s:1001   .text:00000000000003fc .LVL47
     /tmp/ccsl6Ocq.s:1026   .text:0000000000000414 .LVL49
     /tmp/ccsl6Ocq.s:917    .text:00000000000003c4 .LVL40
     /tmp/ccsl6Ocq.s:923    .text:00000000000003c8 .LVL41
     /tmp/ccsl6Ocq.s:941    .text:00000000000003d4 .LVL43
     /tmp/ccsl6Ocq.s:959    .text:00000000000003e0 .LVL45
     /tmp/ccsl6Ocq.s:1068   .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN15MemoryAllocator7initMemEv
_ZN6Kernel14supervisorTrapEv
_ZN15MemoryAllocator8allocateEm
_ZN15MemoryAllocator4freeEPv
_ZN3TCB9createTCBEPFvPvES0_
_ZN3TCB7runningE
_ZN3TCB8dispatchEv
_ZN3TCB20createDeactivatedTCBEPFvPvES0_
_ZN3Sem9createSemEj
_ZN3SemD1Ev
_ZN3Sem7semWaitEv
_ZN3Sem9semSignalEv
_ZN9Scheduler9timeSleepEm
__getc
__putc
_Z14__print_stringPKc
_Z14__print_uint64m
_ZN9Scheduler14timerInterruptEv
_ZN3TCB16timeSliceCounterE
console_handler
