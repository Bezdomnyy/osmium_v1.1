GAS LISTING /tmp/ccD2ZDfQ.s 			page 1


   1              		.file	"kernel.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN6Kernel10initKernelEv
   9              	_ZN6Kernel10initKernelEv:
  10              	.LFB33:
  11              		.file 1 "src/kernel.cpp"
   1:src/kernel.cpp **** //
   2:src/kernel.cpp **** // Created by os on 9/6/22.
   3:src/kernel.cpp **** //
   4:src/kernel.cpp **** 
   5:src/kernel.cpp **** #include "../lib/hw.h"
   6:src/kernel.cpp **** 
   7:src/kernel.cpp **** #include "../h/kernel.hpp"
   8:src/kernel.cpp **** #include "../h/memory_allocator.hpp"
   9:src/kernel.cpp **** #include "../h/riscv.hpp"
  10:src/kernel.cpp **** 
  11:src/kernel.cpp **** extern void userMain();
  12:src/kernel.cpp **** 
  13:src/kernel.cpp **** void Kernel::initKernel() {
  12              		.loc 1 13 27
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  14:src/kernel.cpp ****     MemoryAllocator::initMem();
  22              		.loc 1 14 5
  23              		.loc 1 14 29 is_stmt 0
  24 0010 97000000 		call	_ZN15MemoryAllocator7initMemEv@plt
  24      E7800000 
  25              	.LVL0:
  15:src/kernel.cpp ****     RiscV::writeStvec((uint64) &supervisorTrap);
  26              		.loc 1 15 5 is_stmt 1
  27              		.loc 1 15 22 is_stmt 0
  28 0018 97070000 		la	a5,_ZN6Kernel14supervisorTrapEv
  28      83B70700 
  29              	.LVL1:
  30              	.LBB42:
  31              	.LBB43:
  32              		.file 2 "src/../h/../h/../h/riscv.hpp"
   1:src/../h/../h/../h/riscv.hpp **** //
   2:src/../h/../h/../h/riscv.hpp **** // Created by os on 9/6/22.
   3:src/../h/../h/../h/riscv.hpp **** //
   4:src/../h/../h/../h/riscv.hpp **** 
   5:src/../h/../h/../h/riscv.hpp **** #ifndef OSMIUM_RISCV_HPP
   6:src/../h/../h/../h/riscv.hpp **** #define OSMIUM_RISCV_HPP
   7:src/../h/../h/../h/riscv.hpp **** 
   8:src/../h/../h/../h/riscv.hpp **** 
   9:src/../h/../h/../h/riscv.hpp **** #include "../lib/hw.h"
GAS LISTING /tmp/ccD2ZDfQ.s 			page 2


  10:src/../h/../h/../h/riscv.hpp **** 
  11:src/../h/../h/../h/riscv.hpp **** class RiscV {
  12:src/../h/../h/../h/riscv.hpp **** public:
  13:src/../h/../h/../h/riscv.hpp ****     // pop spp and spie sstatus bits
  14:src/../h/../h/../h/riscv.hpp ****     static void popSppSpie();
  15:src/../h/../h/../h/riscv.hpp **** 
  16:src/../h/../h/../h/riscv.hpp ****     //push x3...x31 registers on stack
  17:src/../h/../h/../h/riscv.hpp ****     static void pushRegisters();
  18:src/../h/../h/../h/riscv.hpp **** 
  19:src/../h/../h/../h/riscv.hpp ****     //pop x3...x31 registers from stack
  20:src/../h/../h/../h/riscv.hpp ****     static void popRegisters();
  21:src/../h/../h/../h/riscv.hpp **** 
  22:src/../h/../h/../h/riscv.hpp ****     //read from scause register
  23:src/../h/../h/../h/riscv.hpp ****     static uint64 readScause();
  24:src/../h/../h/../h/riscv.hpp **** 
  25:src/../h/../h/../h/riscv.hpp ****     //write to scause register
  26:src/../h/../h/../h/riscv.hpp ****     static void writeScause(uint64 scause);
  27:src/../h/../h/../h/riscv.hpp **** 
  28:src/../h/../h/../h/riscv.hpp ****     //read from sepc register
  29:src/../h/../h/../h/riscv.hpp ****     static uint64 readSepc();
  30:src/../h/../h/../h/riscv.hpp **** 
  31:src/../h/../h/../h/riscv.hpp ****     //write to sepc register
  32:src/../h/../h/../h/riscv.hpp ****     static void writeSepc(uint64 sepc);
  33:src/../h/../h/../h/riscv.hpp **** 
  34:src/../h/../h/../h/riscv.hpp ****     //read from stvec register
  35:src/../h/../h/../h/riscv.hpp ****     static uint64 readStvec();
  36:src/../h/../h/../h/riscv.hpp **** 
  37:src/../h/../h/../h/riscv.hpp ****     //write to stvec register
  38:src/../h/../h/../h/riscv.hpp ****     static void writeStvec(uint64 stvec);
  39:src/../h/../h/../h/riscv.hpp **** 
  40:src/../h/../h/../h/riscv.hpp ****     enum SSTATUS
  41:src/../h/../h/../h/riscv.hpp ****     {
  42:src/../h/../h/../h/riscv.hpp ****         SIE = (1 << 1), //supervisor interrupt enable
  43:src/../h/../h/../h/riscv.hpp ****         SPIE = (1 << 5),//supervisor previous interrupt enable
  44:src/../h/../h/../h/riscv.hpp ****         SPP = (1 << 8), //supervisor previous privilege
  45:src/../h/../h/../h/riscv.hpp ****     };
  46:src/../h/../h/../h/riscv.hpp **** 
  47:src/../h/../h/../h/riscv.hpp ****     //set bit-mask bits in the sstatus register
  48:src/../h/../h/../h/riscv.hpp ****     static void setSstatus(uint64 mask);
  49:src/../h/../h/../h/riscv.hpp **** 
  50:src/../h/../h/../h/riscv.hpp ****     //clear bit-mask bits in the sstatus register
  51:src/../h/../h/../h/riscv.hpp ****     static void clearSstatus(uint64 mask);
  52:src/../h/../h/../h/riscv.hpp **** 
  53:src/../h/../h/../h/riscv.hpp ****     //read from sstatus register
  54:src/../h/../h/../h/riscv.hpp ****     static uint64 readSstatus();
  55:src/../h/../h/../h/riscv.hpp **** 
  56:src/../h/../h/../h/riscv.hpp ****     //write to sstatus register
  57:src/../h/../h/../h/riscv.hpp ****     static void writeSstatus(uint64 sstatus);
  58:src/../h/../h/../h/riscv.hpp **** 
  59:src/../h/../h/../h/riscv.hpp ****     enum SIP
  60:src/../h/../h/../h/riscv.hpp ****     {
  61:src/../h/../h/../h/riscv.hpp ****         SSIP = (1 << 1), //supervisor software interrupt pending
  62:src/../h/../h/../h/riscv.hpp ****         STIP = (1 << 5), //supervisor timer interrupt pending
  63:src/../h/../h/../h/riscv.hpp ****                          //(timer is configured to throw a software interrupt, so this is not used)
  64:src/../h/../h/../h/riscv.hpp ****         SEIP = (1 << 9), //supervisor external interrupt pending
  65:src/../h/../h/../h/riscv.hpp ****     };
  66:src/../h/../h/../h/riscv.hpp **** 
GAS LISTING /tmp/ccD2ZDfQ.s 			page 3


  67:src/../h/../h/../h/riscv.hpp ****     //set bit-mask bits in the sip register
  68:src/../h/../h/../h/riscv.hpp ****     static void setSip(uint64 mask);
  69:src/../h/../h/../h/riscv.hpp **** 
  70:src/../h/../h/../h/riscv.hpp ****     //clear bit-mask bits in the sip register
  71:src/../h/../h/../h/riscv.hpp ****     static void clearSip(uint64 mask);
  72:src/../h/../h/../h/riscv.hpp **** 
  73:src/../h/../h/../h/riscv.hpp ****     //read from sip register
  74:src/../h/../h/../h/riscv.hpp ****     static uint64 readSip();
  75:src/../h/../h/../h/riscv.hpp **** 
  76:src/../h/../h/../h/riscv.hpp ****     //write to sip register
  77:src/../h/../h/../h/riscv.hpp ****     static void writeSip(uint64 Sip);
  78:src/../h/../h/../h/riscv.hpp **** private:
  79:src/../h/../h/../h/riscv.hpp **** 
  80:src/../h/../h/../h/riscv.hpp **** };
  81:src/../h/../h/../h/riscv.hpp **** 
  82:src/../h/../h/../h/riscv.hpp **** inline uint64 RiscV::readScause() {
  83:src/../h/../h/../h/riscv.hpp ****     uint64 volatile scause;
  84:src/../h/../h/../h/riscv.hpp ****     asm volatile("csrr %[scause], scause": [scause] "=r" (scause));
  85:src/../h/../h/../h/riscv.hpp ****     return scause;
  86:src/../h/../h/../h/riscv.hpp **** }
  87:src/../h/../h/../h/riscv.hpp **** 
  88:src/../h/../h/../h/riscv.hpp **** inline void RiscV::writeScause(uint64 scause) {
  89:src/../h/../h/../h/riscv.hpp ****     asm volatile("csrw scause, %[scause]":: [scause] "r" (scause));
  90:src/../h/../h/../h/riscv.hpp **** }
  91:src/../h/../h/../h/riscv.hpp **** 
  92:src/../h/../h/../h/riscv.hpp **** inline uint64 RiscV::readSepc() {
  93:src/../h/../h/../h/riscv.hpp ****     uint64 volatile sepc;
  94:src/../h/../h/../h/riscv.hpp ****     asm volatile("csrr %[sepc], sepc": [sepc] "=r" (sepc));
  95:src/../h/../h/../h/riscv.hpp ****     return sepc;
  96:src/../h/../h/../h/riscv.hpp **** }
  97:src/../h/../h/../h/riscv.hpp **** 
  98:src/../h/../h/../h/riscv.hpp **** inline void RiscV::writeSepc(uint64 sepc) {
  99:src/../h/../h/../h/riscv.hpp ****     asm volatile("csrw sepc, %[sepc]":: [sepc] "r" (sepc));
 100:src/../h/../h/../h/riscv.hpp **** }
 101:src/../h/../h/../h/riscv.hpp **** 
 102:src/../h/../h/../h/riscv.hpp **** inline uint64 RiscV::readStvec() {
 103:src/../h/../h/../h/riscv.hpp ****     uint64 volatile stvec;
 104:src/../h/../h/../h/riscv.hpp ****     asm volatile("csrr %[stvec], stvec": [stvec] "=r" (stvec));
 105:src/../h/../h/../h/riscv.hpp ****     return stvec;
 106:src/../h/../h/../h/riscv.hpp **** }
 107:src/../h/../h/../h/riscv.hpp **** 
 108:src/../h/../h/../h/riscv.hpp **** inline void RiscV::writeStvec(uint64 stvec) {
 109:src/../h/../h/../h/riscv.hpp ****     asm volatile("csrw stvec, %[stvec]":: [stvec] "r" (stvec));
  33              		.loc 2 109 5 is_stmt 1
  34              		.loc 2 109 63 is_stmt 0
  35              	#APP
  36              	# 109 "src/../h/../h/../h/riscv.hpp" 1
 110              	}
  37              		csrw stvec, a5
  38              	# 0 "" 2
  39              	.LVL2:
  40              	#NO_APP
  41              	.LBE43:
  42              	.LBE42:
  16:src/kernel.cpp ****     RiscV::setSstatus(RiscV::SIE);
  43              		.loc 1 16 5 is_stmt 1
  44              	.LBB44:
GAS LISTING /tmp/ccD2ZDfQ.s 			page 4


  45              	.LBB45:
 111:src/../h/../h/../h/riscv.hpp **** 
 112:src/../h/../h/../h/riscv.hpp **** inline void RiscV::setSstatus(uint64 mask) {
 113:src/../h/../h/../h/riscv.hpp ****     asm volatile("csrs sstatus, %[mask]":: [mask] "r" (mask));
  46              		.loc 2 113 5
  47              		.loc 2 113 62 is_stmt 0
  48 0024 93072000 		li	a5,2
  49              	#APP
  50              	# 113 "src/../h/../h/../h/riscv.hpp" 1
 114              	}
  51              		csrs sstatus, a5
  52              	# 0 "" 2
  53              	.LVL3:
  54              	#NO_APP
  55              	.LBE45:
  56              	.LBE44:
  17:src/kernel.cpp **** }
  57              		.loc 1 17 1
  58 002c 83308100 		ld	ra,8(sp)
  59              		.cfi_restore 1
  60 0030 03340100 		ld	s0,0(sp)
  61              		.cfi_restore 8
  62              		.cfi_def_cfa 2, 16
  63 0034 13010101 		addi	sp,sp,16
  64              		.cfi_def_cfa_offset 0
  65 0038 67800000 		jr	ra
  66              		.cfi_endproc
  67              	.LFE33:
  69              		.section	.rodata.str1.8,"aMS",@progbits,1
  70              		.align	3
  71              	.LC0:
  72 0000 4572726F 		.string	"Error: Invalid syscall id!"
  72      723A2049 
  72      6E76616C 
  72      69642073 
  72      79736361 
  73              		.text
  74              		.align	2
  75              		.globl	_ZN6Kernel15syscall_handlerEv
  77              	_ZN6Kernel15syscall_handlerEv:
  78              	.LFB35:
  18:src/kernel.cpp **** 
  19:src/kernel.cpp **** void Kernel::supervisorTrapHandler() {
  20:src/kernel.cpp ****     uint64 scause = RiscV::readScause();
  21:src/kernel.cpp **** 
  22:src/kernel.cpp ****     if (scause == 0x08 || scause == 0x09) {
  23:src/kernel.cpp ****         uint64 sepc = RiscV::readSepc() + 4;
  24:src/kernel.cpp ****         uint64 sstatus = RiscV::readSstatus();
  25:src/kernel.cpp ****         //RiscV::clearSip(RiscV::SSIP);
  26:src/kernel.cpp ****         syscall_handler();
  27:src/kernel.cpp ****         asm volatile ("sd a0, 80(s0)");
  28:src/kernel.cpp ****         RiscV::writeSstatus(sstatus);
  29:src/kernel.cpp ****         RiscV::writeSepc(sepc);
  30:src/kernel.cpp ****         return;
  31:src/kernel.cpp ****     }
  32:src/kernel.cpp ****     if (scause == 0x07) {
  33:src/kernel.cpp ****         uint64 sepc = RiscV::readSepc() + 4;
GAS LISTING /tmp/ccD2ZDfQ.s 			page 5


  34:src/kernel.cpp ****         __print_string("Nedozvoljena adresa upisa.\n");
  35:src/kernel.cpp ****         __print_string("scause: ");
  36:src/kernel.cpp ****         __print_uint64(scause);
  37:src/kernel.cpp ****         __putc('\n');
  38:src/kernel.cpp ****         //RiscV::clearSip(RiscV::SEIP);
  39:src/kernel.cpp ****         RiscV::writeSepc(sepc);
  40:src/kernel.cpp ****         return;
  41:src/kernel.cpp ****     }
  42:src/kernel.cpp ****     if (scause == 0x8000000000000001UL) {
  43:src/kernel.cpp ****         RiscV::clearSip(RiscV::SSIP);
  44:src/kernel.cpp ****         return;
  45:src/kernel.cpp ****     }
  46:src/kernel.cpp ****     if (scause == 0x8000000000000009UL) {
  47:src/kernel.cpp ****         console_handler();
  48:src/kernel.cpp ****         return;
  49:src/kernel.cpp ****     }
  50:src/kernel.cpp **** 
  51:src/kernel.cpp ****     uint64 sepc = RiscV::readSepc() + 4;
  52:src/kernel.cpp ****     __print_string("Neobradjen izuzetak.\n");
  53:src/kernel.cpp ****     __print_string("scause: ");
  54:src/kernel.cpp ****     //scause = RiscV::readScause();
  55:src/kernel.cpp ****     __print_uint64(scause);
  56:src/kernel.cpp ****     __putc('\n');
  57:src/kernel.cpp ****     /*RiscV::clearSip(RiscV::SSIP);
  58:src/kernel.cpp ****     //RiscV::writeSip(0);
  59:src/kernel.cpp ****     //console_handler();*/
  60:src/kernel.cpp ****     RiscV::writeSepc(sepc);
  61:src/kernel.cpp ****     return;
  62:src/kernel.cpp **** }
  63:src/kernel.cpp **** 
  64:src/kernel.cpp **** void Kernel::syscall_handler() {
  79              		.loc 1 64 32 is_stmt 1
  80              		.cfi_startproc
  81 003c 130101FB 		addi	sp,sp,-80
  82              		.cfi_def_cfa_offset 80
  83 0040 23341104 		sd	ra,72(sp)
  84 0044 23308104 		sd	s0,64(sp)
  85 0048 233C9102 		sd	s1,56(sp)
  86              		.cfi_offset 1, -8
  87              		.cfi_offset 8, -16
  88              		.cfi_offset 9, -24
  89 004c 13040105 		addi	s0,sp,80
  90              		.cfi_def_cfa 8, 0
  65:src/kernel.cpp ****     //uint64 sepc = RiscV::readSepc();
  66:src/kernel.cpp ****     volatile uint64 syscall_id;
  91              		.loc 1 66 5
  67:src/kernel.cpp ****     asm volatile ("mv %[syscall_id], a7": [syscall_id] "=r" (syscall_id));
  92              		.loc 1 67 5
  93              		.loc 1 67 74 is_stmt 0
  94              	#APP
  95              	# 67 "src/kernel.cpp" 1
  68              	
  96              		mv a5, a7
  97              	# 0 "" 2
  98              	#NO_APP
  99 0054 233CF4FC 		sd	a5,-40(s0)
  69:src/kernel.cpp ****     //volatile uint64 arg0, arg1, arg2, temp;
GAS LISTING /tmp/ccD2ZDfQ.s 			page 6


  70:src/kernel.cpp ****     switch(syscall_id) {
 100              		.loc 1 70 5 is_stmt 1
 101              		.loc 1 70 12 is_stmt 0
 102 0058 833784FD 		ld	a5,-40(s0)
 103 005c 13073001 		li	a4,19
 104 0060 636CF70C 		bgtu	a5,a4,.L4
 105 0064 93972700 		slli	a5,a5,2
 106 0068 17070000 		lla	a4,.L6
 106      13070700 
 107 0070 B387E700 		add	a5,a5,a4
 108 0074 83A70700 		lw	a5,0(a5)
 109 0078 B387E700 		add	a5,a5,a4
 110 007c 67800700 		jr	a5
 111              		.section	.rodata
 112              		.align	2
 113              		.align	2
 114              	.L6:
 115 0000 00000000 		.word	.L4-.L6
 116 0004 00000000 		.word	.L10-.L6
 117 0008 00000000 		.word	.L9-.L6
 118 000c 00000000 		.word	.L4-.L6
 119 0010 00000000 		.word	.L4-.L6
 120 0014 00000000 		.word	.L4-.L6
 121 0018 00000000 		.word	.L4-.L6
 122 001c 00000000 		.word	.L4-.L6
 123 0020 00000000 		.word	.L4-.L6
 124 0024 00000000 		.word	.L4-.L6
 125 0028 00000000 		.word	.L4-.L6
 126 002c 00000000 		.word	.L4-.L6
 127 0030 00000000 		.word	.L4-.L6
 128 0034 00000000 		.word	.L4-.L6
 129 0038 00000000 		.word	.L4-.L6
 130 003c 00000000 		.word	.L4-.L6
 131 0040 00000000 		.word	.L4-.L6
 132 0044 00000000 		.word	.L8-.L6
 133 0048 00000000 		.word	.L7-.L6
 134 004c 00000000 		.word	.L5-.L6
 135              		.text
 136              	.L10:
  71:src/kernel.cpp ****         case 0x01:
 137              		.loc 1 71 9 is_stmt 1
  72:src/kernel.cpp ****             Kernel::mem_alloc_handler();
 138              		.loc 1 72 13
 139              	.LBB58:
 140              	.LBB59:
 141              		.file 3 "src/../h/kernel.hpp"
   1:src/../h/kernel.hpp **** //
   2:src/../h/kernel.hpp **** // Created by os on 9/6/22.
   3:src/../h/kernel.hpp **** //
   4:src/../h/kernel.hpp **** 
   5:src/../h/kernel.hpp **** #ifndef OSMIUM_KERNEL_HPP
   6:src/../h/kernel.hpp **** #define OSMIUM_KERNEL_HPP
   7:src/../h/kernel.hpp **** 
   8:src/../h/kernel.hpp **** #include "memory_allocator.hpp"
   9:src/../h/kernel.hpp **** #include "../h/tcb.hpp"
  10:src/../h/kernel.hpp **** 
  11:src/../h/kernel.hpp **** class Kernel {
GAS LISTING /tmp/ccD2ZDfQ.s 			page 7


  12:src/../h/kernel.hpp **** public:
  13:src/../h/kernel.hpp ****     static void initKernel();
  14:src/../h/kernel.hpp ****     static void supervisorTrap();
  15:src/../h/kernel.hpp **** private:
  16:src/../h/kernel.hpp ****     static void supervisorTrapHandler();
  17:src/../h/kernel.hpp ****     static void syscall_handler();
  18:src/../h/kernel.hpp **** 
  19:src/../h/kernel.hpp ****     //syscall_c handlers
  20:src/../h/kernel.hpp ****     static void mem_alloc_handler();        //0x01
  21:src/../h/kernel.hpp ****     static void mem_free_handler();         //0x02
  22:src/../h/kernel.hpp ****     static void thread_create_handler();    //0x11
  23:src/../h/kernel.hpp ****     static void thread_exit_handler();      //0x12
  24:src/../h/kernel.hpp ****     static void thread_dispatch_handler();  //0x13
  25:src/../h/kernel.hpp **** };
  26:src/../h/kernel.hpp **** 
  27:src/../h/kernel.hpp **** 
  28:src/../h/kernel.hpp **** 
  29:src/../h/kernel.hpp **** 
  30:src/../h/kernel.hpp **** 
  31:src/../h/kernel.hpp **** //0x01
  32:src/../h/kernel.hpp **** inline void Kernel::mem_alloc_handler() {
  33:src/../h/kernel.hpp ****     volatile uint64 arg0;
 142              		.loc 3 33 5
  34:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 143              		.loc 3 34 5
 144              		.loc 3 34 55 is_stmt 0
 145              	#APP
 146              	# 34 "src/../h/kernel.hpp" 1
  35              	    MemoryAllocator::allocate((size_t)arg0);
 147              		mv a5, a0
 148              	# 0 "" 2
 149              	#NO_APP
 150 0084 2338F4FA 		sd	a5,-80(s0)
 151              		.loc 3 35 5 is_stmt 1
 152              		.loc 3 35 30 is_stmt 0
 153 0088 033504FB 		ld	a0,-80(s0)
 154 008c 97000000 		call	_ZN15MemoryAllocator8allocateEm@plt
 154      E7800000 
 155              	.LVL4:
 156              	.L3:
 157              	.LBE59:
 158              	.LBE58:
  73:src/kernel.cpp ****             break;
  74:src/kernel.cpp ****         case 0x02:
  75:src/kernel.cpp ****             Kernel::mem_free_handler();
  76:src/kernel.cpp ****             break;
  77:src/kernel.cpp ****         case 0x11:
  78:src/kernel.cpp ****             Kernel::thread_create_handler();
  79:src/kernel.cpp ****             break;
  80:src/kernel.cpp ****         case 0x12:
  81:src/kernel.cpp ****             Kernel::thread_exit_handler();
  82:src/kernel.cpp ****             break;
  83:src/kernel.cpp ****         case 0x13:
  84:src/kernel.cpp ****             Kernel::thread_dispatch_handler();
  85:src/kernel.cpp ****             break;
  86:src/kernel.cpp ****         default:
  87:src/kernel.cpp ****             asm volatile ("addi a0, zero, -1");
GAS LISTING /tmp/ccD2ZDfQ.s 			page 8


  88:src/kernel.cpp ****             __print_string("Error: Invalid syscall id!");
  89:src/kernel.cpp ****             break;
  90:src/kernel.cpp ****     }
  91:src/kernel.cpp ****     //RiscV::writeSepc(sepc);
  92:src/kernel.cpp **** }
 159              		.loc 1 92 1
 160 0094 83308104 		ld	ra,72(sp)
 161              		.cfi_remember_state
 162              		.cfi_restore 1
 163 0098 03340104 		ld	s0,64(sp)
 164              		.cfi_restore 8
 165              		.cfi_def_cfa 2, 80
 166 009c 83348103 		ld	s1,56(sp)
 167              		.cfi_restore 9
 168 00a0 13010105 		addi	sp,sp,80
 169              		.cfi_def_cfa_offset 0
 170 00a4 67800000 		jr	ra
 171              	.L9:
 172              		.cfi_restore_state
  74:src/kernel.cpp ****             Kernel::mem_free_handler();
 173              		.loc 1 74 9 is_stmt 1
  75:src/kernel.cpp ****             break;
 174              		.loc 1 75 13
 175              	.LBB60:
 176              	.LBB61:
  36:src/../h/kernel.hpp **** }
  37:src/../h/kernel.hpp **** 
  38:src/../h/kernel.hpp **** 
  39:src/../h/kernel.hpp **** 
  40:src/../h/kernel.hpp **** //0x02
  41:src/../h/kernel.hpp **** inline void Kernel::mem_free_handler() {
  42:src/../h/kernel.hpp ****     volatile uint64 arg0;
 177              		.loc 3 42 5
  43:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 178              		.loc 3 43 5
 179              		.loc 3 43 55 is_stmt 0
 180              	#APP
 181              	# 43 "src/../h/kernel.hpp" 1
  44              	    MemoryAllocator::free((void*)arg0);
 182              		mv a5, a0
 183              	# 0 "" 2
 184              	#NO_APP
 185 00ac 233CF4FA 		sd	a5,-72(s0)
 186              		.loc 3 44 5 is_stmt 1
 187              		.loc 3 44 26 is_stmt 0
 188 00b0 033584FB 		ld	a0,-72(s0)
 189 00b4 97000000 		call	_ZN15MemoryAllocator4freeEPv@plt
 189      E7800000 
 190              	.LVL5:
  45:src/../h/kernel.hpp **** }
 191              		.loc 3 45 1
 192 00bc 6FF09FFD 		j	.L3
 193              	.L8:
 194              	.LBE61:
 195              	.LBE60:
  77:src/kernel.cpp ****             Kernel::thread_create_handler();
 196              		.loc 1 77 9 is_stmt 1
GAS LISTING /tmp/ccD2ZDfQ.s 			page 9


  78:src/kernel.cpp ****             break;
 197              		.loc 1 78 13
 198              	.LBB62:
 199              	.LBB63:
  46:src/../h/kernel.hpp **** 
  47:src/../h/kernel.hpp **** 
  48:src/../h/kernel.hpp **** 
  49:src/../h/kernel.hpp **** //0x11
  50:src/../h/kernel.hpp **** inline void Kernel::thread_create_handler() {
  51:src/../h/kernel.hpp ****     volatile uint64 arg0, arg1, arg2;
 200              		.loc 3 51 5
  52:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 201              		.loc 3 52 5
 202              		.loc 3 52 55 is_stmt 0
 203              	#APP
 204              	# 52 "src/../h/kernel.hpp" 1
  53              	    asm volatile ("mv %[arg1], a1": [arg1] "=r"(arg1));
 205              		mv a5, a0
 206              	# 0 "" 2
 207              	#NO_APP
 208 00c4 2330F4FC 		sd	a5,-64(s0)
 209              		.loc 3 53 5 is_stmt 1
 210              		.loc 3 53 55 is_stmt 0
 211              	#APP
 212              	# 53 "src/../h/kernel.hpp" 1
  54              	    asm volatile ("mv %[arg2], a2": [arg2] "=r"(arg2));
 213              		mv a5, a1
 214              	# 0 "" 2
 215              	#NO_APP
 216 00cc 2334F4FC 		sd	a5,-56(s0)
 217              		.loc 3 54 5 is_stmt 1
 218              		.loc 3 54 55 is_stmt 0
 219              	#APP
 220              	# 54 "src/../h/kernel.hpp" 1
  55              	
 221              		mv a5, a2
 222              	# 0 "" 2
 223              	#NO_APP
 224 00d4 2338F4FC 		sd	a5,-48(s0)
  56:src/../h/kernel.hpp ****     *(TCB**)arg0 = TCB::createTCB((TCB::Body)arg1, (void*)arg2);
 225              		.loc 3 56 5 is_stmt 1
 226              		.loc 3 56 34 is_stmt 0
 227 00d8 033584FC 		ld	a0,-56(s0)
 228 00dc 833504FD 		ld	a1,-48(s0)
 229              		.loc 3 56 5
 230 00e0 833404FC 		ld	s1,-64(s0)
 231              		.loc 3 56 34
 232 00e4 97000000 		call	_ZN3TCB9createTCBEPFvPvES0_@plt
 232      E7800000 
 233              	.LVL6:
 234              		.loc 3 56 18
 235 00ec 23B0A400 		sd	a0,0(s1)
  57:src/../h/kernel.hpp **** 
  58:src/../h/kernel.hpp ****     asm volatile("mv a0, zero");
 236              		.loc 3 58 5 is_stmt 1
 237              		.loc 3 58 32 is_stmt 0
 238              	#APP
GAS LISTING /tmp/ccD2ZDfQ.s 			page 10


 239              	# 58 "src/../h/kernel.hpp" 1
  59              	    if (!(*(TCB**)arg0)) asm volatile("addi a0, a0, -1");
 240              		mv a0, zero
 241              	# 0 "" 2
 242              		.loc 3 59 5 is_stmt 1
 243              		.loc 3 59 11 is_stmt 0
 244              	#NO_APP
 245 00f4 833704FC 		ld	a5,-64(s0)
 246 00f8 83B70700 		ld	a5,0(a5)
 247              		.loc 3 59 5
 248 00fc E39C07F8 		bnez	a5,.L3
 249              		.loc 3 59 26 is_stmt 1
 250              		.loc 3 59 57 is_stmt 0
 251              	#APP
 252              	# 59 "src/../h/kernel.hpp" 1
  60              	}
 253              		addi a0, a0, -1
 254              	# 0 "" 2
 255              		.loc 3 60 1
 256              	#NO_APP
 257 0104 6FF01FF9 		j	.L3
 258              	.L7:
 259              	.LBE63:
 260              	.LBE62:
  80:src/kernel.cpp ****             Kernel::thread_exit_handler();
 261              		.loc 1 80 9 is_stmt 1
  81:src/kernel.cpp ****             break;
 262              		.loc 1 81 13
 263              	.LBB64:
 264              	.LBB65:
  61:src/../h/kernel.hpp **** 
  62:src/../h/kernel.hpp **** 
  63:src/../h/kernel.hpp **** 
  64:src/../h/kernel.hpp **** //0x12
  65:src/../h/kernel.hpp **** inline void Kernel::thread_exit_handler() {
  66:src/../h/kernel.hpp ****     asm volatile ("addi a0, zero, 0");
 265              		.loc 3 66 5
 266              		.loc 3 66 38 is_stmt 0
 267              	#APP
 268              	# 66 "src/../h/kernel.hpp" 1
  67              	    TCB::running->setFinished(true);
 269              		addi a0, zero, 0
 270              	# 0 "" 2
 271              		.loc 3 67 5 is_stmt 1
 272              		.loc 3 67 30 is_stmt 0
 273              	#NO_APP
 274 010c 97070000 		la	a5,_ZN3TCB7runningE
 274      83B70700 
 275 0114 83B70700 		ld	a5,0(a5)
 276              	.LVL7:
 277              	.LBB66:
 278              	.LBB67:
 279              		.file 4 "src/../h/../h/tcb.hpp"
   1:src/../h/../h/tcb.hpp **** //
   2:src/../h/../h/tcb.hpp **** // Created by os on 9/9/22.
   3:src/../h/../h/tcb.hpp **** //
   4:src/../h/../h/tcb.hpp **** 
GAS LISTING /tmp/ccD2ZDfQ.s 			page 11


   5:src/../h/../h/tcb.hpp **** #ifndef OSMIUM_TCB_HPP
   6:src/../h/../h/tcb.hpp **** #define OSMIUM_TCB_HPP
   7:src/../h/../h/tcb.hpp **** 
   8:src/../h/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/../h/tcb.hpp **** #include "../h/scheduler.hpp"
  10:src/../h/../h/tcb.hpp **** #include "../h/riscv.hpp"
  11:src/../h/../h/tcb.hpp **** 
  12:src/../h/../h/tcb.hpp **** class TCB {
  13:src/../h/../h/tcb.hpp **** public:
  14:src/../h/../h/tcb.hpp ****     using Body = void (*)(void*);
  15:src/../h/../h/tcb.hpp **** 
  16:src/../h/../h/tcb.hpp ****     static TCB* createTCB(Body body, void* args);
  17:src/../h/../h/tcb.hpp **** 
  18:src/../h/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  19:src/../h/../h/tcb.hpp **** 
  20:src/../h/../h/tcb.hpp ****     void setFinished(bool val) { finished = val; }
 280              		.loc 4 20 34 is_stmt 1
 281              		.loc 4 20 43 is_stmt 0
 282 0118 13071000 		li	a4,1
 283 011c 238CE700 		sb	a4,24(a5)
 284              	.LVL8:
 285              	.LBE67:
 286              	.LBE66:
  68:src/../h/kernel.hpp ****     TCB::yield();
 287              		.loc 3 68 5 is_stmt 1
 288              		.loc 3 68 15 is_stmt 0
 289 0120 97000000 		call	_ZN3TCB5yieldEv@plt
 289      E7800000 
 290              	.LVL9:
  69:src/../h/kernel.hpp **** }
 291              		.loc 3 69 1
 292 0128 6FF0DFF6 		j	.L3
 293              	.L5:
 294              	.LBE65:
 295              	.LBE64:
  83:src/kernel.cpp ****             Kernel::thread_dispatch_handler();
 296              		.loc 1 83 9 is_stmt 1
  84:src/kernel.cpp ****             break;
 297              		.loc 1 84 13
 298              	.LBB68:
 299              	.LBB69:
  70:src/../h/kernel.hpp **** 
  71:src/../h/kernel.hpp **** 
  72:src/../h/kernel.hpp **** 
  73:src/../h/kernel.hpp **** //0x13
  74:src/../h/kernel.hpp **** inline void Kernel::thread_dispatch_handler() {
  75:src/../h/kernel.hpp ****     TCB::yield();
 300              		.loc 3 75 5
 301              		.loc 3 75 15 is_stmt 0
 302 012c 97000000 		call	_ZN3TCB5yieldEv@plt
 302      E7800000 
 303              	.LVL10:
  76:src/../h/kernel.hpp **** }
 304              		.loc 3 76 1
 305 0134 6FF01FF6 		j	.L3
 306              	.L4:
 307              	.LBE69:
GAS LISTING /tmp/ccD2ZDfQ.s 			page 12


 308              	.LBE68:
  86:src/kernel.cpp ****             asm volatile ("addi a0, zero, -1");
 309              		.loc 1 86 9 is_stmt 1
  87:src/kernel.cpp ****             __print_string("Error: Invalid syscall id!");
 310              		.loc 1 87 13
  87:src/kernel.cpp ****             __print_string("Error: Invalid syscall id!");
 311              		.loc 1 87 47 is_stmt 0
 312              	#APP
 313              	# 87 "src/kernel.cpp" 1
  88:src/kernel.cpp ****             break;
 314              		addi a0, zero, -1
 315              	# 0 "" 2
 316              		.loc 1 88 13 is_stmt 1
  88:src/kernel.cpp ****             break;
 317              		.loc 1 88 27 is_stmt 0
 318              	#NO_APP
 319 013c 17050000 		lla	a0,.LC0
 319      13050500 
 320 0144 97000000 		call	_Z14__print_stringPKc@plt
 320      E7800000 
 321              	.LVL11:
  89:src/kernel.cpp ****     }
 322              		.loc 1 89 13 is_stmt 1
 323              		.loc 1 92 1 is_stmt 0
 324 014c 6FF09FF4 		j	.L3
 325              		.cfi_endproc
 326              	.LFE35:
 328              		.section	.rodata.str1.8
 329 001b 00000000 		.align	3
 329      00
 330              	.LC1:
 331 0020 4E65646F 		.string	"Nedozvoljena adresa upisa.\n"
 331      7A766F6C 
 331      6A656E61 
 331      20616472 
 331      65736120 
 332 003c 00000000 		.align	3
 333              	.LC2:
 334 0040 73636175 		.string	"scause: "
 334      73653A20 
 334      00
 335 0049 00000000 		.align	3
 335      000000
 336              	.LC3:
 337 0050 4E656F62 		.string	"Neobradjen izuzetak.\n"
 337      7261646A 
 337      656E2069 
 337      7A757A65 
 337      74616B2E 
 338              		.text
 339              		.align	2
 340              		.globl	_ZN6Kernel21supervisorTrapHandlerEv
 342              	_ZN6Kernel21supervisorTrapHandlerEv:
 343              	.LFB34:
  19:src/kernel.cpp ****     uint64 scause = RiscV::readScause();
 344              		.loc 1 19 38 is_stmt 1
 345              		.cfi_startproc
GAS LISTING /tmp/ccD2ZDfQ.s 			page 13


 346 0150 130101FB 		addi	sp,sp,-80
 347              		.cfi_def_cfa_offset 80
 348 0154 23341104 		sd	ra,72(sp)
 349 0158 23308104 		sd	s0,64(sp)
 350 015c 233C9102 		sd	s1,56(sp)
 351 0160 23382103 		sd	s2,48(sp)
 352              		.cfi_offset 1, -8
 353              		.cfi_offset 8, -16
 354              		.cfi_offset 9, -24
 355              		.cfi_offset 18, -32
 356 0164 13040105 		addi	s0,sp,80
 357              		.cfi_def_cfa 8, 0
  20:src/kernel.cpp **** 
 358              		.loc 1 20 5
 359              	.LBB70:
 360              	.LBB71:
  83:src/../h/../h/../h/riscv.hpp ****     asm volatile("csrr %[scause], scause": [scause] "=r" (scause));
 361              		.loc 2 83 5
  84:src/../h/../h/../h/riscv.hpp ****     return scause;
 362              		.loc 2 84 5
  84:src/../h/../h/../h/riscv.hpp ****     return scause;
 363              		.loc 2 84 67 is_stmt 0
 364              	#APP
 365              	# 84 "src/../h/../h/../h/riscv.hpp" 1
 366              		csrr a5, scause
 367              	# 0 "" 2
 368              	#NO_APP
 369 016c 233CF4FA 		sd	a5,-72(s0)
  85:src/../h/../h/../h/riscv.hpp **** }
 370              		.loc 2 85 5 is_stmt 1
  85:src/../h/../h/../h/riscv.hpp **** }
 371              		.loc 2 85 12 is_stmt 0
 372 0170 833484FB 		ld	s1,-72(s0)
 373              	.LVL12:
 374              	.LBE71:
 375              	.LBE70:
  22:src/kernel.cpp ****         uint64 sepc = RiscV::readSepc() + 4;
 376              		.loc 1 22 5 is_stmt 1
 377              	.LBB72:
  22:src/kernel.cpp ****         uint64 sepc = RiscV::readSepc() + 4;
 378              		.loc 1 22 24 is_stmt 0
 379 0174 138784FF 		addi	a4,s1,-8
  22:src/kernel.cpp ****         uint64 sepc = RiscV::readSepc() + 4;
 380              		.loc 1 22 5
 381 0178 93071000 		li	a5,1
 382 017c 63F8E708 		bleu	a4,a5,.L21
 383              	.LBE72:
  32:src/kernel.cpp ****         uint64 sepc = RiscV::readSepc() + 4;
 384              		.loc 1 32 5 is_stmt 1
 385              	.LBB82:
 386 0180 93077000 		li	a5,7
 387 0184 638EF40A 		beq	s1,a5,.L22
 388              	.LBE82:
  42:src/kernel.cpp ****         RiscV::clearSip(RiscV::SSIP);
 389              		.loc 1 42 5
 390 0188 9307F0FF 		li	a5,-1
 391 018c 9397F703 		slli	a5,a5,63
GAS LISTING /tmp/ccD2ZDfQ.s 			page 14


 392 0190 93871700 		addi	a5,a5,1
 393 0194 638EF40E 		beq	s1,a5,.L23
  46:src/kernel.cpp ****         console_handler();
 394              		.loc 1 46 5
 395 0198 9307F0FF 		li	a5,-1
 396 019c 9397F703 		slli	a5,a5,63
 397 01a0 93879700 		addi	a5,a5,9
 398 01a4 638CF40E 		beq	s1,a5,.L24
  51:src/kernel.cpp ****     __print_string("Neobradjen izuzetak.\n");
 399              		.loc 1 51 5
 400              	.LBB88:
 401              	.LBB89:
  93:src/../h/../h/../h/riscv.hpp ****     asm volatile("csrr %[sepc], sepc": [sepc] "=r" (sepc));
 402              		.loc 2 93 5
  94:src/../h/../h/../h/riscv.hpp ****     return sepc;
 403              		.loc 2 94 5
  94:src/../h/../h/../h/riscv.hpp ****     return sepc;
 404              		.loc 2 94 59 is_stmt 0
 405              	#APP
 406              	# 94 "src/../h/../h/../h/riscv.hpp" 1
 407              		csrr a5, sepc
 408              	# 0 "" 2
 409              	#NO_APP
 410 01ac 233CF4FC 		sd	a5,-40(s0)
  95:src/../h/../h/../h/riscv.hpp **** }
 411              		.loc 2 95 5 is_stmt 1
  95:src/../h/../h/../h/riscv.hpp **** }
 412              		.loc 2 95 12 is_stmt 0
 413 01b0 033984FD 		ld	s2,-40(s0)
 414              	.LBE89:
 415              	.LBE88:
  51:src/kernel.cpp ****     __print_string("Neobradjen izuzetak.\n");
 416              		.loc 1 51 39
 417 01b4 13094900 		addi	s2,s2,4
 418              	.LVL13:
  52:src/kernel.cpp ****     __print_string("scause: ");
 419              		.loc 1 52 5 is_stmt 1
  52:src/kernel.cpp ****     __print_string("scause: ");
 420              		.loc 1 52 19 is_stmt 0
 421 01b8 17050000 		lla	a0,.LC3
 421      13050500 
 422 01c0 97000000 		call	_Z14__print_stringPKc@plt
 422      E7800000 
 423              	.LVL14:
  53:src/kernel.cpp ****     //scause = RiscV::readScause();
 424              		.loc 1 53 5 is_stmt 1
  53:src/kernel.cpp ****     //scause = RiscV::readScause();
 425              		.loc 1 53 19 is_stmt 0
 426 01c8 17050000 		lla	a0,.LC2
 426      13050500 
 427 01d0 97000000 		call	_Z14__print_stringPKc@plt
 427      E7800000 
 428              	.LVL15:
  55:src/kernel.cpp ****     __putc('\n');
 429              		.loc 1 55 5 is_stmt 1
  55:src/kernel.cpp ****     __putc('\n');
 430              		.loc 1 55 19 is_stmt 0
GAS LISTING /tmp/ccD2ZDfQ.s 			page 15


 431 01d8 13850400 		mv	a0,s1
 432 01dc 97000000 		call	_Z14__print_uint64m@plt
 432      E7800000 
 433              	.LVL16:
  56:src/kernel.cpp ****     /*RiscV::clearSip(RiscV::SSIP);
 434              		.loc 1 56 5 is_stmt 1
  56:src/kernel.cpp ****     /*RiscV::clearSip(RiscV::SSIP);
 435              		.loc 1 56 11 is_stmt 0
 436 01e4 1305A000 		li	a0,10
 437 01e8 97000000 		call	__putc@plt
 437      E7800000 
 438              	.LVL17:
  60:src/kernel.cpp ****     return;
 439              		.loc 1 60 5 is_stmt 1
 440              	.LBB90:
 441              	.LBB91:
  99:src/../h/../h/../h/riscv.hpp **** }
 442              		.loc 2 99 5
  99:src/../h/../h/../h/riscv.hpp **** }
 443              		.loc 2 99 59 is_stmt 0
 444              	#APP
 445              	# 99 "src/../h/../h/../h/riscv.hpp" 1
 446              		csrw sepc, s2
 447              	# 0 "" 2
 448              	.LVL18:
 449              	#NO_APP
 450              	.L14:
 451              	.LBE91:
 452              	.LBE90:
  62:src/kernel.cpp **** 
 453              		.loc 1 62 1
 454 01f4 83308104 		ld	ra,72(sp)
 455              		.cfi_remember_state
 456              		.cfi_restore 1
 457 01f8 03340104 		ld	s0,64(sp)
 458              		.cfi_restore 8
 459              		.cfi_def_cfa 2, 80
 460 01fc 83348103 		ld	s1,56(sp)
 461              		.cfi_restore 9
 462 0200 03390103 		ld	s2,48(sp)
 463              		.cfi_restore 18
 464 0204 13010105 		addi	sp,sp,80
 465              		.cfi_def_cfa_offset 0
 466 0208 67800000 		jr	ra
 467              	.LVL19:
 468              	.L21:
 469              		.cfi_restore_state
 470              	.LBB92:
 471              	.LBB73:
  23:src/kernel.cpp ****         uint64 sstatus = RiscV::readSstatus();
 472              		.loc 1 23 9 is_stmt 1
 473              	.LBB74:
 474              	.LBB75:
  93:src/../h/../h/../h/riscv.hpp ****     asm volatile("csrr %[sepc], sepc": [sepc] "=r" (sepc));
 475              		.loc 2 93 5
  94:src/../h/../h/../h/riscv.hpp ****     return sepc;
 476              		.loc 2 94 5
GAS LISTING /tmp/ccD2ZDfQ.s 			page 16


  94:src/../h/../h/../h/riscv.hpp ****     return sepc;
 477              		.loc 2 94 59 is_stmt 0
 478              	#APP
 479              	# 94 "src/../h/../h/../h/riscv.hpp" 1
 480              		csrr a5, sepc
 481              	# 0 "" 2
 482              	#NO_APP
 483 0210 2334F4FC 		sd	a5,-56(s0)
  95:src/../h/../h/../h/riscv.hpp **** }
 484              		.loc 2 95 5 is_stmt 1
  95:src/../h/../h/../h/riscv.hpp **** }
 485              		.loc 2 95 12 is_stmt 0
 486 0214 833484FC 		ld	s1,-56(s0)
 487              	.LVL20:
 488              	.LBE75:
 489              	.LBE74:
  23:src/kernel.cpp ****         uint64 sstatus = RiscV::readSstatus();
 490              		.loc 1 23 43
 491 0218 93844400 		addi	s1,s1,4
 492              	.LVL21:
  24:src/kernel.cpp ****         //RiscV::clearSip(RiscV::SSIP);
 493              		.loc 1 24 9 is_stmt 1
 494              	.LBB76:
 495              	.LBB77:
 115:src/../h/../h/../h/riscv.hpp **** 
 116:src/../h/../h/../h/riscv.hpp **** inline void RiscV::clearSstatus(uint64 mask) {
 117:src/../h/../h/../h/riscv.hpp ****     asm volatile("csrc sstatus, %[mask]":: [mask] "r" (mask));
 118:src/../h/../h/../h/riscv.hpp **** }
 119:src/../h/../h/../h/riscv.hpp **** 
 120:src/../h/../h/../h/riscv.hpp **** inline uint64 RiscV::readSstatus() {
 121:src/../h/../h/../h/riscv.hpp ****     uint64 volatile sstatus;
 496              		.loc 2 121 5
 122:src/../h/../h/../h/riscv.hpp ****     asm volatile("csrr %[sstatus], sstatus": [sstatus] "=r" (sstatus));
 497              		.loc 2 122 5
 498              		.loc 2 122 71 is_stmt 0
 499              	#APP
 500              	# 122 "src/../h/../h/../h/riscv.hpp" 1
 123              	    return sstatus;
 501              		csrr a5, sstatus
 502              	# 0 "" 2
 503              	#NO_APP
 504 0220 2330F4FC 		sd	a5,-64(s0)
 505              		.loc 2 123 5 is_stmt 1
 506              		.loc 2 123 12 is_stmt 0
 507 0224 033904FC 		ld	s2,-64(s0)
 508              	.LVL22:
 509              	.LBE77:
 510              	.LBE76:
  26:src/kernel.cpp ****         asm volatile ("sd a0, 80(s0)");
 511              		.loc 1 26 9 is_stmt 1
  26:src/kernel.cpp ****         asm volatile ("sd a0, 80(s0)");
 512              		.loc 1 26 24 is_stmt 0
 513 0228 97000000 		call	_ZN6Kernel15syscall_handlerEv
 513      E7800000 
 514              	.LVL23:
  27:src/kernel.cpp ****         RiscV::writeSstatus(sstatus);
 515              		.loc 1 27 9 is_stmt 1
GAS LISTING /tmp/ccD2ZDfQ.s 			page 17


  27:src/kernel.cpp ****         RiscV::writeSstatus(sstatus);
 516              		.loc 1 27 39 is_stmt 0
 517              	#APP
 518              	# 27 "src/kernel.cpp" 1
  28:src/kernel.cpp ****         RiscV::writeSepc(sepc);
 519              		sd a0, 80(s0)
 520              	# 0 "" 2
 521              		.loc 1 28 9 is_stmt 1
 522              	.LVL24:
 523              	#NO_APP
 524              	.LBB78:
 525              	.LBB79:
 124:src/../h/../h/../h/riscv.hpp **** }
 125:src/../h/../h/../h/riscv.hpp **** 
 126:src/../h/../h/../h/riscv.hpp **** inline void RiscV::writeSstatus(uint64 sstatus) {
 127:src/../h/../h/../h/riscv.hpp ****     asm volatile("csrw sstatus, %[sstatus]":: [sstatus] "r" (sstatus));
 526              		.loc 2 127 5
 527              		.loc 2 127 71 is_stmt 0
 528              	#APP
 529              	# 127 "src/../h/../h/../h/riscv.hpp" 1
 128              	}
 530              		csrw sstatus, s2
 531              	# 0 "" 2
 532              	.LVL25:
 533              	#NO_APP
 534              	.LBE79:
 535              	.LBE78:
  29:src/kernel.cpp ****         return;
 536              		.loc 1 29 9 is_stmt 1
 537              	.LBB80:
 538              	.LBB81:
  99:src/../h/../h/../h/riscv.hpp **** }
 539              		.loc 2 99 5
  99:src/../h/../h/../h/riscv.hpp **** }
 540              		.loc 2 99 59 is_stmt 0
 541              	#APP
 542              	# 99 "src/../h/../h/../h/riscv.hpp" 1
 543              		csrw sepc, s1
 544              	# 0 "" 2
 545              	.LVL26:
 546              	#NO_APP
 547              	.LBE81:
 548              	.LBE80:
  30:src/kernel.cpp ****     }
 549              		.loc 1 30 9 is_stmt 1
 550 023c 6FF09FFB 		j	.L14
 551              	.LVL27:
 552              	.L22:
 553              	.LBE73:
 554              	.LBE92:
 555              	.LBB93:
 556              	.LBB83:
  33:src/kernel.cpp ****         __print_string("Nedozvoljena adresa upisa.\n");
 557              		.loc 1 33 9
 558              	.LBB84:
 559              	.LBB85:
  93:src/../h/../h/../h/riscv.hpp ****     asm volatile("csrr %[sepc], sepc": [sepc] "=r" (sepc));
GAS LISTING /tmp/ccD2ZDfQ.s 			page 18


 560              		.loc 2 93 5
  94:src/../h/../h/../h/riscv.hpp ****     return sepc;
 561              		.loc 2 94 5
  94:src/../h/../h/../h/riscv.hpp ****     return sepc;
 562              		.loc 2 94 59 is_stmt 0
 563              	#APP
 564              	# 94 "src/../h/../h/../h/riscv.hpp" 1
 565              		csrr a5, sepc
 566              	# 0 "" 2
 567              	#NO_APP
 568 0244 2338F4FC 		sd	a5,-48(s0)
  95:src/../h/../h/../h/riscv.hpp **** }
 569              		.loc 2 95 5 is_stmt 1
  95:src/../h/../h/../h/riscv.hpp **** }
 570              		.loc 2 95 12 is_stmt 0
 571 0248 033904FD 		ld	s2,-48(s0)
 572              	.LBE85:
 573              	.LBE84:
  33:src/kernel.cpp ****         __print_string("Nedozvoljena adresa upisa.\n");
 574              		.loc 1 33 43
 575 024c 13094900 		addi	s2,s2,4
 576              	.LVL28:
  34:src/kernel.cpp ****         __print_string("scause: ");
 577              		.loc 1 34 9 is_stmt 1
  34:src/kernel.cpp ****         __print_string("scause: ");
 578              		.loc 1 34 23 is_stmt 0
 579 0250 17050000 		lla	a0,.LC1
 579      13050500 
 580 0258 97000000 		call	_Z14__print_stringPKc@plt
 580      E7800000 
 581              	.LVL29:
  35:src/kernel.cpp ****         __print_uint64(scause);
 582              		.loc 1 35 9 is_stmt 1
  35:src/kernel.cpp ****         __print_uint64(scause);
 583              		.loc 1 35 23 is_stmt 0
 584 0260 17050000 		lla	a0,.LC2
 584      13050500 
 585 0268 97000000 		call	_Z14__print_stringPKc@plt
 585      E7800000 
 586              	.LVL30:
  36:src/kernel.cpp ****         __putc('\n');
 587              		.loc 1 36 9 is_stmt 1
  36:src/kernel.cpp ****         __putc('\n');
 588              		.loc 1 36 23 is_stmt 0
 589 0270 13850400 		mv	a0,s1
 590 0274 97000000 		call	_Z14__print_uint64m@plt
 590      E7800000 
 591              	.LVL31:
  37:src/kernel.cpp ****         //RiscV::clearSip(RiscV::SEIP);
 592              		.loc 1 37 9 is_stmt 1
  37:src/kernel.cpp ****         //RiscV::clearSip(RiscV::SEIP);
 593              		.loc 1 37 15 is_stmt 0
 594 027c 1305A000 		li	a0,10
 595 0280 97000000 		call	__putc@plt
 595      E7800000 
 596              	.LVL32:
  39:src/kernel.cpp ****         return;
GAS LISTING /tmp/ccD2ZDfQ.s 			page 19


 597              		.loc 1 39 9 is_stmt 1
 598              	.LBB86:
 599              	.LBB87:
  99:src/../h/../h/../h/riscv.hpp **** }
 600              		.loc 2 99 5
  99:src/../h/../h/../h/riscv.hpp **** }
 601              		.loc 2 99 59 is_stmt 0
 602              	#APP
 603              	# 99 "src/../h/../h/../h/riscv.hpp" 1
 604              		csrw sepc, s2
 605              	# 0 "" 2
 606              	.LVL33:
 607              	#NO_APP
 608              	.LBE87:
 609              	.LBE86:
  40:src/kernel.cpp ****     }
 610              		.loc 1 40 9 is_stmt 1
 611 028c 6FF09FF6 		j	.L14
 612              	.LVL34:
 613              	.L23:
 614              	.LBE83:
 615              	.LBE93:
  43:src/kernel.cpp ****         return;
 616              		.loc 1 43 9
 617              	.LBB94:
 618              	.LBB95:
 129:src/../h/../h/../h/riscv.hpp **** 
 130:src/../h/../h/../h/riscv.hpp **** inline void RiscV::setSip(uint64 mask) {
 131:src/../h/../h/../h/riscv.hpp ****     asm volatile("csrs sip, %[mask]":: [mask] "r" (mask));
 132:src/../h/../h/../h/riscv.hpp **** }
 133:src/../h/../h/../h/riscv.hpp **** 
 134:src/../h/../h/../h/riscv.hpp **** inline void RiscV::clearSip(uint64 mask) {
 135:src/../h/../h/../h/riscv.hpp ****     asm volatile("csrc sip, %[mask]":: [mask] "r" (mask));
 619              		.loc 2 135 5
 620              		.loc 2 135 58 is_stmt 0
 621 0290 93072000 		li	a5,2
 622              	#APP
 623              	# 135 "src/../h/../h/../h/riscv.hpp" 1
 136              	}
 624              		csrc sip, a5
 625              	# 0 "" 2
 626              	.LVL35:
 627              	#NO_APP
 628              	.LBE95:
 629              	.LBE94:
  44:src/kernel.cpp ****     }
 630              		.loc 1 44 9 is_stmt 1
 631 0298 6FF0DFF5 		j	.L14
 632              	.L24:
  47:src/kernel.cpp ****         return;
 633              		.loc 1 47 9
  47:src/kernel.cpp ****         return;
 634              		.loc 1 47 24 is_stmt 0
 635 029c 97000000 		call	console_handler@plt
 635      E7800000 
 636              	.LVL36:
  48:src/kernel.cpp ****     }
GAS LISTING /tmp/ccD2ZDfQ.s 			page 20


 637              		.loc 1 48 9 is_stmt 1
 638 02a4 6FF01FF5 		j	.L14
 639              		.cfi_endproc
 640              	.LFE34:
 642              	.Letext0:
 643              		.file 5 "src/../lib/hw.h"
 644              		.file 6 "src/../h/memory_allocator.hpp"
 645              		.file 7 "src/../h/print.hpp"
 646              		.file 8 "src/../h/../lib/console.h"
GAS LISTING /tmp/ccD2ZDfQ.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 kernel.cpp
     /tmp/ccD2ZDfQ.s:9      .text:0000000000000000 _ZN6Kernel10initKernelEv
     /tmp/ccD2ZDfQ.s:13     .text:0000000000000000 .L0 
     /tmp/ccD2ZDfQ.s:14     .text:0000000000000000 .L0 
     /tmp/ccD2ZDfQ.s:15     .text:0000000000000004 .L0 
     /tmp/ccD2ZDfQ.s:18     .text:000000000000000c .L0 
     /tmp/ccD2ZDfQ.s:19     .text:000000000000000c .L0 
     /tmp/ccD2ZDfQ.s:21     .text:0000000000000010 .L0 
     /tmp/ccD2ZDfQ.s:23     .text:0000000000000010 .L0 
     /tmp/ccD2ZDfQ.s:24     .text:0000000000000010 .L0 
     /tmp/ccD2ZDfQ.s:27     .text:0000000000000018 .L0 
     /tmp/ccD2ZDfQ.s:28     .text:0000000000000018 .L0 
     /tmp/ccD2ZDfQ.s:34     .text:0000000000000020 .L0 
src/../h/../h/../h/riscv.hpp:109    .text:0000000000000020 .L0 
     /tmp/ccD2ZDfQ.s:46     .text:0000000000000024 .L0 
     /tmp/ccD2ZDfQ.s:47     .text:0000000000000024 .L0 
     /tmp/ccD2ZDfQ.s:48     .text:0000000000000024 .L0 
     /tmp/ccD2ZDfQ.s:58     .text:000000000000002c .L0 
     /tmp/ccD2ZDfQ.s:59     .text:0000000000000030 .L0 
     /tmp/ccD2ZDfQ.s:61     .text:0000000000000034 .L0 
     /tmp/ccD2ZDfQ.s:62     .text:0000000000000034 .L0 
     /tmp/ccD2ZDfQ.s:64     .text:0000000000000038 .L0 
     /tmp/ccD2ZDfQ.s:66     .text:000000000000003c .L0 
     /tmp/ccD2ZDfQ.s:77     .text:000000000000003c _ZN6Kernel15syscall_handlerEv
     /tmp/ccD2ZDfQ.s:80     .text:000000000000003c .L0 
     /tmp/ccD2ZDfQ.s:81     .text:000000000000003c .L0 
     /tmp/ccD2ZDfQ.s:82     .text:0000000000000040 .L0 
     /tmp/ccD2ZDfQ.s:86     .text:000000000000004c .L0 
     /tmp/ccD2ZDfQ.s:87     .text:000000000000004c .L0 
     /tmp/ccD2ZDfQ.s:88     .text:000000000000004c .L0 
     /tmp/ccD2ZDfQ.s:90     .text:0000000000000050 .L0 
     /tmp/ccD2ZDfQ.s:92     .text:0000000000000050 .L0 
     /tmp/ccD2ZDfQ.s:93     .text:0000000000000050 .L0 
      src/kernel.cpp:67     .text:0000000000000050 .L0 
     /tmp/ccD2ZDfQ.s:101    .text:0000000000000058 .L0 
     /tmp/ccD2ZDfQ.s:102    .text:0000000000000058 .L0 
     /tmp/ccD2ZDfQ.s:138    .text:0000000000000080 .L0 
     /tmp/ccD2ZDfQ.s:142    .text:0000000000000080 .L0 
     /tmp/ccD2ZDfQ.s:143    .text:0000000000000080 .L0 
     /tmp/ccD2ZDfQ.s:144    .text:0000000000000080 .L0 
 src/../h/kernel.hpp:34     .text:0000000000000080 .L0 
     /tmp/ccD2ZDfQ.s:152    .text:0000000000000088 .L0 
     /tmp/ccD2ZDfQ.s:153    .text:0000000000000088 .L0 
     /tmp/ccD2ZDfQ.s:160    .text:0000000000000094 .L0 
     /tmp/ccD2ZDfQ.s:161    .text:0000000000000098 .L0 
     /tmp/ccD2ZDfQ.s:162    .text:0000000000000098 .L0 
     /tmp/ccD2ZDfQ.s:164    .text:000000000000009c .L0 
     /tmp/ccD2ZDfQ.s:165    .text:000000000000009c .L0 
     /tmp/ccD2ZDfQ.s:167    .text:00000000000000a0 .L0 
     /tmp/ccD2ZDfQ.s:169    .text:00000000000000a4 .L0 
     /tmp/ccD2ZDfQ.s:172    .text:00000000000000a8 .L0 
     /tmp/ccD2ZDfQ.s:174    .text:00000000000000a8 .L0 
     /tmp/ccD2ZDfQ.s:177    .text:00000000000000a8 .L0 
     /tmp/ccD2ZDfQ.s:178    .text:00000000000000a8 .L0 
     /tmp/ccD2ZDfQ.s:179    .text:00000000000000a8 .L0 
 src/../h/kernel.hpp:43     .text:00000000000000a8 .L0 
GAS LISTING /tmp/ccD2ZDfQ.s 			page 22


     /tmp/ccD2ZDfQ.s:187    .text:00000000000000b0 .L0 
     /tmp/ccD2ZDfQ.s:188    .text:00000000000000b0 .L0 
     /tmp/ccD2ZDfQ.s:192    .text:00000000000000bc .L0 
     /tmp/ccD2ZDfQ.s:197    .text:00000000000000c0 .L0 
     /tmp/ccD2ZDfQ.s:200    .text:00000000000000c0 .L0 
     /tmp/ccD2ZDfQ.s:201    .text:00000000000000c0 .L0 
     /tmp/ccD2ZDfQ.s:202    .text:00000000000000c0 .L0 
 src/../h/kernel.hpp:52     .text:00000000000000c0 .L0 
     /tmp/ccD2ZDfQ.s:210    .text:00000000000000c8 .L0 
 src/../h/kernel.hpp:53     .text:00000000000000c8 .L0 
     /tmp/ccD2ZDfQ.s:218    .text:00000000000000d0 .L0 
 src/../h/kernel.hpp:54     .text:00000000000000d0 .L0 
     /tmp/ccD2ZDfQ.s:226    .text:00000000000000d8 .L0 
     /tmp/ccD2ZDfQ.s:227    .text:00000000000000d8 .L0 
     /tmp/ccD2ZDfQ.s:230    .text:00000000000000e0 .L0 
     /tmp/ccD2ZDfQ.s:232    .text:00000000000000e4 .L0 
     /tmp/ccD2ZDfQ.s:235    .text:00000000000000ec .L0 
     /tmp/ccD2ZDfQ.s:237    .text:00000000000000f0 .L0 
 src/../h/kernel.hpp:58     .text:00000000000000f0 .L0 
     /tmp/ccD2ZDfQ.s:243    .text:00000000000000f4 .L0 
     /tmp/ccD2ZDfQ.s:245    .text:00000000000000f4 .L0 
     /tmp/ccD2ZDfQ.s:248    .text:00000000000000fc .L0 
     /tmp/ccD2ZDfQ.s:250    .text:0000000000000100 .L0 
 src/../h/kernel.hpp:59     .text:0000000000000100 .L0 
     /tmp/ccD2ZDfQ.s:257    .text:0000000000000104 .L0 
     /tmp/ccD2ZDfQ.s:262    .text:0000000000000108 .L0 
     /tmp/ccD2ZDfQ.s:265    .text:0000000000000108 .L0 
     /tmp/ccD2ZDfQ.s:266    .text:0000000000000108 .L0 
 src/../h/kernel.hpp:66     .text:0000000000000108 .L0 
     /tmp/ccD2ZDfQ.s:272    .text:000000000000010c .L0 
     /tmp/ccD2ZDfQ.s:274    .text:000000000000010c .L0 
     /tmp/ccD2ZDfQ.s:281    .text:0000000000000118 .L0 
     /tmp/ccD2ZDfQ.s:282    .text:0000000000000118 .L0 
     /tmp/ccD2ZDfQ.s:288    .text:0000000000000120 .L0 
     /tmp/ccD2ZDfQ.s:289    .text:0000000000000120 .L0 
     /tmp/ccD2ZDfQ.s:292    .text:0000000000000128 .L0 
     /tmp/ccD2ZDfQ.s:297    .text:000000000000012c .L0 
     /tmp/ccD2ZDfQ.s:300    .text:000000000000012c .L0 
     /tmp/ccD2ZDfQ.s:301    .text:000000000000012c .L0 
     /tmp/ccD2ZDfQ.s:302    .text:000000000000012c .L0 
     /tmp/ccD2ZDfQ.s:305    .text:0000000000000134 .L0 
     /tmp/ccD2ZDfQ.s:310    .text:0000000000000138 .L0 
     /tmp/ccD2ZDfQ.s:311    .text:0000000000000138 .L0 
      src/kernel.cpp:87     .text:0000000000000138 .L0 
     /tmp/ccD2ZDfQ.s:317    .text:000000000000013c .L0 
     /tmp/ccD2ZDfQ.s:319    .text:000000000000013c .L0 
     /tmp/ccD2ZDfQ.s:323    .text:000000000000014c .L0 
     /tmp/ccD2ZDfQ.s:324    .text:000000000000014c .L0 
     /tmp/ccD2ZDfQ.s:325    .text:0000000000000150 .L0 
     /tmp/ccD2ZDfQ.s:342    .text:0000000000000150 _ZN6Kernel21supervisorTrapHandlerEv
     /tmp/ccD2ZDfQ.s:345    .text:0000000000000150 .L0 
     /tmp/ccD2ZDfQ.s:346    .text:0000000000000150 .L0 
     /tmp/ccD2ZDfQ.s:347    .text:0000000000000154 .L0 
     /tmp/ccD2ZDfQ.s:352    .text:0000000000000164 .L0 
     /tmp/ccD2ZDfQ.s:353    .text:0000000000000164 .L0 
     /tmp/ccD2ZDfQ.s:354    .text:0000000000000164 .L0 
     /tmp/ccD2ZDfQ.s:355    .text:0000000000000164 .L0 
GAS LISTING /tmp/ccD2ZDfQ.s 			page 23


     /tmp/ccD2ZDfQ.s:357    .text:0000000000000168 .L0 
     /tmp/ccD2ZDfQ.s:361    .text:0000000000000168 .L0 
     /tmp/ccD2ZDfQ.s:362    .text:0000000000000168 .L0 
     /tmp/ccD2ZDfQ.s:363    .text:0000000000000168 .L0 
src/../h/../h/../h/riscv.hpp:84     .text:0000000000000168 .L0 
     /tmp/ccD2ZDfQ.s:371    .text:0000000000000170 .L0 
     /tmp/ccD2ZDfQ.s:372    .text:0000000000000170 .L0 
     /tmp/ccD2ZDfQ.s:378    .text:0000000000000174 .L0 
     /tmp/ccD2ZDfQ.s:379    .text:0000000000000174 .L0 
     /tmp/ccD2ZDfQ.s:381    .text:0000000000000178 .L0 
     /tmp/ccD2ZDfQ.s:386    .text:0000000000000180 .L0 
     /tmp/ccD2ZDfQ.s:390    .text:0000000000000188 .L0 
     /tmp/ccD2ZDfQ.s:395    .text:0000000000000198 .L0 
     /tmp/ccD2ZDfQ.s:402    .text:00000000000001a8 .L0 
     /tmp/ccD2ZDfQ.s:403    .text:00000000000001a8 .L0 
     /tmp/ccD2ZDfQ.s:404    .text:00000000000001a8 .L0 
src/../h/../h/../h/riscv.hpp:94     .text:00000000000001a8 .L0 
     /tmp/ccD2ZDfQ.s:412    .text:00000000000001b0 .L0 
     /tmp/ccD2ZDfQ.s:413    .text:00000000000001b0 .L0 
     /tmp/ccD2ZDfQ.s:417    .text:00000000000001b4 .L0 
     /tmp/ccD2ZDfQ.s:420    .text:00000000000001b8 .L0 
     /tmp/ccD2ZDfQ.s:421    .text:00000000000001b8 .L0 
     /tmp/ccD2ZDfQ.s:425    .text:00000000000001c8 .L0 
     /tmp/ccD2ZDfQ.s:426    .text:00000000000001c8 .L0 
     /tmp/ccD2ZDfQ.s:430    .text:00000000000001d8 .L0 
     /tmp/ccD2ZDfQ.s:431    .text:00000000000001d8 .L0 
     /tmp/ccD2ZDfQ.s:435    .text:00000000000001e4 .L0 
     /tmp/ccD2ZDfQ.s:436    .text:00000000000001e4 .L0 
     /tmp/ccD2ZDfQ.s:442    .text:00000000000001f0 .L0 
     /tmp/ccD2ZDfQ.s:443    .text:00000000000001f0 .L0 
src/../h/../h/../h/riscv.hpp:99     .text:00000000000001f0 .L0 
     /tmp/ccD2ZDfQ.s:454    .text:00000000000001f4 .L0 
     /tmp/ccD2ZDfQ.s:455    .text:00000000000001f8 .L0 
     /tmp/ccD2ZDfQ.s:456    .text:00000000000001f8 .L0 
     /tmp/ccD2ZDfQ.s:458    .text:00000000000001fc .L0 
     /tmp/ccD2ZDfQ.s:459    .text:00000000000001fc .L0 
     /tmp/ccD2ZDfQ.s:461    .text:0000000000000200 .L0 
     /tmp/ccD2ZDfQ.s:463    .text:0000000000000204 .L0 
     /tmp/ccD2ZDfQ.s:465    .text:0000000000000208 .L0 
     /tmp/ccD2ZDfQ.s:469    .text:000000000000020c .L0 
     /tmp/ccD2ZDfQ.s:475    .text:000000000000020c .L0 
     /tmp/ccD2ZDfQ.s:476    .text:000000000000020c .L0 
     /tmp/ccD2ZDfQ.s:477    .text:000000000000020c .L0 
src/../h/../h/../h/riscv.hpp:94     .text:000000000000020c .L0 
     /tmp/ccD2ZDfQ.s:485    .text:0000000000000214 .L0 
     /tmp/ccD2ZDfQ.s:486    .text:0000000000000214 .L0 
     /tmp/ccD2ZDfQ.s:491    .text:0000000000000218 .L0 
     /tmp/ccD2ZDfQ.s:496    .text:000000000000021c .L0 
     /tmp/ccD2ZDfQ.s:497    .text:000000000000021c .L0 
     /tmp/ccD2ZDfQ.s:498    .text:000000000000021c .L0 
src/../h/../h/../h/riscv.hpp:122    .text:000000000000021c .L0 
     /tmp/ccD2ZDfQ.s:506    .text:0000000000000224 .L0 
     /tmp/ccD2ZDfQ.s:507    .text:0000000000000224 .L0 
     /tmp/ccD2ZDfQ.s:512    .text:0000000000000228 .L0 
     /tmp/ccD2ZDfQ.s:513    .text:0000000000000228 .L0 
     /tmp/ccD2ZDfQ.s:516    .text:0000000000000230 .L0 
      src/kernel.cpp:27     .text:0000000000000230 .L0 
GAS LISTING /tmp/ccD2ZDfQ.s 			page 24


     /tmp/ccD2ZDfQ.s:526    .text:0000000000000234 .L0 
     /tmp/ccD2ZDfQ.s:527    .text:0000000000000234 .L0 
src/../h/../h/../h/riscv.hpp:127    .text:0000000000000234 .L0 
     /tmp/ccD2ZDfQ.s:539    .text:0000000000000238 .L0 
     /tmp/ccD2ZDfQ.s:540    .text:0000000000000238 .L0 
src/../h/../h/../h/riscv.hpp:99     .text:0000000000000238 .L0 
     /tmp/ccD2ZDfQ.s:550    .text:000000000000023c .L0 
     /tmp/ccD2ZDfQ.s:560    .text:0000000000000240 .L0 
     /tmp/ccD2ZDfQ.s:561    .text:0000000000000240 .L0 
     /tmp/ccD2ZDfQ.s:562    .text:0000000000000240 .L0 
src/../h/../h/../h/riscv.hpp:94     .text:0000000000000240 .L0 
     /tmp/ccD2ZDfQ.s:570    .text:0000000000000248 .L0 
     /tmp/ccD2ZDfQ.s:571    .text:0000000000000248 .L0 
     /tmp/ccD2ZDfQ.s:575    .text:000000000000024c .L0 
     /tmp/ccD2ZDfQ.s:578    .text:0000000000000250 .L0 
     /tmp/ccD2ZDfQ.s:579    .text:0000000000000250 .L0 
     /tmp/ccD2ZDfQ.s:583    .text:0000000000000260 .L0 
     /tmp/ccD2ZDfQ.s:584    .text:0000000000000260 .L0 
     /tmp/ccD2ZDfQ.s:588    .text:0000000000000270 .L0 
     /tmp/ccD2ZDfQ.s:589    .text:0000000000000270 .L0 
     /tmp/ccD2ZDfQ.s:593    .text:000000000000027c .L0 
     /tmp/ccD2ZDfQ.s:594    .text:000000000000027c .L0 
     /tmp/ccD2ZDfQ.s:600    .text:0000000000000288 .L0 
     /tmp/ccD2ZDfQ.s:601    .text:0000000000000288 .L0 
src/../h/../h/../h/riscv.hpp:99     .text:0000000000000288 .L0 
     /tmp/ccD2ZDfQ.s:611    .text:000000000000028c .L0 
     /tmp/ccD2ZDfQ.s:619    .text:0000000000000290 .L0 
     /tmp/ccD2ZDfQ.s:620    .text:0000000000000290 .L0 
     /tmp/ccD2ZDfQ.s:621    .text:0000000000000290 .L0 
     /tmp/ccD2ZDfQ.s:631    .text:0000000000000298 .L0 
     /tmp/ccD2ZDfQ.s:634    .text:000000000000029c .L0 
     /tmp/ccD2ZDfQ.s:635    .text:000000000000029c .L0 
     /tmp/ccD2ZDfQ.s:638    .text:00000000000002a4 .L0 
     /tmp/ccD2ZDfQ.s:639    .text:00000000000002a8 .L0 
     /tmp/ccD2ZDfQ.s:647    .text:00000000000002a8 .L0 
     /tmp/ccD2ZDfQ.s:28     .text:0000000000000018 .L0 
     /tmp/ccD2ZDfQ.s:114    .rodata:0000000000000000 .L6
     /tmp/ccD2ZDfQ.s:106    .text:0000000000000068 .L0 
     /tmp/ccD2ZDfQ.s:274    .text:000000000000010c .L0 
     /tmp/ccD2ZDfQ.s:71     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccD2ZDfQ.s:319    .text:000000000000013c .L0 
     /tmp/ccD2ZDfQ.s:336    .rodata.str1.8:0000000000000050 .LC3
     /tmp/ccD2ZDfQ.s:421    .text:00000000000001b8 .L0 
     /tmp/ccD2ZDfQ.s:333    .rodata.str1.8:0000000000000040 .LC2
     /tmp/ccD2ZDfQ.s:426    .text:00000000000001c8 .L0 
     /tmp/ccD2ZDfQ.s:330    .rodata.str1.8:0000000000000020 .LC1
     /tmp/ccD2ZDfQ.s:579    .text:0000000000000250 .L0 
     /tmp/ccD2ZDfQ.s:584    .text:0000000000000260 .L0 
     /tmp/ccD2ZDfQ.s:306    .text:0000000000000138 .L4
     /tmp/ccD2ZDfQ.s:156    .text:0000000000000094 .L3
     /tmp/ccD2ZDfQ.s:468    .text:000000000000020c .L21
     /tmp/ccD2ZDfQ.s:552    .text:0000000000000240 .L22
     /tmp/ccD2ZDfQ.s:613    .text:0000000000000290 .L23
     /tmp/ccD2ZDfQ.s:632    .text:000000000000029c .L24
     /tmp/ccD2ZDfQ.s:450    .text:00000000000001f4 .L14
     /tmp/ccD2ZDfQ.s:136    .text:0000000000000080 .L10
     /tmp/ccD2ZDfQ.s:171    .text:00000000000000a8 .L9
GAS LISTING /tmp/ccD2ZDfQ.s 			page 25


     /tmp/ccD2ZDfQ.s:193    .text:00000000000000c0 .L8
     /tmp/ccD2ZDfQ.s:258    .text:0000000000000108 .L7
     /tmp/ccD2ZDfQ.s:293    .text:000000000000012c .L5
     /tmp/ccD2ZDfQ.s:2002   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccD2ZDfQ.s:3313   .debug_str:000000000000073a .LASF123
     /tmp/ccD2ZDfQ.s:3095   .debug_str:0000000000000056 .LASF124
     /tmp/ccD2ZDfQ.s:3215   .debug_str:0000000000000482 .LASF125
     /tmp/ccD2ZDfQ.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccD2ZDfQ.s:642    .text:00000000000002a8 .Letext0
     /tmp/ccD2ZDfQ.s:3083   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccD2ZDfQ.s:3221   .debug_str:00000000000004bf .LASF0
     /tmp/ccD2ZDfQ.s:3243   .debug_str:0000000000000562 .LASF1
     /tmp/ccD2ZDfQ.s:3207   .debug_str:0000000000000432 .LASF2
     /tmp/ccD2ZDfQ.s:3185   .debug_str:000000000000039f .LASF4
     /tmp/ccD2ZDfQ.s:3289   .debug_str:00000000000006af .LASF3
     /tmp/ccD2ZDfQ.s:3107   .debug_str:00000000000000a5 .LASF5
     /tmp/ccD2ZDfQ.s:3247   .debug_str:000000000000057f .LASF6
     /tmp/ccD2ZDfQ.s:3219   .debug_str:00000000000004ac .LASF7
     /tmp/ccD2ZDfQ.s:3323   .debug_str:0000000000000860 .LASF8
     /tmp/ccD2ZDfQ.s:3171   .debug_str:00000000000002f1 .LASF9
     /tmp/ccD2ZDfQ.s:3257   .debug_str:00000000000005c8 .LASF10
     /tmp/ccD2ZDfQ.s:3317   .debug_str:0000000000000813 .LASF11
     /tmp/ccD2ZDfQ.s:3109   .debug_str:00000000000000ac .LASF12
     /tmp/ccD2ZDfQ.s:3087   .debug_str:0000000000000016 .LASF13
     /tmp/ccD2ZDfQ.s:3123   .debug_str:000000000000011e .LASF14
     /tmp/ccD2ZDfQ.s:3283   .debug_str:0000000000000679 .LASF15
     /tmp/ccD2ZDfQ.s:3127   .debug_str:000000000000013d .LASF16
     /tmp/ccD2ZDfQ.s:3201   .debug_str:0000000000000411 .LASF28
     /tmp/ccD2ZDfQ.s:3155   .debug_str:000000000000027a .LASF126
     /tmp/ccD2ZDfQ.s:3305   .debug_str:000000000000071c .LASF17
     /tmp/ccD2ZDfQ.s:3339   .debug_str:00000000000008d6 .LASF18
     /tmp/ccD2ZDfQ.s:3353   .debug_str:000000000000093a .LASF19
     /tmp/ccD2ZDfQ.s:3237   .debug_str:000000000000053b .LASF29
     /tmp/ccD2ZDfQ.s:3133   .debug_str:0000000000000181 .LASF31
     /tmp/ccD2ZDfQ.s:3149   .debug_str:000000000000025d .LASF20
     /tmp/ccD2ZDfQ.s:3275   .debug_str:000000000000063c .LASF22
     /tmp/ccD2ZDfQ.s:3105   .debug_str:000000000000009d .LASF35
     /tmp/ccD2ZDfQ.s:3143   .debug_str:00000000000001fb .LASF37
     /tmp/ccD2ZDfQ.s:3307   .debug_str:0000000000000721 .LASF127
     /tmp/ccD2ZDfQ.s:3267   .debug_str:000000000000061b .LASF21
     /tmp/ccD2ZDfQ.s:3259   .debug_str:00000000000005d7 .LASF23
     /tmp/ccD2ZDfQ.s:3121   .debug_str:0000000000000112 .LASF24
     /tmp/ccD2ZDfQ.s:3137   .debug_str:00000000000001b1 .LASF25
     /tmp/ccD2ZDfQ.s:3117   .debug_str:00000000000000f8 .LASF26
     /tmp/ccD2ZDfQ.s:3235   .debug_str:000000000000051b .LASF27
     /tmp/ccD2ZDfQ.s:3273   .debug_str:0000000000000631 .LASF128
     /tmp/ccD2ZDfQ.s:3145   .debug_str:000000000000021a .LASF129
     /tmp/ccD2ZDfQ.s:3093   .debug_str:000000000000004e .LASF130
     /tmp/ccD2ZDfQ.s:3295   .debug_str:00000000000006d8 .LASF30
     /tmp/ccD2ZDfQ.s:3211   .debug_str:000000000000044c .LASF32
     /tmp/ccD2ZDfQ.s:3271   .debug_str:000000000000062c .LASF131
     /tmp/ccD2ZDfQ.s:3251   .debug_str:00000000000005aa .LASF132
     /tmp/ccD2ZDfQ.s:3169   .debug_str:00000000000002da .LASF133
     /tmp/ccD2ZDfQ.s:3209   .debug_str:0000000000000440 .LASF33
     /tmp/ccD2ZDfQ.s:3179   .debug_str:000000000000035b .LASF34
     /tmp/ccD2ZDfQ.s:3239   .debug_str:0000000000000544 .LASF134
     /tmp/ccD2ZDfQ.s:3285   .debug_str:000000000000068f .LASF36
GAS LISTING /tmp/ccD2ZDfQ.s 			page 26


     /tmp/ccD2ZDfQ.s:3135   .debug_str:00000000000001a1 .LASF38
     /tmp/ccD2ZDfQ.s:3173   .debug_str:00000000000002ff .LASF135
     /tmp/ccD2ZDfQ.s:3191   .debug_str:00000000000003bb .LASF39
     /tmp/ccD2ZDfQ.s:3227   .debug_str:00000000000004db .LASF40
     /tmp/ccD2ZDfQ.s:3225   .debug_str:00000000000004d5 .LASF41
     /tmp/ccD2ZDfQ.s:3189   .debug_str:00000000000003b2 .LASF42
     /tmp/ccD2ZDfQ.s:3193   .debug_str:00000000000003c0 .LASF43
     /tmp/ccD2ZDfQ.s:3331   .debug_str:00000000000008a8 .LASF82
     /tmp/ccD2ZDfQ.s:3181   .debug_str:0000000000000372 .LASF84
     /tmp/ccD2ZDfQ.s:3223   .debug_str:00000000000004cc .LASF92
     /tmp/ccD2ZDfQ.s:3151   .debug_str:0000000000000262 .LASF94
     /tmp/ccD2ZDfQ.s:3203   .debug_str:0000000000000421 .LASF44
     /tmp/ccD2ZDfQ.s:3103   .debug_str:0000000000000095 .LASF46
     /tmp/ccD2ZDfQ.s:3263   .debug_str:0000000000000600 .LASF45
     /tmp/ccD2ZDfQ.s:3183   .debug_str:000000000000039a .LASF47
     /tmp/ccD2ZDfQ.s:3111   .debug_str:00000000000000bc .LASF48
     /tmp/ccD2ZDfQ.s:3357   .debug_str:0000000000000958 .LASF49
     /tmp/ccD2ZDfQ.s:3279   .debug_str:0000000000000662 .LASF50
     /tmp/ccD2ZDfQ.s:3157   .debug_str:0000000000000282 .LASF51
     /tmp/ccD2ZDfQ.s:3139   .debug_str:00000000000001e2 .LASF52
     /tmp/ccD2ZDfQ.s:3325   .debug_str:0000000000000870 .LASF53
     /tmp/ccD2ZDfQ.s:3303   .debug_str:000000000000070f .LASF54
     /tmp/ccD2ZDfQ.s:3287   .debug_str:0000000000000695 .LASF55
     /tmp/ccD2ZDfQ.s:3091   .debug_str:0000000000000043 .LASF58
     /tmp/ccD2ZDfQ.s:3249   .debug_str:0000000000000592 .LASF60
     /tmp/ccD2ZDfQ.s:3281   .debug_str:000000000000066d .LASF56
     /tmp/ccD2ZDfQ.s:3131   .debug_str:0000000000000168 .LASF57
     /tmp/ccD2ZDfQ.s:3261   .debug_str:00000000000005f7 .LASF59
     /tmp/ccD2ZDfQ.s:3129   .debug_str:0000000000000153 .LASF61
     /tmp/ccD2ZDfQ.s:3301   .debug_str:0000000000000705 .LASF62
     /tmp/ccD2ZDfQ.s:3265   .debug_str:0000000000000605 .LASF63
     /tmp/ccD2ZDfQ.s:3245   .debug_str:0000000000000575 .LASF64
     /tmp/ccD2ZDfQ.s:3167   .debug_str:00000000000002c4 .LASF65
     /tmp/ccD2ZDfQ.s:3311   .debug_str:000000000000072f .LASF66
     /tmp/ccD2ZDfQ.s:3115   .debug_str:00000000000000e0 .LASF67
     /tmp/ccD2ZDfQ.s:3141   .debug_str:00000000000001f0 .LASF68
     /tmp/ccD2ZDfQ.s:3195   .debug_str:00000000000003c8 .LASF69
     /tmp/ccD2ZDfQ.s:3199   .debug_str:0000000000000404 .LASF70
     /tmp/ccD2ZDfQ.s:3213   .debug_str:0000000000000468 .LASF71
     /tmp/ccD2ZDfQ.s:3187   .debug_str:00000000000003a6 .LASF72
     /tmp/ccD2ZDfQ.s:3345   .debug_str:00000000000008fe .LASF73
     /tmp/ccD2ZDfQ.s:3255   .debug_str:00000000000005bb .LASF74
     /tmp/ccD2ZDfQ.s:3321   .debug_str:0000000000000846 .LASF75
     /tmp/ccD2ZDfQ.s:3217   .debug_str:00000000000004a5 .LASF76
     /tmp/ccD2ZDfQ.s:3125   .debug_str:000000000000012a .LASF77
     /tmp/ccD2ZDfQ.s:3277   .debug_str:0000000000000659 .LASF78
     /tmp/ccD2ZDfQ.s:3165   .debug_str:00000000000002af .LASF79
     /tmp/ccD2ZDfQ.s:3351   .debug_str:0000000000000932 .LASF80
     /tmp/ccD2ZDfQ.s:3349   .debug_str:000000000000091e .LASF81
     /tmp/ccD2ZDfQ.s:3337   .debug_str:00000000000008cd .LASF83
     /tmp/ccD2ZDfQ.s:3315   .debug_str:00000000000007fe .LASF85
     /tmp/ccD2ZDfQ.s:3153   .debug_str:0000000000000275 .LASF86
     /tmp/ccD2ZDfQ.s:3335   .debug_str:00000000000008c6 .LASF87
     /tmp/ccD2ZDfQ.s:3205   .debug_str:0000000000000427 .LASF88
     /tmp/ccD2ZDfQ.s:3355   .debug_str:000000000000093f .LASF89
     /tmp/ccD2ZDfQ.s:3297   .debug_str:00000000000006e2 .LASF90
     /tmp/ccD2ZDfQ.s:3089   .debug_str:0000000000000026 .LASF91
GAS LISTING /tmp/ccD2ZDfQ.s 			page 27


     /tmp/ccD2ZDfQ.s:3231   .debug_str:0000000000000500 .LASF93
     /tmp/ccD2ZDfQ.s:3197   .debug_str:00000000000003e0 .LASF95
     /tmp/ccD2ZDfQ.s:3291   .debug_str:00000000000006c1 .LASF96
     /tmp/ccD2ZDfQ.s:3341   .debug_str:00000000000008db .LASF97
     /tmp/ccD2ZDfQ.s:3101   .debug_str:0000000000000083 .LASF98
     /tmp/ccD2ZDfQ.s:3229   .debug_str:00000000000004e0 .LASF99
     /tmp/ccD2ZDfQ.s:3119   .debug_str:0000000000000101 .LASF100
     /tmp/ccD2ZDfQ.s:3113   .debug_str:00000000000000c1 .LASF101
     /tmp/ccD2ZDfQ.s:3085   .debug_str:0000000000000000 .LASF102
     /tmp/ccD2ZDfQ.s:3319   .debug_str:0000000000000822 .LASF103
     /tmp/ccD2ZDfQ.s:3147   .debug_str:0000000000000249 .LASF104
     /tmp/ccD2ZDfQ.s:3177   .debug_str:0000000000000339 .LASF105
     /tmp/ccD2ZDfQ.s:3327   .debug_str:000000000000088b .LASF106
     /tmp/ccD2ZDfQ.s:3175   .debug_str:0000000000000313 .LASF107
     /tmp/ccD2ZDfQ.s:78     .text:000000000000003c .LFB35
     /tmp/ccD2ZDfQ.s:326    .text:0000000000000150 .LFE35
     /tmp/ccD2ZDfQ.s:3159   .debug_str:000000000000029a .LASF108
     /tmp/ccD2ZDfQ.s:139    .text:0000000000000080 .LBB58
     /tmp/ccD2ZDfQ.s:158    .text:0000000000000094 .LBE58
     /tmp/ccD2ZDfQ.s:155    .text:0000000000000094 .LVL4
     /tmp/ccD2ZDfQ.s:175    .text:00000000000000a8 .LBB60
     /tmp/ccD2ZDfQ.s:195    .text:00000000000000c0 .LBE60
     /tmp/ccD2ZDfQ.s:190    .text:00000000000000bc .LVL5
     /tmp/ccD2ZDfQ.s:198    .text:00000000000000c0 .LBB62
     /tmp/ccD2ZDfQ.s:260    .text:0000000000000108 .LBE62
     /tmp/ccD2ZDfQ.s:233    .text:00000000000000ec .LVL6
     /tmp/ccD2ZDfQ.s:263    .text:0000000000000108 .LBB64
     /tmp/ccD2ZDfQ.s:295    .text:000000000000012c .LBE64
     /tmp/ccD2ZDfQ.s:277    .text:0000000000000118 .LBB66
     /tmp/ccD2ZDfQ.s:286    .text:0000000000000120 .LBE66
     /tmp/ccD2ZDfQ.s:2962   .debug_loc:0000000000000000 .LLST1
     /tmp/ccD2ZDfQ.s:2970   .debug_loc:0000000000000024 .LLST2
     /tmp/ccD2ZDfQ.s:290    .text:0000000000000128 .LVL9
     /tmp/ccD2ZDfQ.s:298    .text:000000000000012c .LBB68
     /tmp/ccD2ZDfQ.s:308    .text:0000000000000138 .LBE68
     /tmp/ccD2ZDfQ.s:303    .text:0000000000000134 .LVL10
     /tmp/ccD2ZDfQ.s:321    .text:000000000000014c .LVL11
     /tmp/ccD2ZDfQ.s:343    .text:0000000000000150 .LFB34
     /tmp/ccD2ZDfQ.s:640    .text:00000000000002a8 .LFE34
     /tmp/ccD2ZDfQ.s:3347   .debug_str:0000000000000917 .LASF109
     /tmp/ccD2ZDfQ.s:2977   .debug_loc:0000000000000047 .LLST3
     /tmp/ccD2ZDfQ.s:3233   .debug_str:0000000000000516 .LASF110
     /tmp/ccD2ZDfQ.s:2998   .debug_loc:00000000000000a5 .LLST4
     /tmp/ccD2ZDfQ.s:471    .text:000000000000020c .LBB73
     /tmp/ccD2ZDfQ.s:553    .text:0000000000000240 .LBE73
     /tmp/ccD2ZDfQ.s:3005   .debug_loc:00000000000000c8 .LLST5
     /tmp/ccD2ZDfQ.s:3269   .debug_str:0000000000000624 .LASF111
     /tmp/ccD2ZDfQ.s:3012   .debug_loc:00000000000000eb .LLST6
     /tmp/ccD2ZDfQ.s:473    .text:000000000000020c .LBB74
     /tmp/ccD2ZDfQ.s:489    .text:0000000000000218 .LBE74
     /tmp/ccD2ZDfQ.s:494    .text:000000000000021c .LBB76
     /tmp/ccD2ZDfQ.s:510    .text:0000000000000228 .LBE76
     /tmp/ccD2ZDfQ.s:524    .text:0000000000000234 .LBB78
     /tmp/ccD2ZDfQ.s:535    .text:0000000000000238 .LBE78
     /tmp/ccD2ZDfQ.s:3019   .debug_loc:000000000000010e .LLST7
     /tmp/ccD2ZDfQ.s:537    .text:0000000000000238 .LBB80
     /tmp/ccD2ZDfQ.s:548    .text:000000000000023c .LBE80
GAS LISTING /tmp/ccD2ZDfQ.s 			page 28


     /tmp/ccD2ZDfQ.s:3026   .debug_loc:0000000000000131 .LLST8
     /tmp/ccD2ZDfQ.s:514    .text:0000000000000230 .LVL23
     /tmp/ccD2ZDfQ.s:556    .text:0000000000000240 .LBB83
     /tmp/ccD2ZDfQ.s:614    .text:0000000000000290 .LBE83
     /tmp/ccD2ZDfQ.s:3033   .debug_loc:0000000000000154 .LLST9
     /tmp/ccD2ZDfQ.s:558    .text:0000000000000240 .LBB84
     /tmp/ccD2ZDfQ.s:573    .text:000000000000024c .LBE84
     /tmp/ccD2ZDfQ.s:598    .text:0000000000000288 .LBB86
     /tmp/ccD2ZDfQ.s:609    .text:000000000000028c .LBE86
     /tmp/ccD2ZDfQ.s:3040   .debug_loc:0000000000000177 .LLST10
     /tmp/ccD2ZDfQ.s:581    .text:0000000000000260 .LVL29
     /tmp/ccD2ZDfQ.s:586    .text:0000000000000270 .LVL30
     /tmp/ccD2ZDfQ.s:591    .text:000000000000027c .LVL31
     /tmp/ccD2ZDfQ.s:596    .text:0000000000000288 .LVL32
     /tmp/ccD2ZDfQ.s:359    .text:0000000000000168 .LBB70
     /tmp/ccD2ZDfQ.s:375    .text:0000000000000174 .LBE70
     /tmp/ccD2ZDfQ.s:400    .text:00000000000001a8 .LBB88
     /tmp/ccD2ZDfQ.s:415    .text:00000000000001b4 .LBE88
     /tmp/ccD2ZDfQ.s:440    .text:00000000000001f0 .LBB90
     /tmp/ccD2ZDfQ.s:452    .text:00000000000001f4 .LBE90
     /tmp/ccD2ZDfQ.s:3047   .debug_loc:000000000000019a .LLST11
     /tmp/ccD2ZDfQ.s:617    .text:0000000000000290 .LBB94
     /tmp/ccD2ZDfQ.s:629    .text:0000000000000298 .LBE94
     /tmp/ccD2ZDfQ.s:3054   .debug_loc:00000000000001bd .LLST12
     /tmp/ccD2ZDfQ.s:423    .text:00000000000001c8 .LVL14
     /tmp/ccD2ZDfQ.s:428    .text:00000000000001d8 .LVL15
     /tmp/ccD2ZDfQ.s:433    .text:00000000000001e4 .LVL16
     /tmp/ccD2ZDfQ.s:438    .text:00000000000001f0 .LVL17
     /tmp/ccD2ZDfQ.s:636    .text:00000000000002a4 .LVL36
     /tmp/ccD2ZDfQ.s:10     .text:0000000000000000 .LFB33
     /tmp/ccD2ZDfQ.s:67     .text:000000000000003c .LFE33
     /tmp/ccD2ZDfQ.s:30     .text:0000000000000020 .LBB42
     /tmp/ccD2ZDfQ.s:42     .text:0000000000000024 .LBE42
     /tmp/ccD2ZDfQ.s:44     .text:0000000000000024 .LBB44
     /tmp/ccD2ZDfQ.s:56     .text:000000000000002c .LBE44
     /tmp/ccD2ZDfQ.s:3062   .debug_loc:00000000000001e1 .LLST0
     /tmp/ccD2ZDfQ.s:25     .text:0000000000000018 .LVL0
     /tmp/ccD2ZDfQ.s:3161   .debug_str:00000000000002a5 .LASF112
     /tmp/ccD2ZDfQ.s:3163   .debug_str:00000000000002aa .LASF113
     /tmp/ccD2ZDfQ.s:3329   .debug_str:00000000000008a3 .LASF114
     /tmp/ccD2ZDfQ.s:3343   .debug_str:00000000000008f9 .LASF136
     /tmp/ccD2ZDfQ.s:3309   .debug_str:000000000000072a .LASF115
     /tmp/ccD2ZDfQ.s:3253   .debug_str:00000000000005b5 .LASF116
     /tmp/ccD2ZDfQ.s:3241   .debug_str:000000000000054c .LASF117
     /tmp/ccD2ZDfQ.s:3097   .debug_str:0000000000000065 .LASF119
     /tmp/ccD2ZDfQ.s:3299   .debug_str:00000000000006f1 .LASF118
     /tmp/ccD2ZDfQ.s:3099   .debug_str:0000000000000074 .LASF120
     /tmp/ccD2ZDfQ.s:3293   .debug_str:00000000000006d1 .LASF121
     /tmp/ccD2ZDfQ.s:3333   .debug_str:00000000000008b6 .LASF122
     /tmp/ccD2ZDfQ.s:276    .text:0000000000000118 .LVL7
     /tmp/ccD2ZDfQ.s:284    .text:0000000000000120 .LVL8
     /tmp/ccD2ZDfQ.s:373    .text:0000000000000174 .LVL12
     /tmp/ccD2ZDfQ.s:448    .text:00000000000001f4 .LVL18
     /tmp/ccD2ZDfQ.s:467    .text:000000000000020c .LVL19
     /tmp/ccD2ZDfQ.s:487    .text:0000000000000218 .LVL20
     /tmp/ccD2ZDfQ.s:551    .text:0000000000000240 .LVL27
     /tmp/ccD2ZDfQ.s:418    .text:00000000000001b8 .LVL13
GAS LISTING /tmp/ccD2ZDfQ.s 			page 29


     /tmp/ccD2ZDfQ.s:492    .text:000000000000021c .LVL21
     /tmp/ccD2ZDfQ.s:508    .text:0000000000000228 .LVL22
     /tmp/ccD2ZDfQ.s:522    .text:0000000000000234 .LVL24
     /tmp/ccD2ZDfQ.s:532    .text:0000000000000238 .LVL25
     /tmp/ccD2ZDfQ.s:545    .text:000000000000023c .LVL26
     /tmp/ccD2ZDfQ.s:576    .text:0000000000000250 .LVL28
     /tmp/ccD2ZDfQ.s:612    .text:0000000000000290 .LVL34
     /tmp/ccD2ZDfQ.s:606    .text:000000000000028c .LVL33
     /tmp/ccD2ZDfQ.s:626    .text:0000000000000298 .LVL35
     /tmp/ccD2ZDfQ.s:39     .text:0000000000000024 .LVL2
     /tmp/ccD2ZDfQ.s:53     .text:000000000000002c .LVL3
     /tmp/ccD2ZDfQ.s:648    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN15MemoryAllocator7initMemEv
_ZN6Kernel14supervisorTrapEv
_ZN15MemoryAllocator8allocateEm
_ZN15MemoryAllocator4freeEPv
_ZN3TCB9createTCBEPFvPvES0_
_ZN3TCB7runningE
_ZN3TCB5yieldEv
_Z14__print_stringPKc
_Z14__print_uint64m
__putc
console_handler
