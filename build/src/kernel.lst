GAS LISTING /tmp/ccYnqADt.s 			page 1


   1              		.file	"kernel.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN6Kernel10initKernelEv
   9              	_ZN6Kernel10initKernelEv:
  10              	.LFB73:
  11              		.file 1 "src/kernel.cpp"
   1:src/kernel.cpp **** //
   2:src/kernel.cpp **** // Created by os on 9/6/22.
   3:src/kernel.cpp **** //
   4:src/kernel.cpp **** 
   5:src/kernel.cpp **** 
   6:src/kernel.cpp **** #include "../h/kernel.hpp"
   7:src/kernel.cpp **** //#include "../h/memory_allocator.hpp"
   8:src/kernel.cpp **** //#include "../h/riscv.hpp"
   9:src/kernel.cpp **** //#include "../h/uart.hpp"
  10:src/kernel.cpp **** 
  11:src/kernel.cpp **** //Uart* Kernel::uart = nullptr;
  12:src/kernel.cpp **** 
  13:src/kernel.cpp **** extern void userMain();
  14:src/kernel.cpp **** 
  15:src/kernel.cpp **** void Kernel::initKernel() {
  12              		.loc 1 15 27
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  16:src/kernel.cpp ****     MemoryAllocator::initMem();
  22              		.loc 1 16 5
  23              		.loc 1 16 29 is_stmt 0
  24 0010 97000000 		call	_ZN15MemoryAllocator7initMemEv@plt
  24      E7800000 
  25              	.LVL0:
  17:src/kernel.cpp ****     RiscV::writeStvec((uint64) &supervisorTrap);
  26              		.loc 1 17 5 is_stmt 1
  27              		.loc 1 17 22 is_stmt 0
  28 0018 97070000 		la	a5,_ZN6Kernel14supervisorTrapEv
  28      83B70700 
  29              	.LVL1:
  30              	.LBB72:
  31              	.LBB73:
  32              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 9/6/22.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OSMIUM_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OSMIUM_RISCV_HPP
   7:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccYnqADt.s 			page 2


   8:src/../h/riscv.hpp **** 
   9:src/../h/riscv.hpp **** #include "../lib/hw.h"
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp **** class RiscV {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp ****     // pop spp and spie sstatus bits
  14:src/../h/riscv.hpp ****     static void popSppSpie();
  15:src/../h/riscv.hpp **** 
  16:src/../h/riscv.hpp ****     //push x3...x31 registers on stack
  17:src/../h/riscv.hpp ****     static void pushRegisters();
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     //pop x3...x31 registers from stack
  20:src/../h/riscv.hpp ****     static void popRegisters();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     //read from scause register
  23:src/../h/riscv.hpp ****     static uint64 readScause();
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     //write to scause register
  26:src/../h/riscv.hpp ****     static void writeScause(uint64 scause);
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     //read from sepc register
  29:src/../h/riscv.hpp ****     static uint64 readSepc();
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     //write to sepc register
  32:src/../h/riscv.hpp ****     static void writeSepc(uint64 sepc);
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     //read from stvec register
  35:src/../h/riscv.hpp ****     static uint64 readStvec();
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     //write to stvec register
  38:src/../h/riscv.hpp ****     static void writeStvec(uint64 stvec);
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     enum SSTATUS
  41:src/../h/riscv.hpp ****     {
  42:src/../h/riscv.hpp ****         SIE = (1 << 1), //supervisor interrupt enable
  43:src/../h/riscv.hpp ****         SPIE = (1 << 5),//supervisor previous interrupt enable
  44:src/../h/riscv.hpp ****         SPP = (1 << 8), //supervisor previous privilege
  45:src/../h/riscv.hpp ****     };
  46:src/../h/riscv.hpp **** 
  47:src/../h/riscv.hpp ****     //set bit-mask bits in the sstatus register
  48:src/../h/riscv.hpp ****     static void setSstatus(uint64 mask);
  49:src/../h/riscv.hpp **** 
  50:src/../h/riscv.hpp ****     //clear bit-mask bits in the sstatus register
  51:src/../h/riscv.hpp ****     static void clearSstatus(uint64 mask);
  52:src/../h/riscv.hpp **** 
  53:src/../h/riscv.hpp ****     //read from sstatus register
  54:src/../h/riscv.hpp ****     static uint64 readSstatus();
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp ****     //write to sstatus register
  57:src/../h/riscv.hpp ****     static void writeSstatus(uint64 sstatus);
  58:src/../h/riscv.hpp **** 
  59:src/../h/riscv.hpp ****     enum SIP
  60:src/../h/riscv.hpp ****     {
  61:src/../h/riscv.hpp ****         SSIP = (1 << 1), //supervisor software interrupt pending
  62:src/../h/riscv.hpp ****         STIP = (1 << 5), //supervisor timer interrupt pending
  63:src/../h/riscv.hpp ****                          //(timer is configured to throw a software interrupt, so this is not used)
  64:src/../h/riscv.hpp ****         SEIP = (1 << 9), //supervisor external interrupt pending
GAS LISTING /tmp/ccYnqADt.s 			page 3


  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     //set bit-mask bits in the sip register
  68:src/../h/riscv.hpp ****     static void setSip(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     //clear bit-mask bits in the sip register
  71:src/../h/riscv.hpp ****     static void clearSip(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     //read from sip register
  74:src/../h/riscv.hpp ****     static uint64 readSip();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     //write to sip register
  77:src/../h/riscv.hpp ****     static void writeSip(uint64 Sip);
  78:src/../h/riscv.hpp **** private:
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp **** };
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp **** inline uint64 RiscV::readScause() {
  83:src/../h/riscv.hpp ****     uint64 volatile scause;
  84:src/../h/riscv.hpp ****     asm volatile("csrr %[scause], scause": [scause] "=r" (scause));
  85:src/../h/riscv.hpp ****     return scause;
  86:src/../h/riscv.hpp **** }
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp **** inline void RiscV::writeScause(uint64 scause) {
  89:src/../h/riscv.hpp ****     asm volatile("csrw scause, %[scause]":: [scause] "r" (scause));
  90:src/../h/riscv.hpp **** }
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp **** inline uint64 RiscV::readSepc() {
  93:src/../h/riscv.hpp ****     uint64 volatile sepc;
  94:src/../h/riscv.hpp ****     asm volatile("csrr %[sepc], sepc": [sepc] "=r" (sepc));
  95:src/../h/riscv.hpp ****     return sepc;
  96:src/../h/riscv.hpp **** }
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** inline void RiscV::writeSepc(uint64 sepc) {
  99:src/../h/riscv.hpp ****     asm volatile("csrw sepc, %[sepc]":: [sepc] "r" (sepc));
 100:src/../h/riscv.hpp **** }
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp **** inline uint64 RiscV::readStvec() {
 103:src/../h/riscv.hpp ****     uint64 volatile stvec;
 104:src/../h/riscv.hpp ****     asm volatile("csrr %[stvec], stvec": [stvec] "=r" (stvec));
 105:src/../h/riscv.hpp ****     return stvec;
 106:src/../h/riscv.hpp **** }
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp **** inline void RiscV::writeStvec(uint64 stvec) {
 109:src/../h/riscv.hpp ****     asm volatile("csrw stvec, %[stvec]":: [stvec] "r" (stvec));
  33              		.loc 2 109 5 is_stmt 1
  34              		.loc 2 109 63 is_stmt 0
  35              	#APP
  36              	# 109 "src/../h/riscv.hpp" 1
 110              	}
  37              		csrw stvec, a5
  38              	# 0 "" 2
  39              	.LVL2:
  40              	#NO_APP
  41              	.LBE73:
  42              	.LBE72:
  18:src/kernel.cpp **** 
GAS LISTING /tmp/ccYnqADt.s 			page 4


  19:src/kernel.cpp ****     Uart::initUart();
  43              		.loc 1 19 5 is_stmt 1
  44              		.loc 1 19 19 is_stmt 0
  45 0024 97000000 		call	_ZN4Uart8initUartEv@plt
  45      E7800000 
  46              	.LVL3:
  20:src/kernel.cpp ****     //RiscV::setSstatus(RiscV::SIE);
  21:src/kernel.cpp **** }
  47              		.loc 1 21 1
  48 002c 83308100 		ld	ra,8(sp)
  49              		.cfi_restore 1
  50 0030 03340100 		ld	s0,0(sp)
  51              		.cfi_restore 8
  52              		.cfi_def_cfa 2, 16
  53 0034 13010101 		addi	sp,sp,16
  54              		.cfi_def_cfa_offset 0
  55 0038 67800000 		jr	ra
  56              		.cfi_endproc
  57              	.LFE73:
  59              		.align	2
  60              		.globl	_ZN6Kernel12uart_handlerEv
  62              	_ZN6Kernel12uart_handlerEv:
  63              	.LFB76:
  22:src/kernel.cpp **** 
  23:src/kernel.cpp **** void Kernel::supervisorTrapHandler() {
  24:src/kernel.cpp ****     uint64 scause = RiscV::readScause();
  25:src/kernel.cpp **** 
  26:src/kernel.cpp ****     if (scause == USER_SYSCALL || scause == SUPERVISOR_SYSCALL) {
  27:src/kernel.cpp ****         uint64 sepc = RiscV::readSepc() + 4;
  28:src/kernel.cpp ****         uint64 sstatus = RiscV::readSstatus();
  29:src/kernel.cpp **** 
  30:src/kernel.cpp ****         syscall_handler();
  31:src/kernel.cpp **** 
  32:src/kernel.cpp ****         asm volatile ("sd a0, 80(s0)");
  33:src/kernel.cpp ****         RiscV::writeSstatus(sstatus);
  34:src/kernel.cpp ****         RiscV::writeSepc(sepc);
  35:src/kernel.cpp ****         RiscV::clearSip(RiscV::SSIP);
  36:src/kernel.cpp ****         return;
  37:src/kernel.cpp ****     }
  38:src/kernel.cpp ****     if (scause == TIMER_IRQ) {
  39:src/kernel.cpp ****         //__print_string("timer\n");
  40:src/kernel.cpp ****         if (!TCB::running) { RiscV::clearSip(RiscV::SSIP); return; }
  41:src/kernel.cpp ****         Scheduler::timerInterrupt();
  42:src/kernel.cpp ****         TCB::incTimeSliceCounter();
  43:src/kernel.cpp ****         if (TCB::getTimeSliceCounter() >= TCB::running->getTimeSlice())
  44:src/kernel.cpp ****         {
  45:src/kernel.cpp ****             uint64 sepc = RiscV::readSepc();
  46:src/kernel.cpp ****             uint64 sstatus = RiscV::readSstatus();
  47:src/kernel.cpp ****             TCB::resetTimeSliceCounter();
  48:src/kernel.cpp ****             TCB::dispatch();
  49:src/kernel.cpp ****             RiscV::writeSstatus(sstatus);
  50:src/kernel.cpp ****             RiscV::writeSepc(sepc);
  51:src/kernel.cpp ****         }
  52:src/kernel.cpp ****         RiscV::clearSip(RiscV::SSIP);
  53:src/kernel.cpp ****         return;
  54:src/kernel.cpp ****     }
  55:src/kernel.cpp ****     if (scause == HARDWARE_IRQ) {
GAS LISTING /tmp/ccYnqADt.s 			page 5


  56:src/kernel.cpp ****         //console_handler();
  57:src/kernel.cpp ****         //ConsoleInterface::console_handler();
  58:src/kernel.cpp ****         hw_irq_handler();
  59:src/kernel.cpp ****         RiscV::clearSip(RiscV::SEIP);
  60:src/kernel.cpp ****         return;
  61:src/kernel.cpp ****     }
  62:src/kernel.cpp **** 
  63:src/kernel.cpp ****     uint64 sepc = RiscV::readSepc();
  64:src/kernel.cpp ****     __print_string("Neobradjen izuzetak.\n");
  65:src/kernel.cpp ****     __print_string("scause: ");
  66:src/kernel.cpp ****     __print_uint64(scause);
  67:src/kernel.cpp ****     Uart::txPut('\n');
  68:src/kernel.cpp ****     __print_string("sepc: ");
  69:src/kernel.cpp ****     __print_uint64(sepc);
  70:src/kernel.cpp ****     Uart::txPut('\n');
  71:src/kernel.cpp ****     //riscV::clearSip(RiscV::SSIP);
  72:src/kernel.cpp ****     RiscV::writeSepc(sepc);
  73:src/kernel.cpp ****     return;
  74:src/kernel.cpp **** }
  75:src/kernel.cpp **** 
  76:src/kernel.cpp **** void Kernel::hw_irq_handler() {
  77:src/kernel.cpp ****     //int hw_irq_id = plic_claim();
  78:src/kernel.cpp **** 
  79:src/kernel.cpp ****     //__print_string("hw\n");
  80:src/kernel.cpp ****     uart_handler();
  81:src/kernel.cpp ****     //plic_complete(hw_irq_id);
  82:src/kernel.cpp ****     /*switch (hw_irq_id) {
  83:src/kernel.cpp ****         case 10:
  84:src/kernel.cpp ****             //uart_handler();
  85:src/kernel.cpp ****             console_handler();
  86:src/kernel.cpp ****             //break;
  87:src/kernel.cpp ****         default:
  88:src/kernel.cpp ****             plic_complete(hw_irq_id);
  89:src/kernel.cpp ****             break;
  90:src/kernel.cpp ****     }*/
  91:src/kernel.cpp **** }
  92:src/kernel.cpp **** 
  93:src/kernel.cpp **** //0x0a - hardware
  94:src/kernel.cpp **** void Kernel::uart_handler() {
  64              		.loc 1 94 29 is_stmt 1
  65              		.cfi_startproc
  66 003c 130101FE 		addi	sp,sp,-32
  67              		.cfi_def_cfa_offset 32
  68 0040 233C1100 		sd	ra,24(sp)
  69 0044 23388100 		sd	s0,16(sp)
  70 0048 23349100 		sd	s1,8(sp)
  71              		.cfi_offset 1, -8
  72              		.cfi_offset 8, -16
  73              		.cfi_offset 9, -24
  74 004c 13040102 		addi	s0,sp,32
  75              		.cfi_def_cfa 8, 0
  95:src/kernel.cpp ****     int id = plic_claim();
  76              		.loc 1 95 5
  77              		.loc 1 95 24 is_stmt 0
  78 0050 97000000 		call	plic_claim@plt
  78      E7800000 
  79              	.LVL4:
GAS LISTING /tmp/ccYnqADt.s 			page 6


  80 0058 93040500 		mv	s1,a0
  81              	.LVL5:
  96:src/kernel.cpp ****     //__print_string("handle_uart\n");
  97:src/kernel.cpp ****     if (id == 0x0a) {
  82              		.loc 1 97 5 is_stmt 1
  83 005c 9307A000 		li	a5,10
  84 0060 6302F502 		beq	a0,a5,.L5
  85              	.LVL6:
  86              	.L4:
  98:src/kernel.cpp ****         //__print_string("handle_uart\n");
  99:src/kernel.cpp ****         /*if (Uart::getStatus() & Uart::TX) {
 100:src/kernel.cpp ****             //__print_string("tx\n");
 101:src/kernel.cpp ****             Uart::txSignal();
 102:src/kernel.cpp ****         }*/
 103:src/kernel.cpp ****         //if (uart->getStatus() & Uart::RX) uart->rxSignal();
 104:src/kernel.cpp ****         while (Uart::getStatus() & Uart::RX) {
 105:src/kernel.cpp ****             //__print_string("rx\n");
 106:src/kernel.cpp ****             if(Uart::rxReceive() < 0) break;
 107:src/kernel.cpp ****             //plic_complete(id);
 108:src/kernel.cpp ****         }
 109:src/kernel.cpp ****     }
 110:src/kernel.cpp ****     plic_complete(id);
  87              		.loc 1 110 5
  88              		.loc 1 110 18 is_stmt 0
  89 0064 13850400 		mv	a0,s1
  90 0068 97000000 		call	plic_complete@plt
  90      E7800000 
  91              	.LVL7:
 111:src/kernel.cpp **** }
  92              		.loc 1 111 1
  93 0070 83308101 		ld	ra,24(sp)
  94              		.cfi_remember_state
  95              		.cfi_restore 1
  96 0074 03340101 		ld	s0,16(sp)
  97              		.cfi_restore 8
  98              		.cfi_def_cfa 2, 32
  99 0078 83348100 		ld	s1,8(sp)
 100              		.cfi_restore 9
 101 007c 13010102 		addi	sp,sp,32
 102              		.cfi_def_cfa_offset 0
 103 0080 67800000 		jr	ra
 104              	.L5:
 105              		.cfi_restore_state
 104:src/kernel.cpp ****             //__print_string("rx\n");
 106              		.loc 1 104 9 is_stmt 1
 104:src/kernel.cpp ****             //__print_string("rx\n");
 107              		.loc 1 104 42
 104:src/kernel.cpp ****             //__print_string("rx\n");
 108              		.loc 1 104 31 is_stmt 0
 109 0084 97000000 		call	_ZN4Uart9getStatusEv@plt
 109      E7800000 
 110              	.LVL8:
 104:src/kernel.cpp ****             //__print_string("rx\n");
 111              		.loc 1 104 42
 112 008c 93771500 		andi	a5,a0,1
 113 0090 E38A07FC 		beqz	a5,.L4
 106:src/kernel.cpp ****             //plic_complete(id);
GAS LISTING /tmp/ccYnqADt.s 			page 7


 114              		.loc 1 106 13 is_stmt 1
 106:src/kernel.cpp ****             //plic_complete(id);
 115              		.loc 1 106 31 is_stmt 0
 116 0094 97000000 		call	_ZN4Uart9rxReceiveEv@plt
 116      E7800000 
 117              	.LVL9:
 118 009c 6FF09FFE 		j	.L5
 119              		.cfi_endproc
 120              	.LFE76:
 122              		.align	2
 123              		.globl	_ZN6Kernel14hw_irq_handlerEv
 125              	_ZN6Kernel14hw_irq_handlerEv:
 126              	.LFB75:
  76:src/kernel.cpp ****     //int hw_irq_id = plic_claim();
 127              		.loc 1 76 31 is_stmt 1
 128              		.cfi_startproc
 129 00a0 130101FF 		addi	sp,sp,-16
 130              		.cfi_def_cfa_offset 16
 131 00a4 23341100 		sd	ra,8(sp)
 132 00a8 23308100 		sd	s0,0(sp)
 133              		.cfi_offset 1, -8
 134              		.cfi_offset 8, -16
 135 00ac 13040101 		addi	s0,sp,16
 136              		.cfi_def_cfa 8, 0
  80:src/kernel.cpp ****     //plic_complete(hw_irq_id);
 137              		.loc 1 80 5
  80:src/kernel.cpp ****     //plic_complete(hw_irq_id);
 138              		.loc 1 80 17 is_stmt 0
 139 00b0 97000000 		call	_ZN6Kernel12uart_handlerEv
 139      E7800000 
 140              	.LVL10:
  91:src/kernel.cpp **** 
 141              		.loc 1 91 1
 142 00b8 83308100 		ld	ra,8(sp)
 143              		.cfi_restore 1
 144 00bc 03340100 		ld	s0,0(sp)
 145              		.cfi_restore 8
 146              		.cfi_def_cfa 2, 16
 147 00c0 13010101 		addi	sp,sp,16
 148              		.cfi_def_cfa_offset 0
 149 00c4 67800000 		jr	ra
 150              		.cfi_endproc
 151              	.LFE75:
 153              		.section	.rodata.str1.8,"aMS",@progbits,1
 154              		.align	3
 155              	.LC0:
 156 0000 4572726F 		.string	"Error: Invalid syscall id!"
 156      723A2049 
 156      6E76616C 
 156      69642073 
 156      79736361 
 157 001b 00000000 		.align	3
 157      00
 158              	.LC1:
 159 0020 4E656F62 		.string	"Neobradjen izuzetak.\n"
 159      7261646A 
 159      656E2069 
GAS LISTING /tmp/ccYnqADt.s 			page 8


 159      7A757A65 
 159      74616B2E 
 160 0036 0000     		.align	3
 161              	.LC2:
 162 0038 73636175 		.string	"scause: "
 162      73653A20 
 162      00
 163 0041 00000000 		.align	3
 163      000000
 164              	.LC3:
 165 0048 73657063 		.string	"sepc: "
 165      3A2000
 166              		.text
 167              		.align	2
 168              		.globl	_ZN6Kernel21supervisorTrapHandlerEv
 170              	_ZN6Kernel21supervisorTrapHandlerEv:
 171              	.LFB74:
  23:src/kernel.cpp ****     uint64 scause = RiscV::readScause();
 172              		.loc 1 23 38 is_stmt 1
 173              		.cfi_startproc
 174 00c8 130101F1 		addi	sp,sp,-240
 175              		.cfi_def_cfa_offset 240
 176 00cc 2334110E 		sd	ra,232(sp)
 177 00d0 2330810E 		sd	s0,224(sp)
 178 00d4 233C910C 		sd	s1,216(sp)
 179 00d8 2338210D 		sd	s2,208(sp)
 180 00dc 2334310D 		sd	s3,200(sp)
 181              		.cfi_offset 1, -8
 182              		.cfi_offset 8, -16
 183              		.cfi_offset 9, -24
 184              		.cfi_offset 18, -32
 185              		.cfi_offset 19, -40
 186 00e0 1304010F 		addi	s0,sp,240
 187              		.cfi_def_cfa 8, 0
  24:src/kernel.cpp **** 
 188              		.loc 1 24 5
 189              	.LBB148:
 190              	.LBB149:
  83:src/../h/riscv.hpp ****     asm volatile("csrr %[scause], scause": [scause] "=r" (scause));
 191              		.loc 2 83 5
  84:src/../h/riscv.hpp ****     return scause;
 192              		.loc 2 84 5
  84:src/../h/riscv.hpp ****     return scause;
 193              		.loc 2 84 67 is_stmt 0
 194              	#APP
 195              	# 84 "src/../h/riscv.hpp" 1
 196              		csrr a5, scause
 197              	# 0 "" 2
 198              	#NO_APP
 199 00e8 233CF4F0 		sd	a5,-232(s0)
  85:src/../h/riscv.hpp **** }
 200              		.loc 2 85 5 is_stmt 1
  85:src/../h/riscv.hpp **** }
 201              		.loc 2 85 12 is_stmt 0
 202 00ec 833484F1 		ld	s1,-232(s0)
 203              	.LVL11:
 204              	.LBE149:
GAS LISTING /tmp/ccYnqADt.s 			page 9


 205              	.LBE148:
  26:src/kernel.cpp ****         uint64 sepc = RiscV::readSepc() + 4;
 206              		.loc 1 26 5 is_stmt 1
 207              	.LBB150:
  26:src/kernel.cpp ****         uint64 sepc = RiscV::readSepc() + 4;
 208              		.loc 1 26 32 is_stmt 0
 209 00f0 138784FF 		addi	a4,s1,-8
  26:src/kernel.cpp ****         uint64 sepc = RiscV::readSepc() + 4;
 210              		.loc 1 26 5
 211 00f4 93071000 		li	a5,1
 212 00f8 63F8E70A 		bleu	a4,a5,.L37
 213              	.LBE150:
  38:src/kernel.cpp ****         //__print_string("timer\n");
 214              		.loc 1 38 5 is_stmt 1
 215              	.LBB196:
 216 00fc 9307F0FF 		li	a5,-1
 217 0100 9397F703 		slli	a5,a5,63
 218 0104 93871700 		addi	a5,a5,1
 219 0108 638CF42E 		beq	s1,a5,.L38
 220              	.LBE196:
  55:src/kernel.cpp ****         //console_handler();
 221              		.loc 1 55 5
 222 010c 9307F0FF 		li	a5,-1
 223 0110 9397F703 		slli	a5,a5,63
 224 0114 93879700 		addi	a5,a5,9
 225 0118 638CF436 		beq	s1,a5,.L39
  63:src/kernel.cpp ****     __print_string("Neobradjen izuzetak.\n");
 226              		.loc 1 63 5
 227              	.LBB220:
 228              	.LBB221:
  93:src/../h/riscv.hpp ****     asm volatile("csrr %[sepc], sepc": [sepc] "=r" (sepc));
 229              		.loc 2 93 5
  94:src/../h/riscv.hpp ****     return sepc;
 230              		.loc 2 94 5
  94:src/../h/riscv.hpp ****     return sepc;
 231              		.loc 2 94 59 is_stmt 0
 232              	#APP
 233              	# 94 "src/../h/riscv.hpp" 1
 234              		csrr a5, sepc
 235              	# 0 "" 2
 236              	#NO_APP
 237 0120 2330F4F4 		sd	a5,-192(s0)
  95:src/../h/riscv.hpp **** }
 238              		.loc 2 95 5 is_stmt 1
  95:src/../h/riscv.hpp **** }
 239              		.loc 2 95 12 is_stmt 0
 240 0124 033904F4 		ld	s2,-192(s0)
 241              	.LVL12:
 242              	.LBE221:
 243              	.LBE220:
  64:src/kernel.cpp ****     __print_string("scause: ");
 244              		.loc 1 64 5 is_stmt 1
  64:src/kernel.cpp ****     __print_string("scause: ");
 245              		.loc 1 64 19 is_stmt 0
 246 0128 17050000 		lla	a0,.LC1
 246      13050500 
 247 0130 97000000 		call	_Z14__print_stringPKc@plt
GAS LISTING /tmp/ccYnqADt.s 			page 10


 247      E7800000 
 248              	.LVL13:
  65:src/kernel.cpp ****     __print_uint64(scause);
 249              		.loc 1 65 5 is_stmt 1
  65:src/kernel.cpp ****     __print_uint64(scause);
 250              		.loc 1 65 19 is_stmt 0
 251 0138 17050000 		lla	a0,.LC2
 251      13050500 
 252 0140 97000000 		call	_Z14__print_stringPKc@plt
 252      E7800000 
 253              	.LVL14:
  66:src/kernel.cpp ****     Uart::txPut('\n');
 254              		.loc 1 66 5 is_stmt 1
  66:src/kernel.cpp ****     Uart::txPut('\n');
 255              		.loc 1 66 19 is_stmt 0
 256 0148 13850400 		mv	a0,s1
 257 014c 97000000 		call	_Z14__print_uint64m@plt
 257      E7800000 
 258              	.LVL15:
  67:src/kernel.cpp ****     __print_string("sepc: ");
 259              		.loc 1 67 5 is_stmt 1
  67:src/kernel.cpp ****     __print_string("sepc: ");
 260              		.loc 1 67 16 is_stmt 0
 261 0154 1305A000 		li	a0,10
 262 0158 97000000 		call	_ZN4Uart5txPutEc@plt
 262      E7800000 
 263              	.LVL16:
  68:src/kernel.cpp ****     __print_uint64(sepc);
 264              		.loc 1 68 5 is_stmt 1
  68:src/kernel.cpp ****     __print_uint64(sepc);
 265              		.loc 1 68 19 is_stmt 0
 266 0160 17050000 		lla	a0,.LC3
 266      13050500 
 267 0168 97000000 		call	_Z14__print_stringPKc@plt
 267      E7800000 
 268              	.LVL17:
  69:src/kernel.cpp ****     Uart::txPut('\n');
 269              		.loc 1 69 5 is_stmt 1
  69:src/kernel.cpp ****     Uart::txPut('\n');
 270              		.loc 1 69 19 is_stmt 0
 271 0170 13050900 		mv	a0,s2
 272 0174 97000000 		call	_Z14__print_uint64m@plt
 272      E7800000 
 273              	.LVL18:
  70:src/kernel.cpp ****     //riscV::clearSip(RiscV::SSIP);
 274              		.loc 1 70 5 is_stmt 1
  70:src/kernel.cpp ****     //riscV::clearSip(RiscV::SSIP);
 275              		.loc 1 70 16 is_stmt 0
 276 017c 1305A000 		li	a0,10
 277 0180 97000000 		call	_ZN4Uart5txPutEc@plt
 277      E7800000 
 278              	.LVL19:
  72:src/kernel.cpp ****     return;
 279              		.loc 1 72 5 is_stmt 1
 280              	.LBB222:
 281              	.LBB223:
  99:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccYnqADt.s 			page 11


 282              		.loc 2 99 5
  99:src/../h/riscv.hpp **** }
 283              		.loc 2 99 59 is_stmt 0
 284              	#APP
 285              	# 99 "src/../h/riscv.hpp" 1
 286              		csrw sepc, s2
 287              	# 0 "" 2
 288              	.LVL20:
 289              	#NO_APP
 290              	.L9:
 291              	.LBE223:
 292              	.LBE222:
  74:src/kernel.cpp **** 
 293              		.loc 1 74 1
 294 018c 8330810E 		ld	ra,232(sp)
 295              		.cfi_remember_state
 296              		.cfi_restore 1
 297 0190 0334010E 		ld	s0,224(sp)
 298              		.cfi_restore 8
 299              		.cfi_def_cfa 2, 240
 300 0194 8334810D 		ld	s1,216(sp)
 301              		.cfi_restore 9
 302 0198 0339010D 		ld	s2,208(sp)
 303              		.cfi_restore 18
 304 019c 8339810C 		ld	s3,200(sp)
 305              		.cfi_restore 19
 306 01a0 1301010F 		addi	sp,sp,240
 307              		.cfi_def_cfa_offset 0
 308 01a4 67800000 		jr	ra
 309              	.LVL21:
 310              	.L37:
 311              		.cfi_restore_state
 312              	.LBB224:
 313              	.LBB151:
  27:src/kernel.cpp ****         uint64 sstatus = RiscV::readSstatus();
 314              		.loc 1 27 9 is_stmt 1
 315              	.LBB152:
 316              	.LBB153:
  93:src/../h/riscv.hpp ****     asm volatile("csrr %[sepc], sepc": [sepc] "=r" (sepc));
 317              		.loc 2 93 5
  94:src/../h/riscv.hpp ****     return sepc;
 318              		.loc 2 94 5
  94:src/../h/riscv.hpp ****     return sepc;
 319              		.loc 2 94 59 is_stmt 0
 320              	#APP
 321              	# 94 "src/../h/riscv.hpp" 1
 322              		csrr a5, sepc
 323              	# 0 "" 2
 324              	#NO_APP
 325 01ac 2334F4F2 		sd	a5,-216(s0)
  95:src/../h/riscv.hpp **** }
 326              		.loc 2 95 5 is_stmt 1
  95:src/../h/riscv.hpp **** }
 327              		.loc 2 95 12 is_stmt 0
 328 01b0 833484F2 		ld	s1,-216(s0)
 329              	.LVL22:
 330              	.LBE153:
GAS LISTING /tmp/ccYnqADt.s 			page 12


 331              	.LBE152:
  27:src/kernel.cpp ****         uint64 sstatus = RiscV::readSstatus();
 332              		.loc 1 27 43
 333 01b4 93844400 		addi	s1,s1,4
 334              	.LVL23:
  28:src/kernel.cpp **** 
 335              		.loc 1 28 9 is_stmt 1
 336              	.LBB154:
 337              	.LBB155:
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp **** inline void RiscV::setSstatus(uint64 mask) {
 113:src/../h/riscv.hpp ****     asm volatile("csrs sstatus, %[mask]":: [mask] "r" (mask));
 114:src/../h/riscv.hpp **** }
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp **** inline void RiscV::clearSstatus(uint64 mask) {
 117:src/../h/riscv.hpp ****     asm volatile("csrc sstatus, %[mask]":: [mask] "r" (mask));
 118:src/../h/riscv.hpp **** }
 119:src/../h/riscv.hpp **** 
 120:src/../h/riscv.hpp **** inline uint64 RiscV::readSstatus() {
 121:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 338              		.loc 2 121 5
 122:src/../h/riscv.hpp ****     asm volatile("csrr %[sstatus], sstatus": [sstatus] "=r" (sstatus));
 339              		.loc 2 122 5
 340              		.loc 2 122 71 is_stmt 0
 341              	#APP
 342              	# 122 "src/../h/riscv.hpp" 1
 123              	    return sstatus;
 343              		csrr a5, sstatus
 344              	# 0 "" 2
 345              	#NO_APP
 346 01bc 2330F4F2 		sd	a5,-224(s0)
 347              		.loc 2 123 5 is_stmt 1
 348              		.loc 2 123 12 is_stmt 0
 349 01c0 033904F2 		ld	s2,-224(s0)
 350              	.LVL24:
 351              	.LBE155:
 352              	.LBE154:
  30:src/kernel.cpp **** 
 353              		.loc 1 30 9 is_stmt 1
 354              	.LBB156:
 355              	.LBB157:
 356              		.file 3 "src/../h/kernel.hpp"
   1:src/../h/kernel.hpp **** //
   2:src/../h/kernel.hpp **** // Created by os on 9/6/22.
   3:src/../h/kernel.hpp **** //
   4:src/../h/kernel.hpp **** 
   5:src/../h/kernel.hpp **** #ifndef OSMIUM_KERNEL_HPP
   6:src/../h/kernel.hpp **** #define OSMIUM_KERNEL_HPP
   7:src/../h/kernel.hpp **** 
   8:src/../h/kernel.hpp **** #include "../lib/hw.h"
   9:src/../h/kernel.hpp **** #include "../lib/console.h"
  10:src/../h/kernel.hpp **** 
  11:src/../h/kernel.hpp **** #include "memory_allocator.hpp"
  12:src/../h/kernel.hpp **** #include "tcb.hpp"
  13:src/../h/kernel.hpp **** //#include "sem.hpp"
  14:src/../h/kernel.hpp **** #include "uart.hpp"
  15:src/../h/kernel.hpp **** 
GAS LISTING /tmp/ccYnqADt.s 			page 13


  16:src/../h/kernel.hpp **** class Kernel {
  17:src/../h/kernel.hpp **** public:
  18:src/../h/kernel.hpp ****     static constexpr uint64 USER_SYSCALL = 0x0000000000000008UL;
  19:src/../h/kernel.hpp ****     static constexpr uint64 SUPERVISOR_SYSCALL = 0x0000000000000009UL;
  20:src/../h/kernel.hpp ****     static constexpr uint64 HARDWARE_IRQ = 0x8000000000000009UL;
  21:src/../h/kernel.hpp ****     static constexpr uint64 TIMER_IRQ = 0x8000000000000001UL;
  22:src/../h/kernel.hpp **** 
  23:src/../h/kernel.hpp ****     static void initKernel();
  24:src/../h/kernel.hpp ****     static void supervisorTrap();
  25:src/../h/kernel.hpp **** private:
  26:src/../h/kernel.hpp ****     /* supervisor Trap routines */
  27:src/../h/kernel.hpp ****     static void supervisorTrapHandler();
  28:src/../h/kernel.hpp ****     static void syscall_handler();
  29:src/../h/kernel.hpp ****     static void hw_irq_handler();
  30:src/../h/kernel.hpp **** 
  31:src/../h/kernel.hpp ****     /* software syscall_c handlers */
  32:src/../h/kernel.hpp ****     static void mem_alloc_handler();                    //0x01
  33:src/../h/kernel.hpp ****     static void mem_free_handler();                     //0x02
  34:src/../h/kernel.hpp ****     static void thread_create_handler();                //0x11
  35:src/../h/kernel.hpp ****     static void thread_exit_handler();                  //0x12
  36:src/../h/kernel.hpp ****     static void thread_dispatch_handler();              //0x13
  37:src/../h/kernel.hpp ****     static void thread_create_deactivated_handler();    //0x14
  38:src/../h/kernel.hpp ****     static void sem_open_handler();                     //0x21
  39:src/../h/kernel.hpp ****     static void sem_close_handler();                    //0x22
  40:src/../h/kernel.hpp ****     static void sem_wait_handler();                     //0x23
  41:src/../h/kernel.hpp ****     static void sem_signal_handler();                   //0x24
  42:src/../h/kernel.hpp ****     static void time_sleep_handler();                   //0x31
  43:src/../h/kernel.hpp ****     static void getc_handler();                         //0x41
  44:src/../h/kernel.hpp ****     static void putc_handler();                         //0x42
  45:src/../h/kernel.hpp **** 
  46:src/../h/kernel.hpp ****     /* hardware interrupt handlers */
  47:src/../h/kernel.hpp ****     static void uart_handler();                         //0x0a
  48:src/../h/kernel.hpp **** 
  49:src/../h/kernel.hpp ****     //private fields
  50:src/../h/kernel.hpp ****     //TODO:
  51:src/../h/kernel.hpp **** };
  52:src/../h/kernel.hpp **** 
  53:src/../h/kernel.hpp **** inline void Kernel::syscall_handler() {
  54:src/../h/kernel.hpp ****     //uint64 sepc = RiscV::readSepc();
  55:src/../h/kernel.hpp ****     volatile uint64 syscall_id;
 357              		.loc 3 55 5
  56:src/../h/kernel.hpp ****     asm volatile ("mv %[syscall_id], a7": [syscall_id] "=r" (syscall_id));
 358              		.loc 3 56 5
 359              		.loc 3 56 74 is_stmt 0
 360              	#APP
 361              	# 56 "src/../h/kernel.hpp" 1
  57              	
 362              		mv a5, a7
 363              	# 0 "" 2
 364              	#NO_APP
 365 01c8 2334F4F4 		sd	a5,-184(s0)
  58:src/../h/kernel.hpp ****     //volatile uint64 arg0, arg1, arg2, temp;
  59:src/../h/kernel.hpp ****     switch(syscall_id) {
 366              		.loc 3 59 5 is_stmt 1
 367              		.loc 3 59 12 is_stmt 0
 368 01cc 833784F4 		ld	a5,-184(s0)
 369 01d0 13072004 		li	a4,66
GAS LISTING /tmp/ccYnqADt.s 			page 14


 370              	.LVL25:
 371 01d4 636AF720 		bgtu	a5,a4,.L11
 372 01d8 93972700 		slli	a5,a5,2
 373 01dc 17070000 		lla	a4,.L13
 373      13070700 
 374 01e4 B387E700 		add	a5,a5,a4
 375 01e8 83A70700 		lw	a5,0(a5)
 376 01ec B387E700 		add	a5,a5,a4
 377 01f0 67800700 		jr	a5
 378              		.section	.rodata
 379              		.align	2
 380              		.align	2
 381              	.L13:
 382 0000 00000000 		.word	.L11-.L13
 383 0004 00000000 		.word	.L25-.L13
 384 0008 00000000 		.word	.L24-.L13
 385 000c 00000000 		.word	.L11-.L13
 386 0010 00000000 		.word	.L11-.L13
 387 0014 00000000 		.word	.L11-.L13
 388 0018 00000000 		.word	.L11-.L13
 389 001c 00000000 		.word	.L11-.L13
 390 0020 00000000 		.word	.L11-.L13
 391 0024 00000000 		.word	.L11-.L13
 392 0028 00000000 		.word	.L11-.L13
 393 002c 00000000 		.word	.L11-.L13
 394 0030 00000000 		.word	.L11-.L13
 395 0034 00000000 		.word	.L11-.L13
 396 0038 00000000 		.word	.L11-.L13
 397 003c 00000000 		.word	.L11-.L13
 398 0040 00000000 		.word	.L11-.L13
 399 0044 00000000 		.word	.L23-.L13
 400 0048 00000000 		.word	.L22-.L13
 401 004c 00000000 		.word	.L21-.L13
 402 0050 00000000 		.word	.L20-.L13
 403 0054 00000000 		.word	.L11-.L13
 404 0058 00000000 		.word	.L11-.L13
 405 005c 00000000 		.word	.L11-.L13
 406 0060 00000000 		.word	.L11-.L13
 407 0064 00000000 		.word	.L11-.L13
 408 0068 00000000 		.word	.L11-.L13
 409 006c 00000000 		.word	.L11-.L13
 410 0070 00000000 		.word	.L11-.L13
 411 0074 00000000 		.word	.L11-.L13
 412 0078 00000000 		.word	.L11-.L13
 413 007c 00000000 		.word	.L11-.L13
 414 0080 00000000 		.word	.L11-.L13
 415 0084 00000000 		.word	.L19-.L13
 416 0088 00000000 		.word	.L18-.L13
 417 008c 00000000 		.word	.L17-.L13
 418 0090 00000000 		.word	.L16-.L13
 419 0094 00000000 		.word	.L11-.L13
 420 0098 00000000 		.word	.L11-.L13
 421 009c 00000000 		.word	.L11-.L13
 422 00a0 00000000 		.word	.L11-.L13
 423 00a4 00000000 		.word	.L11-.L13
 424 00a8 00000000 		.word	.L11-.L13
 425 00ac 00000000 		.word	.L11-.L13
GAS LISTING /tmp/ccYnqADt.s 			page 15


 426 00b0 00000000 		.word	.L11-.L13
 427 00b4 00000000 		.word	.L11-.L13
 428 00b8 00000000 		.word	.L11-.L13
 429 00bc 00000000 		.word	.L11-.L13
 430 00c0 00000000 		.word	.L11-.L13
 431 00c4 00000000 		.word	.L15-.L13
 432 00c8 00000000 		.word	.L11-.L13
 433 00cc 00000000 		.word	.L11-.L13
 434 00d0 00000000 		.word	.L11-.L13
 435 00d4 00000000 		.word	.L11-.L13
 436 00d8 00000000 		.word	.L11-.L13
 437 00dc 00000000 		.word	.L11-.L13
 438 00e0 00000000 		.word	.L11-.L13
 439 00e4 00000000 		.word	.L11-.L13
 440 00e8 00000000 		.word	.L11-.L13
 441 00ec 00000000 		.word	.L11-.L13
 442 00f0 00000000 		.word	.L11-.L13
 443 00f4 00000000 		.word	.L11-.L13
 444 00f8 00000000 		.word	.L11-.L13
 445 00fc 00000000 		.word	.L11-.L13
 446 0100 00000000 		.word	.L11-.L13
 447 0104 00000000 		.word	.L14-.L13
 448 0108 00000000 		.word	.L12-.L13
 449              		.text
 450              	.L25:
  60:src/../h/kernel.hpp ****         case 0x01:
 451              		.loc 3 60 9 is_stmt 1
  61:src/../h/kernel.hpp ****             Kernel::mem_alloc_handler();
 452              		.loc 3 61 13
 453              	.LBB158:
 454              	.LBB159:
  62:src/../h/kernel.hpp ****             break;
  63:src/../h/kernel.hpp ****         case 0x02:
  64:src/../h/kernel.hpp ****             Kernel::mem_free_handler();
  65:src/../h/kernel.hpp ****             break;
  66:src/../h/kernel.hpp ****         case 0x11:
  67:src/../h/kernel.hpp ****             Kernel::thread_create_handler();
  68:src/../h/kernel.hpp ****             break;
  69:src/../h/kernel.hpp ****         case 0x12:
  70:src/../h/kernel.hpp ****             Kernel::thread_exit_handler();
  71:src/../h/kernel.hpp ****             break;
  72:src/../h/kernel.hpp ****         case 0x13:
  73:src/../h/kernel.hpp ****             Kernel::thread_dispatch_handler();
  74:src/../h/kernel.hpp ****             break;
  75:src/../h/kernel.hpp ****         case 0x14:
  76:src/../h/kernel.hpp ****             Kernel::thread_create_deactivated_handler();
  77:src/../h/kernel.hpp ****             break;
  78:src/../h/kernel.hpp ****         case 0x21:
  79:src/../h/kernel.hpp ****             Kernel::sem_open_handler();
  80:src/../h/kernel.hpp ****             break;
  81:src/../h/kernel.hpp ****         case 0x22:
  82:src/../h/kernel.hpp ****             Kernel::sem_close_handler();
  83:src/../h/kernel.hpp ****             break;
  84:src/../h/kernel.hpp ****         case 0x23:
  85:src/../h/kernel.hpp ****             Kernel::sem_wait_handler();
  86:src/../h/kernel.hpp ****             break;
  87:src/../h/kernel.hpp ****         case 0x24:
GAS LISTING /tmp/ccYnqADt.s 			page 16


  88:src/../h/kernel.hpp ****             Kernel::sem_signal_handler();
  89:src/../h/kernel.hpp ****             break;
  90:src/../h/kernel.hpp ****         case 0x31:
  91:src/../h/kernel.hpp ****             Kernel::time_sleep_handler();
  92:src/../h/kernel.hpp ****             break;
  93:src/../h/kernel.hpp ****         case 0x41:
  94:src/../h/kernel.hpp ****             Kernel::getc_handler();
  95:src/../h/kernel.hpp ****             break;
  96:src/../h/kernel.hpp ****         case 0x42:
  97:src/../h/kernel.hpp ****             Kernel::putc_handler();
  98:src/../h/kernel.hpp ****             break;
  99:src/../h/kernel.hpp ****         default:
 100:src/../h/kernel.hpp ****             asm volatile ("addi a0, zero, -1");
 101:src/../h/kernel.hpp ****             __print_string("Error: Invalid syscall id!");
 102:src/../h/kernel.hpp ****             break;
 103:src/../h/kernel.hpp ****     }
 104:src/../h/kernel.hpp **** }
 105:src/../h/kernel.hpp **** 
 106:src/../h/kernel.hpp **** //0x01
 107:src/../h/kernel.hpp **** inline void Kernel::mem_alloc_handler() {
 108:src/../h/kernel.hpp ****     volatile uint64 arg0;
 455              		.loc 3 108 5
 109:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 456              		.loc 3 109 5
 457              		.loc 3 109 55 is_stmt 0
 458              	#APP
 459              	# 109 "src/../h/kernel.hpp" 1
 110              	    MemoryAllocator::allocate((size_t)arg0);
 460              		mv a5, a0
 461              	# 0 "" 2
 462              	#NO_APP
 463 01f8 2330F4F8 		sd	a5,-128(s0)
 464              		.loc 3 110 5 is_stmt 1
 465              		.loc 3 110 30 is_stmt 0
 466 01fc 033504F8 		ld	a0,-128(s0)
 467 0200 97000000 		call	_ZN15MemoryAllocator8allocateEm@plt
 467      E7800000 
 468              	.LVL26:
 469              	.L26:
 470              	.LBE159:
 471              	.LBE158:
 472              	.LBE157:
 473              	.LBE156:
  32:src/kernel.cpp ****         RiscV::writeSstatus(sstatus);
 474              		.loc 1 32 9 is_stmt 1
  32:src/kernel.cpp ****         RiscV::writeSstatus(sstatus);
 475              		.loc 1 32 39 is_stmt 0
 476              	#APP
 477              	# 32 "src/kernel.cpp" 1
  33:src/kernel.cpp ****         RiscV::writeSepc(sepc);
 478              		sd a0, 80(s0)
 479              	# 0 "" 2
 480              		.loc 1 33 9 is_stmt 1
 481              	.LVL27:
 482              	#NO_APP
 483              	.LBB189:
 484              	.LBB190:
GAS LISTING /tmp/ccYnqADt.s 			page 17


 124:src/../h/riscv.hpp **** }
 125:src/../h/riscv.hpp **** 
 126:src/../h/riscv.hpp **** inline void RiscV::writeSstatus(uint64 sstatus) {
 127:src/../h/riscv.hpp ****     asm volatile("csrw sstatus, %[sstatus]":: [sstatus] "r" (sstatus));
 485              		.loc 2 127 5
 486              		.loc 2 127 71 is_stmt 0
 487              	#APP
 488              	# 127 "src/../h/riscv.hpp" 1
 128              	}
 489              		csrw sstatus, s2
 490              	# 0 "" 2
 491              	.LVL28:
 492              	#NO_APP
 493              	.LBE190:
 494              	.LBE189:
  34:src/kernel.cpp ****         RiscV::clearSip(RiscV::SSIP);
 495              		.loc 1 34 9 is_stmt 1
 496              	.LBB191:
 497              	.LBB192:
  99:src/../h/riscv.hpp **** }
 498              		.loc 2 99 5
  99:src/../h/riscv.hpp **** }
 499              		.loc 2 99 59 is_stmt 0
 500              	#APP
 501              	# 99 "src/../h/riscv.hpp" 1
 502              		csrw sepc, s1
 503              	# 0 "" 2
 504              	.LVL29:
 505              	#NO_APP
 506              	.LBE192:
 507              	.LBE191:
  35:src/kernel.cpp ****         return;
 508              		.loc 1 35 9 is_stmt 1
 509              	.LBB193:
 510              	.LBB194:
 129:src/../h/riscv.hpp **** 
 130:src/../h/riscv.hpp **** inline void RiscV::setSip(uint64 mask) {
 131:src/../h/riscv.hpp ****     asm volatile("csrs sip, %[mask]":: [mask] "r" (mask));
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline void RiscV::clearSip(uint64 mask) {
 135:src/../h/riscv.hpp ****     asm volatile("csrc sip, %[mask]":: [mask] "r" (mask));
 511              		.loc 2 135 5
 512              		.loc 2 135 58 is_stmt 0
 513 0214 93072000 		li	a5,2
 514              	#APP
 515              	# 135 "src/../h/riscv.hpp" 1
 136              	}
 516              		csrc sip, a5
 517              	# 0 "" 2
 518              	.LVL30:
 519              	#NO_APP
 520              	.LBE194:
 521              	.LBE193:
  36:src/kernel.cpp ****     }
 522              		.loc 1 36 9 is_stmt 1
 523 021c 6FF01FF7 		j	.L9
GAS LISTING /tmp/ccYnqADt.s 			page 18


 524              	.L24:
 525              	.LBB195:
 526              	.LBB188:
  63:src/../h/kernel.hpp ****             Kernel::mem_free_handler();
 527              		.loc 3 63 9
  64:src/../h/kernel.hpp ****             break;
 528              		.loc 3 64 13
 529              	.LBB160:
 530              	.LBB161:
 111:src/../h/kernel.hpp **** }
 112:src/../h/kernel.hpp **** 
 113:src/../h/kernel.hpp **** //0x02
 114:src/../h/kernel.hpp **** inline void Kernel::mem_free_handler() {
 115:src/../h/kernel.hpp ****     volatile uint64 arg0;
 531              		.loc 3 115 5
 116:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 532              		.loc 3 116 5
 533              		.loc 3 116 55 is_stmt 0
 534              	#APP
 535              	# 116 "src/../h/kernel.hpp" 1
 117              	    MemoryAllocator::free((void*)arg0);
 536              		mv a5, a0
 537              	# 0 "" 2
 538              	#NO_APP
 539 0224 233CF4F6 		sd	a5,-136(s0)
 540              		.loc 3 117 5 is_stmt 1
 541              		.loc 3 117 26 is_stmt 0
 542 0228 033584F7 		ld	a0,-136(s0)
 543 022c 97000000 		call	_ZN15MemoryAllocator4freeEPv@plt
 543      E7800000 
 544              	.LVL31:
 118:src/../h/kernel.hpp **** }
 545              		.loc 3 118 1
 546 0234 6FF05FFD 		j	.L26
 547              	.L23:
 548              	.LBE161:
 549              	.LBE160:
  66:src/../h/kernel.hpp ****             Kernel::thread_create_handler();
 550              		.loc 3 66 9 is_stmt 1
  67:src/../h/kernel.hpp ****             break;
 551              		.loc 3 67 13
 552              	.LBB162:
 553              	.LBB163:
 119:src/../h/kernel.hpp **** 
 120:src/../h/kernel.hpp **** //0x11
 121:src/../h/kernel.hpp **** inline void Kernel::thread_create_handler() {
 122:src/../h/kernel.hpp ****     volatile uint64 arg0, arg1, arg2;
 554              		.loc 3 122 5
 123:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 555              		.loc 3 123 5
 556              		.loc 3 123 55 is_stmt 0
 557              	#APP
 558              	# 123 "src/../h/kernel.hpp" 1
 124              	    asm volatile ("mv %[arg1], a1": [arg1] "=r"(arg1));
 559              		mv a5, a0
 560              	# 0 "" 2
 561              	#NO_APP
GAS LISTING /tmp/ccYnqADt.s 			page 19


 562 023c 2334F4F8 		sd	a5,-120(s0)
 563              		.loc 3 124 5 is_stmt 1
 564              		.loc 3 124 55 is_stmt 0
 565              	#APP
 566              	# 124 "src/../h/kernel.hpp" 1
 125              	    asm volatile ("mv %[arg2], a2": [arg2] "=r"(arg2));
 567              		mv a5, a1
 568              	# 0 "" 2
 569              	#NO_APP
 570 0244 2338F4F8 		sd	a5,-112(s0)
 571              		.loc 3 125 5 is_stmt 1
 572              		.loc 3 125 55 is_stmt 0
 573              	#APP
 574              	# 125 "src/../h/kernel.hpp" 1
 126              	
 575              		mv a5, a2
 576              	# 0 "" 2
 577              	#NO_APP
 578 024c 233CF4F8 		sd	a5,-104(s0)
 127:src/../h/kernel.hpp ****     *(TCB**)arg0 = TCB::createTCB((TCB::Body)arg1, (void*)arg2);
 579              		.loc 3 127 5 is_stmt 1
 580              		.loc 3 127 34 is_stmt 0
 581 0250 033504F9 		ld	a0,-112(s0)
 582 0254 833584F9 		ld	a1,-104(s0)
 583              		.loc 3 127 5
 584 0258 833984F8 		ld	s3,-120(s0)
 585              		.loc 3 127 34
 586 025c 97000000 		call	_ZN3TCB9createTCBEPFvPvES0_@plt
 586      E7800000 
 587              	.LVL32:
 588              		.loc 3 127 18
 589 0264 23B0A900 		sd	a0,0(s3)
 128:src/../h/kernel.hpp **** 
 129:src/../h/kernel.hpp ****     asm volatile("mv a0, zero");
 590              		.loc 3 129 5 is_stmt 1
 591              		.loc 3 129 32 is_stmt 0
 592              	#APP
 593              	# 129 "src/../h/kernel.hpp" 1
 130              	    if (!(*(TCB**)arg0)) asm volatile("addi a0, a0, -1");
 594              		mv a0, zero
 595              	# 0 "" 2
 596              		.loc 3 130 5 is_stmt 1
 597              		.loc 3 130 11 is_stmt 0
 598              	#NO_APP
 599 026c 833784F8 		ld	a5,-120(s0)
 600 0270 83B70700 		ld	a5,0(a5)
 601              		.loc 3 130 5
 602 0274 E39A07F8 		bnez	a5,.L26
 603              		.loc 3 130 26 is_stmt 1
 604              		.loc 3 130 57 is_stmt 0
 605              	#APP
 606              	# 130 "src/../h/kernel.hpp" 1
 131              	}
 607              		addi a0, a0, -1
 608              	# 0 "" 2
 609              		.loc 3 131 1
 610              	#NO_APP
GAS LISTING /tmp/ccYnqADt.s 			page 20


 611 027c 6FF0DFF8 		j	.L26
 612              	.L22:
 613              	.LBE163:
 614              	.LBE162:
  69:src/../h/kernel.hpp ****             Kernel::thread_exit_handler();
 615              		.loc 3 69 9 is_stmt 1
  70:src/../h/kernel.hpp ****             break;
 616              		.loc 3 70 13
 617              	.LBB164:
 618              	.LBB165:
 132:src/../h/kernel.hpp **** 
 133:src/../h/kernel.hpp **** //0x12
 134:src/../h/kernel.hpp **** inline void Kernel::thread_exit_handler() {
 135:src/../h/kernel.hpp ****     TCB::running->setFinished(true);
 619              		.loc 3 135 5
 620              		.loc 3 135 30 is_stmt 0
 621 0280 97070000 		la	a5,_ZN3TCB7runningE
 621      83B70700 
 622 0288 83B70700 		ld	a5,0(a5)
 623              	.LVL33:
 624              	.LBB166:
 625              	.LBB167:
 626              		.file 4 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by os on 9/9/22.
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OSMIUM_TCB_HPP
   6:src/../h/tcb.hpp **** #define OSMIUM_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** //#include "../h/scheduler.hpp"
  10:src/../h/tcb.hpp **** #include "riscv.hpp"
  11:src/../h/tcb.hpp **** #include "memory_allocator.hpp"
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp **** class Scheduler;
  14:src/../h/tcb.hpp **** 
  15:src/../h/tcb.hpp **** 
  16:src/../h/tcb.hpp **** class TCB {
  17:src/../h/tcb.hpp **** public:
  18:src/../h/tcb.hpp ****     using Body = void (*)(void*);
  19:src/../h/tcb.hpp **** 
  20:src/../h/tcb.hpp ****     static TCB* createTCB(Body body, void* args);
  21:src/../h/tcb.hpp **** 
  22:src/../h/tcb.hpp ****     static TCB* createDeactivatedTCB(Body body, void* args);
  23:src/../h/tcb.hpp **** 
  24:src/../h/tcb.hpp ****     static TCB* createSupervisorTCB(Body body, void* args);
  25:src/../h/tcb.hpp **** 
  26:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  27:src/../h/tcb.hpp **** 
  28:src/../h/tcb.hpp ****     void setFinished(bool val) { finished = val; }
 627              		.loc 4 28 34 is_stmt 1
 628              		.loc 4 28 43 is_stmt 0
 629 028c 13071000 		li	a4,1
 630 0290 238CE700 		sb	a4,24(a5)
 631              	.LVL34:
 632              	.LBE167:
GAS LISTING /tmp/ccYnqADt.s 			page 21


 633              	.LBE166:
 136:src/../h/kernel.hpp ****     asm volatile ("addi a0, zero, 0");
 634              		.loc 3 136 5 is_stmt 1
 635              		.loc 3 136 38 is_stmt 0
 636              	#APP
 637              	# 136 "src/../h/kernel.hpp" 1
 137              	    //TCB::yield();
 138:src/../h/kernel.hpp ****     TCB::dispatch();
 638              		addi a0, zero, 0
 639              	# 0 "" 2
 640              		.loc 3 138 5 is_stmt 1
 641              		.loc 3 138 18 is_stmt 0
 642              	#NO_APP
 643 0298 97000000 		call	_ZN3TCB8dispatchEv@plt
 643      E7800000 
 644              	.LVL35:
 139:src/../h/kernel.hpp **** }
 645              		.loc 3 139 1
 646 02a0 6FF09FF6 		j	.L26
 647              	.L21:
 648              	.LBE165:
 649              	.LBE164:
  72:src/../h/kernel.hpp ****             Kernel::thread_dispatch_handler();
 650              		.loc 3 72 9 is_stmt 1
  73:src/../h/kernel.hpp ****             break;
 651              		.loc 3 73 13
 652              	.LBB168:
 653              	.LBB169:
 140:src/../h/kernel.hpp **** 
 141:src/../h/kernel.hpp **** //0x13
 142:src/../h/kernel.hpp **** inline void Kernel::thread_dispatch_handler() {
 143:src/../h/kernel.hpp ****     //TCB::yield();
 144:src/../h/kernel.hpp ****     TCB::dispatch();
 654              		.loc 3 144 5
 655              		.loc 3 144 18 is_stmt 0
 656 02a4 97000000 		call	_ZN3TCB8dispatchEv@plt
 656      E7800000 
 657              	.LVL36:
 145:src/../h/kernel.hpp **** }
 658              		.loc 3 145 1
 659 02ac 6FF0DFF5 		j	.L26
 660              	.L20:
 661              	.LBE169:
 662              	.LBE168:
  75:src/../h/kernel.hpp ****             Kernel::thread_create_deactivated_handler();
 663              		.loc 3 75 9 is_stmt 1
  76:src/../h/kernel.hpp ****             break;
 664              		.loc 3 76 13
 665              	.LBB170:
 666              	.LBB171:
 146:src/../h/kernel.hpp **** 
 147:src/../h/kernel.hpp **** //0x14
 148:src/../h/kernel.hpp **** inline void Kernel::thread_create_deactivated_handler() {
 149:src/../h/kernel.hpp ****     volatile uint64 arg0, arg1, arg2;
 667              		.loc 3 149 5
 150:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 668              		.loc 3 150 5
GAS LISTING /tmp/ccYnqADt.s 			page 22


 669              		.loc 3 150 55 is_stmt 0
 670              	#APP
 671              	# 150 "src/../h/kernel.hpp" 1
 151              	    asm volatile ("mv %[arg1], a1": [arg1] "=r"(arg1));
 672              		mv a5, a0
 673              	# 0 "" 2
 674              	#NO_APP
 675 02b4 2330F4FA 		sd	a5,-96(s0)
 676              		.loc 3 151 5 is_stmt 1
 677              		.loc 3 151 55 is_stmt 0
 678              	#APP
 679              	# 151 "src/../h/kernel.hpp" 1
 152              	    asm volatile ("mv %[arg2], a2": [arg2] "=r"(arg2));
 680              		mv a5, a1
 681              	# 0 "" 2
 682              	#NO_APP
 683 02bc 2334F4FA 		sd	a5,-88(s0)
 684              		.loc 3 152 5 is_stmt 1
 685              		.loc 3 152 55 is_stmt 0
 686              	#APP
 687              	# 152 "src/../h/kernel.hpp" 1
 153              	
 688              		mv a5, a2
 689              	# 0 "" 2
 690              	#NO_APP
 691 02c4 2338F4FA 		sd	a5,-80(s0)
 154:src/../h/kernel.hpp ****     *(TCB**)arg0 = TCB::createDeactivatedTCB((TCB::Body)arg1, (void*)arg2);
 692              		.loc 3 154 5 is_stmt 1
 693              		.loc 3 154 45 is_stmt 0
 694 02c8 033584FA 		ld	a0,-88(s0)
 695 02cc 833504FB 		ld	a1,-80(s0)
 696              		.loc 3 154 5
 697 02d0 833904FA 		ld	s3,-96(s0)
 698              		.loc 3 154 45
 699 02d4 97000000 		call	_ZN3TCB20createDeactivatedTCBEPFvPvES0_@plt
 699      E7800000 
 700              	.LVL37:
 701              		.loc 3 154 18
 702 02dc 23B0A900 		sd	a0,0(s3)
 155:src/../h/kernel.hpp **** 
 156:src/../h/kernel.hpp ****     asm volatile("mv a0, zero");
 703              		.loc 3 156 5 is_stmt 1
 704              		.loc 3 156 32 is_stmt 0
 705              	#APP
 706              	# 156 "src/../h/kernel.hpp" 1
 157              	    if (!(*(TCB**)arg0)) asm volatile("addi a0, a0, -1");
 707              		mv a0, zero
 708              	# 0 "" 2
 709              		.loc 3 157 5 is_stmt 1
 710              		.loc 3 157 11 is_stmt 0
 711              	#NO_APP
 712 02e4 833704FA 		ld	a5,-96(s0)
 713 02e8 83B70700 		ld	a5,0(a5)
 714              		.loc 3 157 5
 715 02ec E39E07F0 		bnez	a5,.L26
 716              		.loc 3 157 26 is_stmt 1
 717              		.loc 3 157 57 is_stmt 0
GAS LISTING /tmp/ccYnqADt.s 			page 23


 718              	#APP
 719              	# 157 "src/../h/kernel.hpp" 1
 158              	}
 720              		addi a0, a0, -1
 721              	# 0 "" 2
 722              		.loc 3 158 1
 723              	#NO_APP
 724 02f4 6FF05FF1 		j	.L26
 725              	.L19:
 726              	.LBE171:
 727              	.LBE170:
  78:src/../h/kernel.hpp ****             Kernel::sem_open_handler();
 728              		.loc 3 78 9 is_stmt 1
  79:src/../h/kernel.hpp ****             break;
 729              		.loc 3 79 13
 730              	.LBB172:
 731              	.LBB173:
 159:src/../h/kernel.hpp **** 
 160:src/../h/kernel.hpp **** //0x021
 161:src/../h/kernel.hpp **** inline void Kernel::sem_open_handler() {
 162:src/../h/kernel.hpp ****     volatile uint64 arg0, arg1;
 732              		.loc 3 162 5
 163:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 733              		.loc 3 163 5
 734              		.loc 3 163 55 is_stmt 0
 735              	#APP
 736              	# 163 "src/../h/kernel.hpp" 1
 164              	    asm volatile ("mv %[arg1], a1": [arg1] "=r"(arg1));
 737              		mv a5, a0
 738              	# 0 "" 2
 739              	#NO_APP
 740 02fc 233CF4FA 		sd	a5,-72(s0)
 741              		.loc 3 164 5 is_stmt 1
 742              		.loc 3 164 55 is_stmt 0
 743              	#APP
 744              	# 164 "src/../h/kernel.hpp" 1
 165              	
 745              		mv a5, a1
 746              	# 0 "" 2
 747              	#NO_APP
 748 0304 2330F4FC 		sd	a5,-64(s0)
 166:src/../h/kernel.hpp ****     *(Sem**)arg0 = Sem::createSem((unsigned)arg1);
 749              		.loc 3 166 5 is_stmt 1
 750              		.loc 3 166 34 is_stmt 0
 751 0308 033504FC 		ld	a0,-64(s0)
 752              		.loc 3 166 5
 753 030c 833984FB 		ld	s3,-72(s0)
 754              		.loc 3 166 34
 755 0310 1B050500 		sext.w	a0,a0
 756 0314 97000000 		call	_ZN3Sem9createSemEj@plt
 756      E7800000 
 757              	.LVL38:
 758              		.loc 3 166 18
 759 031c 23B0A900 		sd	a0,0(s3)
 167:src/../h/kernel.hpp **** 
 168:src/../h/kernel.hpp ****     asm volatile("mv a0, zero");
 760              		.loc 3 168 5 is_stmt 1
GAS LISTING /tmp/ccYnqADt.s 			page 24


 761              		.loc 3 168 32 is_stmt 0
 762              	#APP
 763              	# 168 "src/../h/kernel.hpp" 1
 169              	    if (!(*(Sem**)arg0)) asm volatile("addi a0, a0, -1");
 764              		mv a0, zero
 765              	# 0 "" 2
 766              		.loc 3 169 5 is_stmt 1
 767              		.loc 3 169 11 is_stmt 0
 768              	#NO_APP
 769 0324 833784FB 		ld	a5,-72(s0)
 770 0328 83B70700 		ld	a5,0(a5)
 771              		.loc 3 169 5
 772 032c E39E07EC 		bnez	a5,.L26
 773              		.loc 3 169 26 is_stmt 1
 774              		.loc 3 169 57 is_stmt 0
 775              	#APP
 776              	# 169 "src/../h/kernel.hpp" 1
 170              	}
 777              		addi a0, a0, -1
 778              	# 0 "" 2
 779              		.loc 3 170 1
 780              	#NO_APP
 781 0334 6FF05FED 		j	.L26
 782              	.L18:
 783              	.LBE173:
 784              	.LBE172:
  81:src/../h/kernel.hpp ****             Kernel::sem_close_handler();
 785              		.loc 3 81 9 is_stmt 1
  82:src/../h/kernel.hpp ****             break;
 786              		.loc 3 82 13
 787              	.LBB174:
 788              	.LBB175:
 171:src/../h/kernel.hpp **** 
 172:src/../h/kernel.hpp **** //0x22
 173:src/../h/kernel.hpp **** inline void Kernel::sem_close_handler() {
 174:src/../h/kernel.hpp ****     volatile uint64 arg0;
 789              		.loc 3 174 5
 175:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 790              		.loc 3 175 5
 791              		.loc 3 175 55 is_stmt 0
 792              	#APP
 793              	# 175 "src/../h/kernel.hpp" 1
 176              	    delete *(Sem**)arg0;
 794              		mv a5, a0
 795              	# 0 "" 2
 796              	#NO_APP
 797 033c 2334F4FC 		sd	a5,-56(s0)
 798              		.loc 3 176 5 is_stmt 1
 799              		.loc 3 176 12 is_stmt 0
 800 0340 833784FC 		ld	a5,-56(s0)
 801 0344 83B90700 		ld	s3,0(a5)
 802              		.loc 3 176 24
 803 0348 638E0900 		beqz	s3,.L30
 804              		.loc 3 176 20
 805 034c 13850900 		mv	a0,s3
 806 0350 97000000 		call	_ZN3SemD1Ev@plt
 806      E7800000 
GAS LISTING /tmp/ccYnqADt.s 			page 25


 807              	.LVL39:
 808              	.LBB176:
 809              	.LBB177:
 810              		.file 5 "src/../h/sem.hpp"
   1:src/../h/sem.hpp **** //
   2:src/../h/sem.hpp **** // Created by os on 9/12/22.
   3:src/../h/sem.hpp **** //
   4:src/../h/sem.hpp **** 
   5:src/../h/sem.hpp **** #ifndef OSMIUM_SEM_HPP
   6:src/../h/sem.hpp **** #define OSMIUM_SEM_HPP
   7:src/../h/sem.hpp **** 
   8:src/../h/sem.hpp **** #include "../lib/hw.h"
   9:src/../h/sem.hpp **** #include "tcb.hpp"
  10:src/../h/sem.hpp **** #include "list.hpp"
  11:src/../h/sem.hpp **** #include "scheduler.hpp"
  12:src/../h/sem.hpp **** 
  13:src/../h/sem.hpp **** class Sem {
  14:src/../h/sem.hpp **** public:
  15:src/../h/sem.hpp ****     static Sem* createSem(unsigned init);
  16:src/../h/sem.hpp **** 
  17:src/../h/sem.hpp ****     ~Sem();
  18:src/../h/sem.hpp **** 
  19:src/../h/sem.hpp ****     int semWait();
  20:src/../h/sem.hpp **** 
  21:src/../h/sem.hpp ****     int semSignal();
  22:src/../h/sem.hpp **** 
  23:src/../h/sem.hpp ****     void* operator new(size_t size) {
  24:src/../h/sem.hpp ****         return MemoryAllocator::allocate(size);
  25:src/../h/sem.hpp ****     }
  26:src/../h/sem.hpp **** 
  27:src/../h/sem.hpp ****     void* operator new[](size_t size) {
  28:src/../h/sem.hpp ****         return MemoryAllocator::allocate(size);
  29:src/../h/sem.hpp ****     }
  30:src/../h/sem.hpp **** 
  31:src/../h/sem.hpp ****     void operator delete(void* ptr) {
  32:src/../h/sem.hpp ****         MemoryAllocator::free(ptr);
 811              		.loc 5 32 9 is_stmt 1
 812              		.loc 5 32 30 is_stmt 0
 813 0358 13850900 		mv	a0,s3
 814 035c 97000000 		call	_ZN15MemoryAllocator4freeEPv@plt
 814      E7800000 
 815              	.LVL40:
 816              	.L30:
 817              	.LBE177:
 818              	.LBE176:
 177:src/../h/kernel.hpp **** 
 178:src/../h/kernel.hpp ****     asm volatile("mv a0, zero");
 819              		.loc 3 178 5 is_stmt 1
 820              		.loc 3 178 32 is_stmt 0
 821              	#APP
 822              	# 178 "src/../h/kernel.hpp" 1
 179              	}
 823              		mv a0, zero
 824              	# 0 "" 2
 825              		.loc 3 179 1
 826              	#NO_APP
 827 0368 6FF01FEA 		j	.L26
GAS LISTING /tmp/ccYnqADt.s 			page 26


 828              	.L17:
 829              	.LBE175:
 830              	.LBE174:
  84:src/../h/kernel.hpp ****             Kernel::sem_wait_handler();
 831              		.loc 3 84 9 is_stmt 1
  85:src/../h/kernel.hpp ****             break;
 832              		.loc 3 85 13
 833              	.LBB178:
 834              	.LBB179:
 180:src/../h/kernel.hpp **** 
 181:src/../h/kernel.hpp **** //0x23
 182:src/../h/kernel.hpp **** inline void Kernel::sem_wait_handler() {
 183:src/../h/kernel.hpp ****     volatile uint64 arg0;
 835              		.loc 3 183 5
 184:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 836              		.loc 3 184 5
 837              		.loc 3 184 55 is_stmt 0
 838              	#APP
 839              	# 184 "src/../h/kernel.hpp" 1
 185              	    ((Sem*)arg0)->semWait();
 840              		mv a5, a0
 841              	# 0 "" 2
 842              	#NO_APP
 843 0370 2338F4F6 		sd	a5,-144(s0)
 844              		.loc 3 185 5 is_stmt 1
 845              		.loc 3 185 26 is_stmt 0
 846 0374 033504F7 		ld	a0,-144(s0)
 847 0378 97000000 		call	_ZN3Sem7semWaitEv@plt
 847      E7800000 
 848              	.LVL41:
 186:src/../h/kernel.hpp **** 
 187:src/../h/kernel.hpp ****     //asm volatile("mv a0, zero");
 188:src/../h/kernel.hpp **** }
 849              		.loc 3 188 1
 850 0380 6FF09FE8 		j	.L26
 851              	.L16:
 852              	.LBE179:
 853              	.LBE178:
  87:src/../h/kernel.hpp ****             Kernel::sem_signal_handler();
 854              		.loc 3 87 9 is_stmt 1
  88:src/../h/kernel.hpp ****             break;
 855              		.loc 3 88 13
 856              	.LBB180:
 857              	.LBB181:
 189:src/../h/kernel.hpp **** 
 190:src/../h/kernel.hpp **** //0x24
 191:src/../h/kernel.hpp **** inline void Kernel::sem_signal_handler() {
 192:src/../h/kernel.hpp ****     volatile uint64 arg0;
 858              		.loc 3 192 5
 193:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 859              		.loc 3 193 5
 860              		.loc 3 193 55 is_stmt 0
 861              	#APP
 862              	# 193 "src/../h/kernel.hpp" 1
 194              	    ((Sem*)arg0)->semSignal();
 863              		mv a5, a0
 864              	# 0 "" 2
GAS LISTING /tmp/ccYnqADt.s 			page 27


 865              	#NO_APP
 866 0388 2334F4F6 		sd	a5,-152(s0)
 867              		.loc 3 194 5 is_stmt 1
 868              		.loc 3 194 28 is_stmt 0
 869 038c 033584F6 		ld	a0,-152(s0)
 870 0390 97000000 		call	_ZN3Sem9semSignalEv@plt
 870      E7800000 
 871              	.LVL42:
 195:src/../h/kernel.hpp **** }
 872              		.loc 3 195 1
 873 0398 6FF01FE7 		j	.L26
 874              	.L15:
 875              	.LBE181:
 876              	.LBE180:
  90:src/../h/kernel.hpp ****             Kernel::time_sleep_handler();
 877              		.loc 3 90 9 is_stmt 1
  91:src/../h/kernel.hpp ****             break;
 878              		.loc 3 91 13
 879              	.LBB182:
 880              	.LBB183:
 196:src/../h/kernel.hpp **** 
 197:src/../h/kernel.hpp **** //0x31
 198:src/../h/kernel.hpp **** inline void Kernel::time_sleep_handler() {
 199:src/../h/kernel.hpp ****     volatile uint64 arg0;
 881              		.loc 3 199 5
 200:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 882              		.loc 3 200 5
 883              		.loc 3 200 55 is_stmt 0
 884              	#APP
 885              	# 200 "src/../h/kernel.hpp" 1
 201              	    Scheduler::timeSleep((time_t)arg0);
 886              		mv a5, a0
 887              	# 0 "" 2
 888              	#NO_APP
 889 03a0 2330F4F6 		sd	a5,-160(s0)
 890              		.loc 3 201 5 is_stmt 1
 891              		.loc 3 201 25 is_stmt 0
 892 03a4 033504F6 		ld	a0,-160(s0)
 893 03a8 97000000 		call	_ZN9Scheduler9timeSleepEm@plt
 893      E7800000 
 894              	.LVL43:
 202:src/../h/kernel.hpp **** }
 895              		.loc 3 202 1
 896 03b0 6FF09FE5 		j	.L26
 897              	.L14:
 898              	.LBE183:
 899              	.LBE182:
  93:src/../h/kernel.hpp ****             Kernel::getc_handler();
 900              		.loc 3 93 9 is_stmt 1
  94:src/../h/kernel.hpp ****             break;
 901              		.loc 3 94 13
 902              	.LBB184:
 903              	.LBB185:
 203:src/../h/kernel.hpp **** 
 204:src/../h/kernel.hpp **** //0x41
 205:src/../h/kernel.hpp **** inline void Kernel::getc_handler() {
 206:src/../h/kernel.hpp ****     volatile uint64 arg0;
GAS LISTING /tmp/ccYnqADt.s 			page 28


 904              		.loc 3 206 5
 207:src/../h/kernel.hpp ****     //arg0 = __getc();
 208:src/../h/kernel.hpp ****     //__print_string("getc");
 209:src/../h/kernel.hpp ****     arg0 = Uart::rxGet();
 905              		.loc 3 209 5
 906              		.loc 3 209 23 is_stmt 0
 907 03b4 97000000 		call	_ZN4Uart5rxGetEv@plt
 907      E7800000 
 908              	.LVL44:
 909              		.loc 3 209 10
 910 03bc 233CA4F4 		sd	a0,-168(s0)
 210:src/../h/kernel.hpp ****     asm volatile ("mv a0, %[arg0]":: [arg0] "r"(arg0));
 911              		.loc 3 210 5 is_stmt 1
 912              		.loc 3 210 49 is_stmt 0
 913 03c0 833784F5 		ld	a5,-168(s0)
 914              		.loc 3 210 55
 915              	#APP
 916              	# 210 "src/../h/kernel.hpp" 1
 211              	}
 917              		mv a0, a5
 918              	# 0 "" 2
 919              		.loc 3 211 1
 920              	#NO_APP
 921 03c8 6FF01FE4 		j	.L26
 922              	.L12:
 923              	.LBE185:
 924              	.LBE184:
  96:src/../h/kernel.hpp ****             Kernel::putc_handler();
 925              		.loc 3 96 9 is_stmt 1
  97:src/../h/kernel.hpp ****             break;
 926              		.loc 3 97 13
 927              	.LBB186:
 928              	.LBB187:
 212:src/../h/kernel.hpp **** 
 213:src/../h/kernel.hpp **** //0x42
 214:src/../h/kernel.hpp **** inline void Kernel::putc_handler() {
 215:src/../h/kernel.hpp ****     volatile uint64 arg0;
 929              		.loc 3 215 5
 216:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 930              		.loc 3 216 5
 931              		.loc 3 216 55 is_stmt 0
 932              	#APP
 933              	# 216 "src/../h/kernel.hpp" 1
 217              	    //__putc(arg0);
 934              		mv a5, a0
 935              	# 0 "" 2
 936              	#NO_APP
 937 03d0 2338F4F4 		sd	a5,-176(s0)
 218:src/../h/kernel.hpp ****     Uart::txPut(arg0);
 938              		.loc 3 218 5 is_stmt 1
 939              		.loc 3 218 16 is_stmt 0
 940 03d4 033504F5 		ld	a0,-176(s0)
 941 03d8 1375F50F 		andi	a0,a0,0xff
 942 03dc 97000000 		call	_ZN4Uart5txPutEc@plt
 942      E7800000 
 943              	.LVL45:
 219:src/../h/kernel.hpp ****     //uart->tx
GAS LISTING /tmp/ccYnqADt.s 			page 29


 220:src/../h/kernel.hpp **** }
 944              		.loc 3 220 1
 945 03e4 6FF05FE2 		j	.L26
 946              	.L11:
 947              	.LBE187:
 948              	.LBE186:
  99:src/../h/kernel.hpp ****             asm volatile ("addi a0, zero, -1");
 949              		.loc 3 99 9 is_stmt 1
 100:src/../h/kernel.hpp ****             __print_string("Error: Invalid syscall id!");
 950              		.loc 3 100 13
 100:src/../h/kernel.hpp ****             __print_string("Error: Invalid syscall id!");
 951              		.loc 3 100 47 is_stmt 0
 952              	#APP
 953              	# 100 "src/../h/kernel.hpp" 1
 101:src/../h/kernel.hpp ****             break;
 954              		addi a0, zero, -1
 955              	# 0 "" 2
 956              		.loc 3 101 13 is_stmt 1
 101:src/../h/kernel.hpp ****             break;
 957              		.loc 3 101 27 is_stmt 0
 958              	#NO_APP
 959 03ec 17050000 		lla	a0,.LC0
 959      13050500 
 960 03f4 97000000 		call	_Z14__print_stringPKc@plt
 960      E7800000 
 961              	.LVL46:
 102:src/../h/kernel.hpp ****     }
 962              		.loc 3 102 13 is_stmt 1
 963 03fc 6FF0DFE0 		j	.L26
 964              	.LVL47:
 965              	.L38:
 966              	.LBE188:
 967              	.LBE195:
 968              	.LBE151:
 969              	.LBE224:
 970              	.LBB225:
 971              	.LBB197:
  40:src/kernel.cpp ****         Scheduler::timerInterrupt();
 972              		.loc 1 40 9
  40:src/kernel.cpp ****         Scheduler::timerInterrupt();
 973              		.loc 1 40 13 is_stmt 0
 974 0400 97070000 		la	a5,_ZN3TCB7runningE
 974      83B70700 
 975 0408 83B70700 		ld	a5,0(a5)
  40:src/kernel.cpp ****         Scheduler::timerInterrupt();
 976              		.loc 1 40 9
 977 040c 63800704 		beqz	a5,.L40
  41:src/kernel.cpp ****         TCB::incTimeSliceCounter();
 978              		.loc 1 41 9 is_stmt 1
  41:src/kernel.cpp ****         TCB::incTimeSliceCounter();
 979              		.loc 1 41 34 is_stmt 0
 980 0410 97000000 		call	_ZN9Scheduler14timerInterruptEv@plt
 980      E7800000 
 981              	.LVL48:
  42:src/kernel.cpp ****         if (TCB::getTimeSliceCounter() >= TCB::running->getTimeSlice())
 982              		.loc 1 42 9 is_stmt 1
 983              	.LBB198:
GAS LISTING /tmp/ccYnqADt.s 			page 30


 984              	.LBB199:
  29:src/../h/tcb.hpp **** 
  30:src/../h/tcb.hpp ****     bool isBlocked() const { return blocked; }
  31:src/../h/tcb.hpp **** 
  32:src/../h/tcb.hpp ****     void setBlocked(bool val) { blocked = val; }
  33:src/../h/tcb.hpp **** 
  34:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  35:src/../h/tcb.hpp **** 
  36:src/../h/tcb.hpp ****     static TCB* running;
  37:src/../h/tcb.hpp **** 
  38:src/../h/tcb.hpp ****     //static void yield();
  39:src/../h/tcb.hpp **** 
  40:src/../h/tcb.hpp ****     static void dispatch();
  41:src/../h/tcb.hpp **** 
  42:src/../h/tcb.hpp ****     static void incTimeSliceCounter() { timeSliceCounter++; }
 985              		.loc 4 42 41
 986              		.loc 4 42 57 is_stmt 0
 987 0418 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 987      03370700 
 988 0420 83370700 		ld	a5,0(a4)
 989 0424 93871700 		addi	a5,a5,1
 990 0428 2330F700 		sd	a5,0(a4)
 991              	.LBE199:
 992              	.LBE198:
  43:src/kernel.cpp ****         {
 993              		.loc 1 43 9 is_stmt 1
 994              	.LBE197:
 995              	.LBE225:
  43:src/../h/tcb.hpp ****     static uint64 getTimeSliceCounter() { return timeSliceCounter; }
 996              		.loc 4 43 43
 997              	.LBB226:
 998              	.LBB219:
 999              	.LBB200:
  43:src/kernel.cpp ****         {
 1000              		.loc 1 43 69 is_stmt 0
 1001 042c 17070000 		la	a4,_ZN3TCB7runningE
 1001      03370700 
 1002 0434 03370700 		ld	a4,0(a4)
 1003              	.LVL49:
 1004              	.LBB201:
 1005              	.LBB202:
  34:src/../h/tcb.hpp **** 
 1006              		.loc 4 34 35 is_stmt 1
  34:src/../h/tcb.hpp **** 
 1007              		.loc 4 34 42 is_stmt 0
 1008 0438 03370702 		ld	a4,32(a4)
 1009              	.LVL50:
 1010              	.LBE202:
 1011              	.LBE201:
  43:src/kernel.cpp ****         {
 1012              		.loc 1 43 9
 1013 043c 63FEE700 		bleu	a4,a5,.L41
 1014              	.LVL51:
 1015              	.L34:
 1016              	.LBE200:
  52:src/kernel.cpp ****         return;
 1017              		.loc 1 52 9 is_stmt 1
GAS LISTING /tmp/ccYnqADt.s 			page 31


 1018              	.LBB214:
 1019              	.LBB215:
 135:src/../h/riscv.hpp **** }
 1020              		.loc 2 135 5
 135:src/../h/riscv.hpp **** }
 1021              		.loc 2 135 58 is_stmt 0
 1022 0440 93072000 		li	a5,2
 1023              	#APP
 1024              	# 135 "src/../h/riscv.hpp" 1
 1025              		csrc sip, a5
 1026              	# 0 "" 2
 1027              	.LVL52:
 1028              	#NO_APP
 1029              	.LBE215:
 1030              	.LBE214:
  53:src/kernel.cpp ****     }
 1031              		.loc 1 53 9 is_stmt 1
 1032 0448 6FF05FD4 		j	.L9
 1033              	.LVL53:
 1034              	.L40:
  40:src/kernel.cpp ****         Scheduler::timerInterrupt();
 1035              		.loc 1 40 30
 1036              	.LBB216:
 1037              	.LBB217:
 135:src/../h/riscv.hpp **** }
 1038              		.loc 2 135 5
 135:src/../h/riscv.hpp **** }
 1039              		.loc 2 135 58 is_stmt 0
 1040 044c 93072000 		li	a5,2
 1041              	#APP
 1042              	# 135 "src/../h/riscv.hpp" 1
 1043              		csrc sip, a5
 1044              	# 0 "" 2
 1045              	.LVL54:
 1046              	#NO_APP
 1047              	.LBE217:
 1048              	.LBE216:
  40:src/kernel.cpp ****         Scheduler::timerInterrupt();
 1049              		.loc 1 40 60 is_stmt 1
 1050 0454 6FF09FD3 		j	.L9
 1051              	.L41:
 1052              	.LBB218:
 1053              	.LBB203:
  45:src/kernel.cpp ****             uint64 sstatus = RiscV::readSstatus();
 1054              		.loc 1 45 13
 1055              	.LBB204:
 1056              	.LBB205:
  93:src/../h/riscv.hpp ****     asm volatile("csrr %[sepc], sepc": [sepc] "=r" (sepc));
 1057              		.loc 2 93 5
  94:src/../h/riscv.hpp ****     return sepc;
 1058              		.loc 2 94 5
  94:src/../h/riscv.hpp ****     return sepc;
 1059              		.loc 2 94 59 is_stmt 0
 1060              	#APP
 1061              	# 94 "src/../h/riscv.hpp" 1
 1062              		csrr a5, sepc
 1063              	# 0 "" 2
GAS LISTING /tmp/ccYnqADt.s 			page 32


 1064              	#NO_APP
 1065 045c 233CF4F2 		sd	a5,-200(s0)
  95:src/../h/riscv.hpp **** }
 1066              		.loc 2 95 5 is_stmt 1
  95:src/../h/riscv.hpp **** }
 1067              		.loc 2 95 12 is_stmt 0
 1068 0460 833484F3 		ld	s1,-200(s0)
 1069              	.LVL55:
 1070              	.LBE205:
 1071              	.LBE204:
  46:src/kernel.cpp ****             TCB::resetTimeSliceCounter();
 1072              		.loc 1 46 13 is_stmt 1
 1073              	.LBB206:
 1074              	.LBB207:
 121:src/../h/riscv.hpp ****     asm volatile("csrr %[sstatus], sstatus": [sstatus] "=r" (sstatus));
 1075              		.loc 2 121 5
 122:src/../h/riscv.hpp ****     return sstatus;
 1076              		.loc 2 122 5
 122:src/../h/riscv.hpp ****     return sstatus;
 1077              		.loc 2 122 71 is_stmt 0
 1078              	#APP
 1079              	# 122 "src/../h/riscv.hpp" 1
 1080              		csrr a5, sstatus
 1081              	# 0 "" 2
 1082              	#NO_APP
 1083 0468 2338F4F2 		sd	a5,-208(s0)
 123:src/../h/riscv.hpp **** }
 1084              		.loc 2 123 5 is_stmt 1
 123:src/../h/riscv.hpp **** }
 1085              		.loc 2 123 12 is_stmt 0
 1086 046c 033904F3 		ld	s2,-208(s0)
 1087              	.LVL56:
 1088              	.LBE207:
 1089              	.LBE206:
  47:src/kernel.cpp ****             TCB::dispatch();
 1090              		.loc 1 47 13 is_stmt 1
 1091              	.LBB208:
 1092              	.LBB209:
  44:src/../h/tcb.hpp ****     static void resetTimeSliceCounter() { timeSliceCounter = 0; }
 1093              		.loc 4 44 43
 1094              		.loc 4 44 60 is_stmt 0
 1095 0470 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 1095      83B70700 
 1096 0478 23B00700 		sd	zero,0(a5)
 1097              	.LBE209:
 1098              	.LBE208:
  48:src/kernel.cpp ****             RiscV::writeSstatus(sstatus);
 1099              		.loc 1 48 13 is_stmt 1
  48:src/kernel.cpp ****             RiscV::writeSstatus(sstatus);
 1100              		.loc 1 48 26 is_stmt 0
 1101 047c 97000000 		call	_ZN3TCB8dispatchEv@plt
 1101      E7800000 
 1102              	.LVL57:
  49:src/kernel.cpp ****             RiscV::writeSepc(sepc);
 1103              		.loc 1 49 13 is_stmt 1
 1104              	.LBB210:
 1105              	.LBB211:
GAS LISTING /tmp/ccYnqADt.s 			page 33


 127:src/../h/riscv.hpp **** }
 1106              		.loc 2 127 5
 127:src/../h/riscv.hpp **** }
 1107              		.loc 2 127 71 is_stmt 0
 1108              	#APP
 1109              	# 127 "src/../h/riscv.hpp" 1
 1110              		csrw sstatus, s2
 1111              	# 0 "" 2
 1112              	.LVL58:
 1113              	#NO_APP
 1114              	.LBE211:
 1115              	.LBE210:
  50:src/kernel.cpp ****         }
 1116              		.loc 1 50 13 is_stmt 1
 1117              	.LBB212:
 1118              	.LBB213:
  99:src/../h/riscv.hpp **** }
 1119              		.loc 2 99 5
  99:src/../h/riscv.hpp **** }
 1120              		.loc 2 99 59 is_stmt 0
 1121              	#APP
 1122              	# 99 "src/../h/riscv.hpp" 1
 100:src/../h/riscv.hpp **** 
 1123              		csrw sepc, s1
 1124              	# 0 "" 2
 1125              		.loc 2 100 1
 1126              	#NO_APP
 1127 048c 6FF05FFB 		j	.L34
 1128              	.LVL59:
 1129              	.L39:
 1130              	.LBE213:
 1131              	.LBE212:
 1132              	.LBE203:
 1133              	.LBE218:
 1134              	.LBE219:
 1135              	.LBE226:
  58:src/kernel.cpp ****         RiscV::clearSip(RiscV::SEIP);
 1136              		.loc 1 58 9 is_stmt 1
  58:src/kernel.cpp ****         RiscV::clearSip(RiscV::SEIP);
 1137              		.loc 1 58 23 is_stmt 0
 1138 0490 97000000 		call	_ZN6Kernel14hw_irq_handlerEv
 1138      E7800000 
 1139              	.LVL60:
  59:src/kernel.cpp ****         return;
 1140              		.loc 1 59 9 is_stmt 1
 1141              	.LBB227:
 1142              	.LBB228:
 135:src/../h/riscv.hpp **** }
 1143              		.loc 2 135 5
 135:src/../h/riscv.hpp **** }
 1144              		.loc 2 135 58 is_stmt 0
 1145 0498 93070020 		li	a5,512
 1146              	#APP
 1147              	# 135 "src/../h/riscv.hpp" 1
 1148              		csrc sip, a5
 1149              	# 0 "" 2
 1150              	.LVL61:
GAS LISTING /tmp/ccYnqADt.s 			page 34


 1151              	#NO_APP
 1152              	.LBE228:
 1153              	.LBE227:
  60:src/kernel.cpp ****     }
 1154              		.loc 1 60 9 is_stmt 1
 1155 04a0 6FF0DFCE 		j	.L9
 1156              		.cfi_endproc
 1157              	.LFE74:
 1159              	.Letext0:
 1160              		.file 6 "src/../h/../lib/hw.h"
 1161              		.file 7 "src/../h/memory_allocator.hpp"
 1162              		.file 8 "src/../h/scheduler.hpp"
 1163              		.file 9 "src/../h/list.hpp"
 1164              		.file 10 "src/../h/uart.hpp"
 1165              		.file 11 "src/../h/syscall_c.h"
 1166              		.file 12 "src/../h/__print.hpp"
GAS LISTING /tmp/ccYnqADt.s 			page 35


DEFINED SYMBOLS
                            *ABS*:0000000000000000 kernel.cpp
     /tmp/ccYnqADt.s:9      .text:0000000000000000 _ZN6Kernel10initKernelEv
     /tmp/ccYnqADt.s:13     .text:0000000000000000 .L0 
     /tmp/ccYnqADt.s:14     .text:0000000000000000 .L0 
     /tmp/ccYnqADt.s:15     .text:0000000000000004 .L0 
     /tmp/ccYnqADt.s:18     .text:000000000000000c .L0 
     /tmp/ccYnqADt.s:19     .text:000000000000000c .L0 
     /tmp/ccYnqADt.s:21     .text:0000000000000010 .L0 
     /tmp/ccYnqADt.s:23     .text:0000000000000010 .L0 
     /tmp/ccYnqADt.s:24     .text:0000000000000010 .L0 
     /tmp/ccYnqADt.s:27     .text:0000000000000018 .L0 
     /tmp/ccYnqADt.s:28     .text:0000000000000018 .L0 
     /tmp/ccYnqADt.s:34     .text:0000000000000020 .L0 
  src/../h/riscv.hpp:109    .text:0000000000000020 .L0 
     /tmp/ccYnqADt.s:44     .text:0000000000000024 .L0 
     /tmp/ccYnqADt.s:45     .text:0000000000000024 .L0 
     /tmp/ccYnqADt.s:48     .text:000000000000002c .L0 
     /tmp/ccYnqADt.s:49     .text:0000000000000030 .L0 
     /tmp/ccYnqADt.s:51     .text:0000000000000034 .L0 
     /tmp/ccYnqADt.s:52     .text:0000000000000034 .L0 
     /tmp/ccYnqADt.s:54     .text:0000000000000038 .L0 
     /tmp/ccYnqADt.s:56     .text:000000000000003c .L0 
     /tmp/ccYnqADt.s:62     .text:000000000000003c _ZN6Kernel12uart_handlerEv
     /tmp/ccYnqADt.s:65     .text:000000000000003c .L0 
     /tmp/ccYnqADt.s:66     .text:000000000000003c .L0 
     /tmp/ccYnqADt.s:67     .text:0000000000000040 .L0 
     /tmp/ccYnqADt.s:71     .text:000000000000004c .L0 
     /tmp/ccYnqADt.s:72     .text:000000000000004c .L0 
     /tmp/ccYnqADt.s:73     .text:000000000000004c .L0 
     /tmp/ccYnqADt.s:75     .text:0000000000000050 .L0 
     /tmp/ccYnqADt.s:77     .text:0000000000000050 .L0 
     /tmp/ccYnqADt.s:78     .text:0000000000000050 .L0 
     /tmp/ccYnqADt.s:83     .text:000000000000005c .L0 
     /tmp/ccYnqADt.s:88     .text:0000000000000064 .L0 
     /tmp/ccYnqADt.s:89     .text:0000000000000064 .L0 
     /tmp/ccYnqADt.s:93     .text:0000000000000070 .L0 
     /tmp/ccYnqADt.s:94     .text:0000000000000074 .L0 
     /tmp/ccYnqADt.s:95     .text:0000000000000074 .L0 
     /tmp/ccYnqADt.s:97     .text:0000000000000078 .L0 
     /tmp/ccYnqADt.s:98     .text:0000000000000078 .L0 
     /tmp/ccYnqADt.s:100    .text:000000000000007c .L0 
     /tmp/ccYnqADt.s:102    .text:0000000000000080 .L0 
     /tmp/ccYnqADt.s:105    .text:0000000000000084 .L0 
     /tmp/ccYnqADt.s:107    .text:0000000000000084 .L0 
     /tmp/ccYnqADt.s:108    .text:0000000000000084 .L0 
     /tmp/ccYnqADt.s:109    .text:0000000000000084 .L0 
     /tmp/ccYnqADt.s:112    .text:000000000000008c .L0 
     /tmp/ccYnqADt.s:115    .text:0000000000000094 .L0 
     /tmp/ccYnqADt.s:116    .text:0000000000000094 .L0 
     /tmp/ccYnqADt.s:119    .text:00000000000000a0 .L0 
     /tmp/ccYnqADt.s:125    .text:00000000000000a0 _ZN6Kernel14hw_irq_handlerEv
     /tmp/ccYnqADt.s:128    .text:00000000000000a0 .L0 
     /tmp/ccYnqADt.s:129    .text:00000000000000a0 .L0 
     /tmp/ccYnqADt.s:130    .text:00000000000000a4 .L0 
     /tmp/ccYnqADt.s:133    .text:00000000000000ac .L0 
     /tmp/ccYnqADt.s:134    .text:00000000000000ac .L0 
GAS LISTING /tmp/ccYnqADt.s 			page 36


     /tmp/ccYnqADt.s:136    .text:00000000000000b0 .L0 
     /tmp/ccYnqADt.s:138    .text:00000000000000b0 .L0 
     /tmp/ccYnqADt.s:139    .text:00000000000000b0 .L0 
     /tmp/ccYnqADt.s:142    .text:00000000000000b8 .L0 
     /tmp/ccYnqADt.s:143    .text:00000000000000bc .L0 
     /tmp/ccYnqADt.s:145    .text:00000000000000c0 .L0 
     /tmp/ccYnqADt.s:146    .text:00000000000000c0 .L0 
     /tmp/ccYnqADt.s:148    .text:00000000000000c4 .L0 
     /tmp/ccYnqADt.s:150    .text:00000000000000c8 .L0 
     /tmp/ccYnqADt.s:170    .text:00000000000000c8 _ZN6Kernel21supervisorTrapHandlerEv
     /tmp/ccYnqADt.s:173    .text:00000000000000c8 .L0 
     /tmp/ccYnqADt.s:174    .text:00000000000000c8 .L0 
     /tmp/ccYnqADt.s:175    .text:00000000000000cc .L0 
     /tmp/ccYnqADt.s:181    .text:00000000000000e0 .L0 
     /tmp/ccYnqADt.s:182    .text:00000000000000e0 .L0 
     /tmp/ccYnqADt.s:183    .text:00000000000000e0 .L0 
     /tmp/ccYnqADt.s:184    .text:00000000000000e0 .L0 
     /tmp/ccYnqADt.s:185    .text:00000000000000e0 .L0 
     /tmp/ccYnqADt.s:187    .text:00000000000000e4 .L0 
     /tmp/ccYnqADt.s:191    .text:00000000000000e4 .L0 
     /tmp/ccYnqADt.s:192    .text:00000000000000e4 .L0 
     /tmp/ccYnqADt.s:193    .text:00000000000000e4 .L0 
  src/../h/riscv.hpp:84     .text:00000000000000e4 .L0 
     /tmp/ccYnqADt.s:201    .text:00000000000000ec .L0 
     /tmp/ccYnqADt.s:202    .text:00000000000000ec .L0 
     /tmp/ccYnqADt.s:208    .text:00000000000000f0 .L0 
     /tmp/ccYnqADt.s:209    .text:00000000000000f0 .L0 
     /tmp/ccYnqADt.s:211    .text:00000000000000f4 .L0 
     /tmp/ccYnqADt.s:216    .text:00000000000000fc .L0 
     /tmp/ccYnqADt.s:222    .text:000000000000010c .L0 
     /tmp/ccYnqADt.s:229    .text:000000000000011c .L0 
     /tmp/ccYnqADt.s:230    .text:000000000000011c .L0 
     /tmp/ccYnqADt.s:231    .text:000000000000011c .L0 
  src/../h/riscv.hpp:94     .text:000000000000011c .L0 
     /tmp/ccYnqADt.s:239    .text:0000000000000124 .L0 
     /tmp/ccYnqADt.s:240    .text:0000000000000124 .L0 
     /tmp/ccYnqADt.s:245    .text:0000000000000128 .L0 
     /tmp/ccYnqADt.s:246    .text:0000000000000128 .L0 
     /tmp/ccYnqADt.s:250    .text:0000000000000138 .L0 
     /tmp/ccYnqADt.s:251    .text:0000000000000138 .L0 
     /tmp/ccYnqADt.s:255    .text:0000000000000148 .L0 
     /tmp/ccYnqADt.s:256    .text:0000000000000148 .L0 
     /tmp/ccYnqADt.s:260    .text:0000000000000154 .L0 
     /tmp/ccYnqADt.s:261    .text:0000000000000154 .L0 
     /tmp/ccYnqADt.s:265    .text:0000000000000160 .L0 
     /tmp/ccYnqADt.s:266    .text:0000000000000160 .L0 
     /tmp/ccYnqADt.s:270    .text:0000000000000170 .L0 
     /tmp/ccYnqADt.s:271    .text:0000000000000170 .L0 
     /tmp/ccYnqADt.s:275    .text:000000000000017c .L0 
     /tmp/ccYnqADt.s:276    .text:000000000000017c .L0 
     /tmp/ccYnqADt.s:282    .text:0000000000000188 .L0 
     /tmp/ccYnqADt.s:283    .text:0000000000000188 .L0 
  src/../h/riscv.hpp:99     .text:0000000000000188 .L0 
     /tmp/ccYnqADt.s:294    .text:000000000000018c .L0 
     /tmp/ccYnqADt.s:295    .text:0000000000000190 .L0 
     /tmp/ccYnqADt.s:296    .text:0000000000000190 .L0 
     /tmp/ccYnqADt.s:298    .text:0000000000000194 .L0 
GAS LISTING /tmp/ccYnqADt.s 			page 37


     /tmp/ccYnqADt.s:299    .text:0000000000000194 .L0 
     /tmp/ccYnqADt.s:301    .text:0000000000000198 .L0 
     /tmp/ccYnqADt.s:303    .text:000000000000019c .L0 
     /tmp/ccYnqADt.s:305    .text:00000000000001a0 .L0 
     /tmp/ccYnqADt.s:307    .text:00000000000001a4 .L0 
     /tmp/ccYnqADt.s:311    .text:00000000000001a8 .L0 
     /tmp/ccYnqADt.s:317    .text:00000000000001a8 .L0 
     /tmp/ccYnqADt.s:318    .text:00000000000001a8 .L0 
     /tmp/ccYnqADt.s:319    .text:00000000000001a8 .L0 
  src/../h/riscv.hpp:94     .text:00000000000001a8 .L0 
     /tmp/ccYnqADt.s:327    .text:00000000000001b0 .L0 
     /tmp/ccYnqADt.s:328    .text:00000000000001b0 .L0 
     /tmp/ccYnqADt.s:333    .text:00000000000001b4 .L0 
     /tmp/ccYnqADt.s:338    .text:00000000000001b8 .L0 
     /tmp/ccYnqADt.s:339    .text:00000000000001b8 .L0 
     /tmp/ccYnqADt.s:340    .text:00000000000001b8 .L0 
  src/../h/riscv.hpp:122    .text:00000000000001b8 .L0 
     /tmp/ccYnqADt.s:348    .text:00000000000001c0 .L0 
     /tmp/ccYnqADt.s:349    .text:00000000000001c0 .L0 
     /tmp/ccYnqADt.s:357    .text:00000000000001c4 .L0 
     /tmp/ccYnqADt.s:358    .text:00000000000001c4 .L0 
     /tmp/ccYnqADt.s:359    .text:00000000000001c4 .L0 
 src/../h/kernel.hpp:56     .text:00000000000001c4 .L0 
     /tmp/ccYnqADt.s:367    .text:00000000000001cc .L0 
     /tmp/ccYnqADt.s:368    .text:00000000000001cc .L0 
     /tmp/ccYnqADt.s:452    .text:00000000000001f4 .L0 
     /tmp/ccYnqADt.s:455    .text:00000000000001f4 .L0 
     /tmp/ccYnqADt.s:456    .text:00000000000001f4 .L0 
     /tmp/ccYnqADt.s:457    .text:00000000000001f4 .L0 
 src/../h/kernel.hpp:109    .text:00000000000001f4 .L0 
     /tmp/ccYnqADt.s:465    .text:00000000000001fc .L0 
     /tmp/ccYnqADt.s:466    .text:00000000000001fc .L0 
     /tmp/ccYnqADt.s:475    .text:0000000000000208 .L0 
      src/kernel.cpp:32     .text:0000000000000208 .L0 
     /tmp/ccYnqADt.s:485    .text:000000000000020c .L0 
     /tmp/ccYnqADt.s:486    .text:000000000000020c .L0 
  src/../h/riscv.hpp:127    .text:000000000000020c .L0 
     /tmp/ccYnqADt.s:498    .text:0000000000000210 .L0 
     /tmp/ccYnqADt.s:499    .text:0000000000000210 .L0 
  src/../h/riscv.hpp:99     .text:0000000000000210 .L0 
     /tmp/ccYnqADt.s:511    .text:0000000000000214 .L0 
     /tmp/ccYnqADt.s:512    .text:0000000000000214 .L0 
     /tmp/ccYnqADt.s:513    .text:0000000000000214 .L0 
     /tmp/ccYnqADt.s:523    .text:000000000000021c .L0 
     /tmp/ccYnqADt.s:528    .text:0000000000000220 .L0 
     /tmp/ccYnqADt.s:531    .text:0000000000000220 .L0 
     /tmp/ccYnqADt.s:532    .text:0000000000000220 .L0 
     /tmp/ccYnqADt.s:533    .text:0000000000000220 .L0 
 src/../h/kernel.hpp:116    .text:0000000000000220 .L0 
     /tmp/ccYnqADt.s:541    .text:0000000000000228 .L0 
     /tmp/ccYnqADt.s:542    .text:0000000000000228 .L0 
     /tmp/ccYnqADt.s:546    .text:0000000000000234 .L0 
     /tmp/ccYnqADt.s:551    .text:0000000000000238 .L0 
     /tmp/ccYnqADt.s:554    .text:0000000000000238 .L0 
     /tmp/ccYnqADt.s:555    .text:0000000000000238 .L0 
     /tmp/ccYnqADt.s:556    .text:0000000000000238 .L0 
 src/../h/kernel.hpp:123    .text:0000000000000238 .L0 
GAS LISTING /tmp/ccYnqADt.s 			page 38


     /tmp/ccYnqADt.s:564    .text:0000000000000240 .L0 
 src/../h/kernel.hpp:124    .text:0000000000000240 .L0 
     /tmp/ccYnqADt.s:572    .text:0000000000000248 .L0 
 src/../h/kernel.hpp:125    .text:0000000000000248 .L0 
     /tmp/ccYnqADt.s:580    .text:0000000000000250 .L0 
     /tmp/ccYnqADt.s:581    .text:0000000000000250 .L0 
     /tmp/ccYnqADt.s:584    .text:0000000000000258 .L0 
     /tmp/ccYnqADt.s:586    .text:000000000000025c .L0 
     /tmp/ccYnqADt.s:589    .text:0000000000000264 .L0 
     /tmp/ccYnqADt.s:591    .text:0000000000000268 .L0 
 src/../h/kernel.hpp:129    .text:0000000000000268 .L0 
     /tmp/ccYnqADt.s:597    .text:000000000000026c .L0 
     /tmp/ccYnqADt.s:599    .text:000000000000026c .L0 
     /tmp/ccYnqADt.s:602    .text:0000000000000274 .L0 
     /tmp/ccYnqADt.s:604    .text:0000000000000278 .L0 
 src/../h/kernel.hpp:130    .text:0000000000000278 .L0 
     /tmp/ccYnqADt.s:611    .text:000000000000027c .L0 
     /tmp/ccYnqADt.s:616    .text:0000000000000280 .L0 
     /tmp/ccYnqADt.s:619    .text:0000000000000280 .L0 
     /tmp/ccYnqADt.s:620    .text:0000000000000280 .L0 
     /tmp/ccYnqADt.s:621    .text:0000000000000280 .L0 
     /tmp/ccYnqADt.s:628    .text:000000000000028c .L0 
     /tmp/ccYnqADt.s:629    .text:000000000000028c .L0 
     /tmp/ccYnqADt.s:635    .text:0000000000000294 .L0 
 src/../h/kernel.hpp:136    .text:0000000000000294 .L0 
     /tmp/ccYnqADt.s:641    .text:0000000000000298 .L0 
     /tmp/ccYnqADt.s:643    .text:0000000000000298 .L0 
     /tmp/ccYnqADt.s:646    .text:00000000000002a0 .L0 
     /tmp/ccYnqADt.s:651    .text:00000000000002a4 .L0 
     /tmp/ccYnqADt.s:654    .text:00000000000002a4 .L0 
     /tmp/ccYnqADt.s:655    .text:00000000000002a4 .L0 
     /tmp/ccYnqADt.s:656    .text:00000000000002a4 .L0 
     /tmp/ccYnqADt.s:659    .text:00000000000002ac .L0 
     /tmp/ccYnqADt.s:664    .text:00000000000002b0 .L0 
     /tmp/ccYnqADt.s:667    .text:00000000000002b0 .L0 
     /tmp/ccYnqADt.s:668    .text:00000000000002b0 .L0 
     /tmp/ccYnqADt.s:669    .text:00000000000002b0 .L0 
 src/../h/kernel.hpp:150    .text:00000000000002b0 .L0 
     /tmp/ccYnqADt.s:677    .text:00000000000002b8 .L0 
 src/../h/kernel.hpp:151    .text:00000000000002b8 .L0 
     /tmp/ccYnqADt.s:685    .text:00000000000002c0 .L0 
 src/../h/kernel.hpp:152    .text:00000000000002c0 .L0 
     /tmp/ccYnqADt.s:693    .text:00000000000002c8 .L0 
     /tmp/ccYnqADt.s:694    .text:00000000000002c8 .L0 
     /tmp/ccYnqADt.s:697    .text:00000000000002d0 .L0 
     /tmp/ccYnqADt.s:699    .text:00000000000002d4 .L0 
     /tmp/ccYnqADt.s:702    .text:00000000000002dc .L0 
     /tmp/ccYnqADt.s:704    .text:00000000000002e0 .L0 
 src/../h/kernel.hpp:156    .text:00000000000002e0 .L0 
     /tmp/ccYnqADt.s:710    .text:00000000000002e4 .L0 
     /tmp/ccYnqADt.s:712    .text:00000000000002e4 .L0 
     /tmp/ccYnqADt.s:715    .text:00000000000002ec .L0 
     /tmp/ccYnqADt.s:717    .text:00000000000002f0 .L0 
 src/../h/kernel.hpp:157    .text:00000000000002f0 .L0 
     /tmp/ccYnqADt.s:724    .text:00000000000002f4 .L0 
     /tmp/ccYnqADt.s:729    .text:00000000000002f8 .L0 
     /tmp/ccYnqADt.s:732    .text:00000000000002f8 .L0 
GAS LISTING /tmp/ccYnqADt.s 			page 39


     /tmp/ccYnqADt.s:733    .text:00000000000002f8 .L0 
     /tmp/ccYnqADt.s:734    .text:00000000000002f8 .L0 
 src/../h/kernel.hpp:163    .text:00000000000002f8 .L0 
     /tmp/ccYnqADt.s:742    .text:0000000000000300 .L0 
 src/../h/kernel.hpp:164    .text:0000000000000300 .L0 
     /tmp/ccYnqADt.s:750    .text:0000000000000308 .L0 
     /tmp/ccYnqADt.s:751    .text:0000000000000308 .L0 
     /tmp/ccYnqADt.s:753    .text:000000000000030c .L0 
     /tmp/ccYnqADt.s:755    .text:0000000000000310 .L0 
     /tmp/ccYnqADt.s:759    .text:000000000000031c .L0 
     /tmp/ccYnqADt.s:761    .text:0000000000000320 .L0 
 src/../h/kernel.hpp:168    .text:0000000000000320 .L0 
     /tmp/ccYnqADt.s:767    .text:0000000000000324 .L0 
     /tmp/ccYnqADt.s:769    .text:0000000000000324 .L0 
     /tmp/ccYnqADt.s:772    .text:000000000000032c .L0 
     /tmp/ccYnqADt.s:774    .text:0000000000000330 .L0 
 src/../h/kernel.hpp:169    .text:0000000000000330 .L0 
     /tmp/ccYnqADt.s:781    .text:0000000000000334 .L0 
     /tmp/ccYnqADt.s:786    .text:0000000000000338 .L0 
     /tmp/ccYnqADt.s:789    .text:0000000000000338 .L0 
     /tmp/ccYnqADt.s:790    .text:0000000000000338 .L0 
     /tmp/ccYnqADt.s:791    .text:0000000000000338 .L0 
 src/../h/kernel.hpp:175    .text:0000000000000338 .L0 
     /tmp/ccYnqADt.s:799    .text:0000000000000340 .L0 
     /tmp/ccYnqADt.s:800    .text:0000000000000340 .L0 
     /tmp/ccYnqADt.s:803    .text:0000000000000348 .L0 
     /tmp/ccYnqADt.s:805    .text:000000000000034c .L0 
     /tmp/ccYnqADt.s:812    .text:0000000000000358 .L0 
     /tmp/ccYnqADt.s:813    .text:0000000000000358 .L0 
     /tmp/ccYnqADt.s:820    .text:0000000000000364 .L0 
 src/../h/kernel.hpp:178    .text:0000000000000364 .L0 
     /tmp/ccYnqADt.s:827    .text:0000000000000368 .L0 
     /tmp/ccYnqADt.s:832    .text:000000000000036c .L0 
     /tmp/ccYnqADt.s:835    .text:000000000000036c .L0 
     /tmp/ccYnqADt.s:836    .text:000000000000036c .L0 
     /tmp/ccYnqADt.s:837    .text:000000000000036c .L0 
 src/../h/kernel.hpp:184    .text:000000000000036c .L0 
     /tmp/ccYnqADt.s:845    .text:0000000000000374 .L0 
     /tmp/ccYnqADt.s:846    .text:0000000000000374 .L0 
     /tmp/ccYnqADt.s:850    .text:0000000000000380 .L0 
     /tmp/ccYnqADt.s:855    .text:0000000000000384 .L0 
     /tmp/ccYnqADt.s:858    .text:0000000000000384 .L0 
     /tmp/ccYnqADt.s:859    .text:0000000000000384 .L0 
     /tmp/ccYnqADt.s:860    .text:0000000000000384 .L0 
 src/../h/kernel.hpp:193    .text:0000000000000384 .L0 
     /tmp/ccYnqADt.s:868    .text:000000000000038c .L0 
     /tmp/ccYnqADt.s:869    .text:000000000000038c .L0 
     /tmp/ccYnqADt.s:873    .text:0000000000000398 .L0 
     /tmp/ccYnqADt.s:878    .text:000000000000039c .L0 
     /tmp/ccYnqADt.s:881    .text:000000000000039c .L0 
     /tmp/ccYnqADt.s:882    .text:000000000000039c .L0 
     /tmp/ccYnqADt.s:883    .text:000000000000039c .L0 
 src/../h/kernel.hpp:200    .text:000000000000039c .L0 
     /tmp/ccYnqADt.s:891    .text:00000000000003a4 .L0 
     /tmp/ccYnqADt.s:892    .text:00000000000003a4 .L0 
     /tmp/ccYnqADt.s:896    .text:00000000000003b0 .L0 
     /tmp/ccYnqADt.s:901    .text:00000000000003b4 .L0 
GAS LISTING /tmp/ccYnqADt.s 			page 40


     /tmp/ccYnqADt.s:904    .text:00000000000003b4 .L0 
     /tmp/ccYnqADt.s:905    .text:00000000000003b4 .L0 
     /tmp/ccYnqADt.s:906    .text:00000000000003b4 .L0 
     /tmp/ccYnqADt.s:907    .text:00000000000003b4 .L0 
     /tmp/ccYnqADt.s:910    .text:00000000000003bc .L0 
     /tmp/ccYnqADt.s:912    .text:00000000000003c0 .L0 
     /tmp/ccYnqADt.s:913    .text:00000000000003c0 .L0 
 src/../h/kernel.hpp:210    .text:00000000000003c4 .L0 
     /tmp/ccYnqADt.s:921    .text:00000000000003c8 .L0 
     /tmp/ccYnqADt.s:926    .text:00000000000003cc .L0 
     /tmp/ccYnqADt.s:929    .text:00000000000003cc .L0 
     /tmp/ccYnqADt.s:930    .text:00000000000003cc .L0 
     /tmp/ccYnqADt.s:931    .text:00000000000003cc .L0 
 src/../h/kernel.hpp:216    .text:00000000000003cc .L0 
     /tmp/ccYnqADt.s:939    .text:00000000000003d4 .L0 
     /tmp/ccYnqADt.s:940    .text:00000000000003d4 .L0 
     /tmp/ccYnqADt.s:945    .text:00000000000003e4 .L0 
     /tmp/ccYnqADt.s:950    .text:00000000000003e8 .L0 
     /tmp/ccYnqADt.s:951    .text:00000000000003e8 .L0 
 src/../h/kernel.hpp:100    .text:00000000000003e8 .L0 
     /tmp/ccYnqADt.s:957    .text:00000000000003ec .L0 
     /tmp/ccYnqADt.s:959    .text:00000000000003ec .L0 
     /tmp/ccYnqADt.s:963    .text:00000000000003fc .L0 
     /tmp/ccYnqADt.s:973    .text:0000000000000400 .L0 
     /tmp/ccYnqADt.s:974    .text:0000000000000400 .L0 
     /tmp/ccYnqADt.s:977    .text:000000000000040c .L0 
     /tmp/ccYnqADt.s:979    .text:0000000000000410 .L0 
     /tmp/ccYnqADt.s:980    .text:0000000000000410 .L0 
     /tmp/ccYnqADt.s:985    .text:0000000000000418 .L0 
     /tmp/ccYnqADt.s:986    .text:0000000000000418 .L0 
     /tmp/ccYnqADt.s:987    .text:0000000000000418 .L0 
     /tmp/ccYnqADt.s:996    .text:000000000000042c .L0 
     /tmp/ccYnqADt.s:1000   .text:000000000000042c .L0 
     /tmp/ccYnqADt.s:1001   .text:000000000000042c .L0 
     /tmp/ccYnqADt.s:1007   .text:0000000000000438 .L0 
     /tmp/ccYnqADt.s:1008   .text:0000000000000438 .L0 
     /tmp/ccYnqADt.s:1013   .text:000000000000043c .L0 
     /tmp/ccYnqADt.s:1020   .text:0000000000000440 .L0 
     /tmp/ccYnqADt.s:1021   .text:0000000000000440 .L0 
     /tmp/ccYnqADt.s:1022   .text:0000000000000440 .L0 
     /tmp/ccYnqADt.s:1032   .text:0000000000000448 .L0 
     /tmp/ccYnqADt.s:1038   .text:000000000000044c .L0 
     /tmp/ccYnqADt.s:1039   .text:000000000000044c .L0 
     /tmp/ccYnqADt.s:1040   .text:000000000000044c .L0 
     /tmp/ccYnqADt.s:1050   .text:0000000000000454 .L0 
     /tmp/ccYnqADt.s:1057   .text:0000000000000458 .L0 
     /tmp/ccYnqADt.s:1058   .text:0000000000000458 .L0 
     /tmp/ccYnqADt.s:1059   .text:0000000000000458 .L0 
  src/../h/riscv.hpp:94     .text:0000000000000458 .L0 
     /tmp/ccYnqADt.s:1067   .text:0000000000000460 .L0 
     /tmp/ccYnqADt.s:1068   .text:0000000000000460 .L0 
     /tmp/ccYnqADt.s:1075   .text:0000000000000464 .L0 
     /tmp/ccYnqADt.s:1076   .text:0000000000000464 .L0 
     /tmp/ccYnqADt.s:1077   .text:0000000000000464 .L0 
  src/../h/riscv.hpp:122    .text:0000000000000464 .L0 
     /tmp/ccYnqADt.s:1085   .text:000000000000046c .L0 
     /tmp/ccYnqADt.s:1086   .text:000000000000046c .L0 
GAS LISTING /tmp/ccYnqADt.s 			page 41


     /tmp/ccYnqADt.s:1093   .text:0000000000000470 .L0 
     /tmp/ccYnqADt.s:1094   .text:0000000000000470 .L0 
     /tmp/ccYnqADt.s:1095   .text:0000000000000470 .L0 
     /tmp/ccYnqADt.s:1100   .text:000000000000047c .L0 
     /tmp/ccYnqADt.s:1101   .text:000000000000047c .L0 
     /tmp/ccYnqADt.s:1106   .text:0000000000000484 .L0 
     /tmp/ccYnqADt.s:1107   .text:0000000000000484 .L0 
  src/../h/riscv.hpp:127    .text:0000000000000484 .L0 
     /tmp/ccYnqADt.s:1119   .text:0000000000000488 .L0 
     /tmp/ccYnqADt.s:1120   .text:0000000000000488 .L0 
  src/../h/riscv.hpp:99     .text:0000000000000488 .L0 
     /tmp/ccYnqADt.s:1127   .text:000000000000048c .L0 
     /tmp/ccYnqADt.s:1137   .text:0000000000000490 .L0 
     /tmp/ccYnqADt.s:1138   .text:0000000000000490 .L0 
     /tmp/ccYnqADt.s:1143   .text:0000000000000498 .L0 
     /tmp/ccYnqADt.s:1144   .text:0000000000000498 .L0 
     /tmp/ccYnqADt.s:1145   .text:0000000000000498 .L0 
     /tmp/ccYnqADt.s:1155   .text:00000000000004a0 .L0 
     /tmp/ccYnqADt.s:1156   .text:00000000000004a4 .L0 
     /tmp/ccYnqADt.s:1167   .text:00000000000004a4 .L0 
     /tmp/ccYnqADt.s:28     .text:0000000000000018 .L0 
     /tmp/ccYnqADt.s:158    .rodata.str1.8:0000000000000020 .LC1
     /tmp/ccYnqADt.s:246    .text:0000000000000128 .L0 
     /tmp/ccYnqADt.s:161    .rodata.str1.8:0000000000000038 .LC2
     /tmp/ccYnqADt.s:251    .text:0000000000000138 .L0 
     /tmp/ccYnqADt.s:164    .rodata.str1.8:0000000000000048 .LC3
     /tmp/ccYnqADt.s:266    .text:0000000000000160 .L0 
     /tmp/ccYnqADt.s:381    .rodata:0000000000000000 .L13
     /tmp/ccYnqADt.s:373    .text:00000000000001dc .L0 
     /tmp/ccYnqADt.s:621    .text:0000000000000280 .L0 
     /tmp/ccYnqADt.s:155    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccYnqADt.s:959    .text:00000000000003ec .L0 
     /tmp/ccYnqADt.s:974    .text:0000000000000400 .L0 
     /tmp/ccYnqADt.s:987    .text:0000000000000418 .L0 
     /tmp/ccYnqADt.s:1001   .text:000000000000042c .L0 
     /tmp/ccYnqADt.s:1095   .text:0000000000000470 .L0 
     /tmp/ccYnqADt.s:104    .text:0000000000000084 .L5
     /tmp/ccYnqADt.s:86     .text:0000000000000064 .L4
     /tmp/ccYnqADt.s:310    .text:00000000000001a8 .L37
     /tmp/ccYnqADt.s:965    .text:0000000000000400 .L38
     /tmp/ccYnqADt.s:1129   .text:0000000000000490 .L39
     /tmp/ccYnqADt.s:946    .text:00000000000003e8 .L11
     /tmp/ccYnqADt.s:290    .text:000000000000018c .L9
     /tmp/ccYnqADt.s:469    .text:0000000000000208 .L26
     /tmp/ccYnqADt.s:816    .text:0000000000000364 .L30
     /tmp/ccYnqADt.s:1034   .text:000000000000044c .L40
     /tmp/ccYnqADt.s:1051   .text:0000000000000458 .L41
     /tmp/ccYnqADt.s:1015   .text:0000000000000440 .L34
     /tmp/ccYnqADt.s:450    .text:00000000000001f4 .L25
     /tmp/ccYnqADt.s:524    .text:0000000000000220 .L24
     /tmp/ccYnqADt.s:547    .text:0000000000000238 .L23
     /tmp/ccYnqADt.s:612    .text:0000000000000280 .L22
     /tmp/ccYnqADt.s:647    .text:00000000000002a4 .L21
     /tmp/ccYnqADt.s:660    .text:00000000000002b0 .L20
     /tmp/ccYnqADt.s:725    .text:00000000000002f8 .L19
     /tmp/ccYnqADt.s:782    .text:0000000000000338 .L18
     /tmp/ccYnqADt.s:828    .text:000000000000036c .L17
GAS LISTING /tmp/ccYnqADt.s 			page 42


     /tmp/ccYnqADt.s:851    .text:0000000000000384 .L16
     /tmp/ccYnqADt.s:874    .text:000000000000039c .L15
     /tmp/ccYnqADt.s:897    .text:00000000000003b4 .L14
     /tmp/ccYnqADt.s:922    .text:00000000000003cc .L12
     /tmp/ccYnqADt.s:4005   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccYnqADt.s:5948   .debug_str:0000000000000efe .LASF288
     /tmp/ccYnqADt.s:5552   .debug_str:0000000000000277 .LASF289
     /tmp/ccYnqADt.s:5904   .debug_str:0000000000000dcc .LASF290
     /tmp/ccYnqADt.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccYnqADt.s:1159   .text:00000000000004a4 .Letext0
     /tmp/ccYnqADt.s:5482   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccYnqADt.s:5668   .debug_str:000000000000061b .LASF0
     /tmp/ccYnqADt.s:5710   .debug_str:000000000000078d .LASF1
     /tmp/ccYnqADt.s:5864   .debug_str:0000000000000c84 .LASF2
     /tmp/ccYnqADt.s:5612   .debug_str:000000000000043c .LASF3
     /tmp/ccYnqADt.s:5486   .debug_str:0000000000000008 .LASF4
     /tmp/ccYnqADt.s:5874   .debug_str:0000000000000cd2 .LASF5
     /tmp/ccYnqADt.s:5680   .debug_str:0000000000000669 .LASF6
     /tmp/ccYnqADt.s:5506   .debug_str:00000000000000cc .LASF7
     /tmp/ccYnqADt.s:5826   .debug_str:0000000000000b96 .LASF8
     /tmp/ccYnqADt.s:5812   .debug_str:0000000000000b13 .LASF9
     /tmp/ccYnqADt.s:5700   .debug_str:000000000000073f .LASF10
     /tmp/ccYnqADt.s:5638   .debug_str:00000000000004de .LASF11
     /tmp/ccYnqADt.s:5648   .debug_str:0000000000000544 .LASF12
     /tmp/ccYnqADt.s:5560   .debug_str:00000000000002c7 .LASF13
     /tmp/ccYnqADt.s:5624   .debug_str:0000000000000495 .LASF14
     /tmp/ccYnqADt.s:5578   .debug_str:0000000000000350 .LASF15
     /tmp/ccYnqADt.s:5558   .debug_str:00000000000002b7 .LASF16
     /tmp/ccYnqADt.s:5920   .debug_str:0000000000000e4c .LASF17
     /tmp/ccYnqADt.s:5606   .debug_str:000000000000040d .LASF18
     /tmp/ccYnqADt.s:5910   .debug_str:0000000000000e0c .LASF19
     /tmp/ccYnqADt.s:5802   .debug_str:0000000000000ab1 .LASF35
     /tmp/ccYnqADt.s:5942   .debug_str:0000000000000ee2 .LASF291
     /tmp/ccYnqADt.s:5708   .debug_str:0000000000000788 .LASF20
     /tmp/ccYnqADt.s:5522   .debug_str:000000000000016a .LASF21
     /tmp/ccYnqADt.s:5562   .debug_str:00000000000002d6 .LASF22
     /tmp/ccYnqADt.s:6076   .debug_str:00000000000013a4 .LASF72
     /tmp/ccYnqADt.s:5646   .debug_str:0000000000000524 .LASF74
     /tmp/ccYnqADt.s:5978   .debug_str:000000000000108f .LASF27
     /tmp/ccYnqADt.s:5686   .debug_str:0000000000000692 .LASF29
     /tmp/ccYnqADt.s:5758   .debug_str:0000000000000937 .LASF23
     /tmp/ccYnqADt.s:5882   .debug_str:0000000000000cfe .LASF25
     /tmp/ccYnqADt.s:5860   .debug_str:0000000000000c71 .LASF24
     /tmp/ccYnqADt.s:5810   .debug_str:0000000000000af3 .LASF26
     /tmp/ccYnqADt.s:6048   .debug_str:00000000000012c0 .LASF108
     /tmp/ccYnqADt.s:5704   .debug_str:000000000000076a .LASF28
     /tmp/ccYnqADt.s:5778   .debug_str:00000000000009e6 .LASF30
     /tmp/ccYnqADt.s:5608   .debug_str:0000000000000423 .LASF31
     /tmp/ccYnqADt.s:6008   .debug_str:000000000000118a .LASF32
     /tmp/ccYnqADt.s:6070   .debug_str:000000000000136f .LASF33
     /tmp/ccYnqADt.s:5526   .debug_str:000000000000018a .LASF34
     /tmp/ccYnqADt.s:5566   .debug_str:00000000000002f4 .LASF160
     /tmp/ccYnqADt.s:5938   .debug_str:0000000000000eab .LASF161
     /tmp/ccYnqADt.s:5980   .debug_str:0000000000001094 .LASF36
     /tmp/ccYnqADt.s:5540   .debug_str:0000000000000212 .LASF37
     /tmp/ccYnqADt.s:6022   .debug_str:00000000000011fb .LASF38
     /tmp/ccYnqADt.s:5844   .debug_str:0000000000000c02 .LASF39
GAS LISTING /tmp/ccYnqADt.s 			page 43


     /tmp/ccYnqADt.s:5658   .debug_str:00000000000005b3 .LASF40
     /tmp/ccYnqADt.s:5766   .debug_str:0000000000000982 .LASF41
     /tmp/ccYnqADt.s:5884   .debug_str:0000000000000d1d .LASF42
     /tmp/ccYnqADt.s:5650   .debug_str:0000000000000552 .LASF43
     /tmp/ccYnqADt.s:5670   .debug_str:0000000000000628 .LASF44
     /tmp/ccYnqADt.s:5772   .debug_str:00000000000009b0 .LASF45
     /tmp/ccYnqADt.s:5632   .debug_str:00000000000004bd .LASF48
     /tmp/ccYnqADt.s:5570   .debug_str:0000000000000312 .LASF50
     /tmp/ccYnqADt.s:5782   .debug_str:0000000000000a0f .LASF46
     /tmp/ccYnqADt.s:5960   .debug_str:0000000000001026 .LASF47
     /tmp/ccYnqADt.s:6010   .debug_str:00000000000011bb .LASF49
     /tmp/ccYnqADt.s:6030   .debug_str:0000000000001221 .LASF51
     /tmp/ccYnqADt.s:5840   .debug_str:0000000000000bee .LASF52
     /tmp/ccYnqADt.s:6054   .debug_str:00000000000012f8 .LASF53
     /tmp/ccYnqADt.s:5574   .debug_str:000000000000033b .LASF54
     /tmp/ccYnqADt.s:5548   .debug_str:0000000000000241 .LASF55
     /tmp/ccYnqADt.s:5586   .debug_str:0000000000000386 .LASF56
     /tmp/ccYnqADt.s:5702   .debug_str:0000000000000752 .LASF57
     /tmp/ccYnqADt.s:5744   .debug_str:0000000000000895 .LASF58
     /tmp/ccYnqADt.s:6032   .debug_str:0000000000001236 .LASF59
     /tmp/ccYnqADt.s:5962   .debug_str:000000000000103f .LASF60
     /tmp/ccYnqADt.s:5880   .debug_str:0000000000000ce4 .LASF61
     /tmp/ccYnqADt.s:5832   .debug_str:0000000000000bb2 .LASF62
     /tmp/ccYnqADt.s:5716   .debug_str:00000000000007bc .LASF63
     /tmp/ccYnqADt.s:5610   .debug_str:000000000000042f .LASF64
     /tmp/ccYnqADt.s:5614   .debug_str:0000000000000442 .LASF65
     /tmp/ccYnqADt.s:5922   .debug_str:0000000000000e58 .LASF66
     /tmp/ccYnqADt.s:5892   .debug_str:0000000000000d6f .LASF67
     /tmp/ccYnqADt.s:5828   .debug_str:0000000000000b9d .LASF68
     /tmp/ccYnqADt.s:5672   .debug_str:0000000000000635 .LASF69
     /tmp/ccYnqADt.s:5484   .debug_str:0000000000000000 .LASF70
     /tmp/ccYnqADt.s:5956   .debug_str:0000000000001007 .LASF71
     /tmp/ccYnqADt.s:5896   .debug_str:0000000000000d8b .LASF117
     /tmp/ccYnqADt.s:5706   .debug_str:0000000000000773 .LASF119
     /tmp/ccYnqADt.s:5928   .debug_str:0000000000000e7c .LASF153
     /tmp/ccYnqADt.s:6060   .debug_str:0000000000001318 .LASF73
     /tmp/ccYnqADt.s:5556   .debug_str:000000000000029b .LASF75
     /tmp/ccYnqADt.s:5796   .debug_str:0000000000000a90 .LASF292
     /tmp/ccYnqADt.s:5764   .debug_str:000000000000096d .LASF76
     /tmp/ccYnqADt.s:5898   .debug_str:0000000000000d94 .LASF77
     /tmp/ccYnqADt.s:5974   .debug_str:0000000000001073 .LASF78
     /tmp/ccYnqADt.s:6074   .debug_str:000000000000137d .LASF79
     /tmp/ccYnqADt.s:5930   .debug_str:0000000000000e84 .LASF82
     /tmp/ccYnqADt.s:5774   .debug_str:00000000000009ca .LASF84
     /tmp/ccYnqADt.s:5532   .debug_str:00000000000001dd .LASF80
     /tmp/ccYnqADt.s:5794   .debug_str:0000000000000a79 .LASF81
     /tmp/ccYnqADt.s:5868   .debug_str:0000000000000c9f .LASF83
     /tmp/ccYnqADt.s:5554   .debug_str:0000000000000286 .LASF85
     /tmp/ccYnqADt.s:5932   .debug_str:0000000000000e8f .LASF86
     /tmp/ccYnqADt.s:5620   .debug_str:0000000000000470 .LASF87
     /tmp/ccYnqADt.s:5718   .debug_str:00000000000007d5 .LASF88
     /tmp/ccYnqADt.s:5994   .debug_str:0000000000001102 .LASF89
     /tmp/ccYnqADt.s:5944   .debug_str:0000000000000eea .LASF293
     /tmp/ccYnqADt.s:5598   .debug_str:00000000000003d0 .LASF90
     /tmp/ccYnqADt.s:5568   .debug_str:00000000000002ff .LASF91
     /tmp/ccYnqADt.s:5600   .debug_str:00000000000003d9 .LASF92
     /tmp/ccYnqADt.s:5870   .debug_str:0000000000000ca9 .LASF93
GAS LISTING /tmp/ccYnqADt.s 			page 44


     /tmp/ccYnqADt.s:5732   .debug_str:000000000000082d .LASF94
     /tmp/ccYnqADt.s:5654   .debug_str:0000000000000588 .LASF95
     /tmp/ccYnqADt.s:5790   .debug_str:0000000000000a5b .LASF96
     /tmp/ccYnqADt.s:5988   .debug_str:00000000000010ad .LASF97
     /tmp/ccYnqADt.s:5876   .debug_str:0000000000000cd9 .LASF98
     /tmp/ccYnqADt.s:5500   .debug_str:000000000000009a .LASF99
     /tmp/ccYnqADt.s:6066   .debug_str:0000000000001359 .LASF100
     /tmp/ccYnqADt.s:5644   .debug_str:0000000000000518 .LASF101
     /tmp/ccYnqADt.s:5544   .debug_str:0000000000000225 .LASF102
     /tmp/ccYnqADt.s:5634   .debug_str:00000000000004c8 .LASF103
     /tmp/ccYnqADt.s:5492   .debug_str:000000000000002b .LASF104
     /tmp/ccYnqADt.s:5742   .debug_str:0000000000000888 .LASF105
     /tmp/ccYnqADt.s:5908   .debug_str:0000000000000df9 .LASF106
     /tmp/ccYnqADt.s:5866   .debug_str:0000000000000c92 .LASF107
     /tmp/ccYnqADt.s:5488   .debug_str:000000000000000f .LASF138
     /tmp/ccYnqADt.s:5888   .debug_str:0000000000000d3a .LASF109
     /tmp/ccYnqADt.s:5490   .debug_str:0000000000000026 .LASF110
     /tmp/ccYnqADt.s:6058   .debug_str:0000000000001313 .LASF111
     /tmp/ccYnqADt.s:5902   .debug_str:0000000000000dc6 .LASF112
     /tmp/ccYnqADt.s:5926   .debug_str:0000000000000e73 .LASF113
     /tmp/ccYnqADt.s:5792   .debug_str:0000000000000a71 .LASF114
     /tmp/ccYnqADt.s:5954   .debug_str:0000000000000ffd .LASF115
     /tmp/ccYnqADt.s:5976   .debug_str:0000000000001087 .LASF116
     /tmp/ccYnqADt.s:5588   .debug_str:0000000000000391 .LASF118
     /tmp/ccYnqADt.s:5498   .debug_str:0000000000000072 .LASF120
     /tmp/ccYnqADt.s:5542   .debug_str:0000000000000217 .LASF121
     /tmp/ccYnqADt.s:5720   .debug_str:00000000000007e2 .LASF123
     /tmp/ccYnqADt.s:5622   .debug_str:0000000000000486 .LASF122
     /tmp/ccYnqADt.s:6062   .debug_str:0000000000001322 .LASF124
     /tmp/ccYnqADt.s:5846   .debug_str:0000000000000c07 .LASF125
     /tmp/ccYnqADt.s:5906   .debug_str:0000000000000def .LASF126
     /tmp/ccYnqADt.s:5740   .debug_str:0000000000000874 .LASF127
     /tmp/ccYnqADt.s:5722   .debug_str:00000000000007fb .LASF128
     /tmp/ccYnqADt.s:5830   .debug_str:0000000000000ba6 .LASF129
     /tmp/ccYnqADt.s:5804   .debug_str:0000000000000ac1 .LASF130
     /tmp/ccYnqADt.s:5748   .debug_str:00000000000008b9 .LASF131
     /tmp/ccYnqADt.s:5536   .debug_str:00000000000001f6 .LASF132
     /tmp/ccYnqADt.s:5712   .debug_str:00000000000007a0 .LASF133
     /tmp/ccYnqADt.s:5640   .debug_str:00000000000004ee .LASF134
     /tmp/ccYnqADt.s:5946   .debug_str:0000000000000ef2 .LASF135
     /tmp/ccYnqADt.s:5698   .debug_str:0000000000000732 .LASF136
     /tmp/ccYnqADt.s:5616   .debug_str:000000000000045c .LASF137
     /tmp/ccYnqADt.s:5546   .debug_str:0000000000000235 .LASF139
     /tmp/ccYnqADt.s:6056   .debug_str:000000000000130e .LASF140
     /tmp/ccYnqADt.s:5834   .debug_str:0000000000000bbe .LASF141
     /tmp/ccYnqADt.s:5636   .debug_str:00000000000004d4 .LASF142
     /tmp/ccYnqADt.s:5576   .debug_str:0000000000000345 .LASF143
     /tmp/ccYnqADt.s:5958   .debug_str:000000000000101b .LASF144
     /tmp/ccYnqADt.s:5924   .debug_str:0000000000000e5f .LASF294
     /tmp/ccYnqADt.s:5662   .debug_str:00000000000005db .LASF145
     /tmp/ccYnqADt.s:6080   .debug_str:00000000000013b5 .LASF146
     /tmp/ccYnqADt.s:6004   .debug_str:000000000000115a .LASF147
     /tmp/ccYnqADt.s:5508   .debug_str:00000000000000d3 .LASF148
     /tmp/ccYnqADt.s:5990   .debug_str:00000000000010ce .LASF149
     /tmp/ccYnqADt.s:5964   .debug_str:000000000000104c .LASF150
     /tmp/ccYnqADt.s:5752   .debug_str:00000000000008e1 .LASF151
     /tmp/ccYnqADt.s:5814   .debug_str:0000000000000b26 .LASF152
GAS LISTING /tmp/ccYnqADt.s 			page 45


     /tmp/ccYnqADt.s:5592   .debug_str:00000000000003a9 .LASF154
     /tmp/ccYnqADt.s:5968   .debug_str:000000000000105d .LASF155
     /tmp/ccYnqADt.s:5496   .debug_str:0000000000000053 .LASF156
     /tmp/ccYnqADt.s:5514   .debug_str:0000000000000118 .LASF157
     /tmp/ccYnqADt.s:5494   .debug_str:000000000000003b .LASF158
     /tmp/ccYnqADt.s:5564   .debug_str:00000000000002db .LASF159
     /tmp/ccYnqADt.s:5746   .debug_str:00000000000008a0 .LASF162
     /tmp/ccYnqADt.s:5916   .debug_str:0000000000000e3c .LASF163
     /tmp/ccYnqADt.s:5776   .debug_str:00000000000009e1 .LASF164
     /tmp/ccYnqADt.s:5768   .debug_str:000000000000099a .LASF165
     /tmp/ccYnqADt.s:5912   .debug_str:0000000000000e22 .LASF166
     /tmp/ccYnqADt.s:5604   .debug_str:00000000000003f6 .LASF167
     /tmp/ccYnqADt.s:5590   .debug_str:000000000000039f .LASF295
     /tmp/ccYnqADt.s:5850   .debug_str:0000000000000c29 .LASF296
     /tmp/ccYnqADt.s:5986   .debug_str:00000000000010a4 .LASF168
     /tmp/ccYnqADt.s:5660   .debug_str:00000000000005be .LASF169
     /tmp/ccYnqADt.s:5714   .debug_str:00000000000007b4 .LASF170
     /tmp/ccYnqADt.s:5760   .debug_str:000000000000093f .LASF171
     /tmp/ccYnqADt.s:5872   .debug_str:0000000000000cc8 .LASF172
     /tmp/ccYnqADt.s:5642   .debug_str:00000000000004fa .LASF173
     /tmp/ccYnqADt.s:5858   .debug_str:0000000000000c67 .LASF174
     /tmp/ccYnqADt.s:5652   .debug_str:000000000000056d .LASF175
     /tmp/ccYnqADt.s:6018   .debug_str:00000000000011ea .LASF176
     /tmp/ccYnqADt.s:6034   .debug_str:000000000000124e .LASF177
     /tmp/ccYnqADt.s:5800   .debug_str:0000000000000aa8 .LASF178
     /tmp/ccYnqADt.s:5504   .debug_str:00000000000000b2 .LASF179
     /tmp/ccYnqADt.s:6078   .debug_str:00000000000013ad .LASF180
     /tmp/ccYnqADt.s:5820   .debug_str:0000000000000b50 .LASF181
     /tmp/ccYnqADt.s:5936   .debug_str:0000000000000e9f .LASF182
     /tmp/ccYnqADt.s:5838   .debug_str:0000000000000bd0 .LASF183
     /tmp/ccYnqADt.s:5524   .debug_str:000000000000016f .LASF297
     /tmp/ccYnqADt.s:5602   .debug_str:00000000000003ed .LASF184
     /tmp/ccYnqADt.s:6072   .debug_str:0000000000001378 .LASF185
     /tmp/ccYnqADt.s:5678   .debug_str:0000000000000663 .LASF186
     /tmp/ccYnqADt.s:5894   .debug_str:0000000000000d82 .LASF187
     /tmp/ccYnqADt.s:5808   .debug_str:0000000000000adf .LASF188
     /tmp/ccYnqADt.s:5842   .debug_str:0000000000000bf8 .LASF189
     /tmp/ccYnqADt.s:5854   .debug_str:0000000000000c46 .LASF190
     /tmp/ccYnqADt.s:5878   .debug_str:0000000000000cde .LASF191
     /tmp/ccYnqADt.s:6050   .debug_str:00000000000012c9 .LASF192
     /tmp/ccYnqADt.s:5684   .debug_str:000000000000068c .LASF193
     /tmp/ccYnqADt.s:5998   .debug_str:0000000000001125 .LASF194
     /tmp/ccYnqADt.s:5900   .debug_str:0000000000000dbc .LASF195
     /tmp/ccYnqADt.s:5816   .debug_str:0000000000000b30 .LASF196
     /tmp/ccYnqADt.s:5852   .debug_str:0000000000000c40 .LASF197
     /tmp/ccYnqADt.s:5676   .debug_str:0000000000000652 .LASF198
     /tmp/ccYnqADt.s:5966   .debug_str:0000000000001056 .LASF199
     /tmp/ccYnqADt.s:5784   .debug_str:0000000000000a1b .LASF200
     /tmp/ccYnqADt.s:6026   .debug_str:000000000000120d .LASF201
     /tmp/ccYnqADt.s:5572   .debug_str:000000000000032a .LASF202
     /tmp/ccYnqADt.s:5822   .debug_str:0000000000000b69 .LASF203
     /tmp/ccYnqADt.s:6042   .debug_str:00000000000012a0 .LASF204
     /tmp/ccYnqADt.s:6068   .debug_str:0000000000001366 .LASF205
     /tmp/ccYnqADt.s:5738   .debug_str:0000000000000860 .LASF206
     /tmp/ccYnqADt.s:5618   .debug_str:0000000000000469 .LASF207
     /tmp/ccYnqADt.s:5538   .debug_str:0000000000000200 .LASF208
     /tmp/ccYnqADt.s:5780   .debug_str:0000000000000a06 .LASF209
GAS LISTING /tmp/ccYnqADt.s 			page 46


     /tmp/ccYnqADt.s:5692   .debug_str:00000000000006cf .LASF210
     /tmp/ccYnqADt.s:5502   .debug_str:00000000000000a6 .LASF298
     /tmp/ccYnqADt.s:5972   .debug_str:000000000000106c .LASF211
     /tmp/ccYnqADt.s:5940   .debug_str:0000000000000eda .LASF212
     /tmp/ccYnqADt.s:6038   .debug_str:0000000000001278 .LASF213
     /tmp/ccYnqADt.s:5996   .debug_str:000000000000111b .LASF214
     /tmp/ccYnqADt.s:5584   .debug_str:000000000000037e .LASF215
     /tmp/ccYnqADt.s:5626   .debug_str:00000000000004a4 .LASF216
     /tmp/ccYnqADt.s:6044   .debug_str:00000000000012b2 .LASF217
     /tmp/ccYnqADt.s:5862   .debug_str:0000000000000c7a .LASF218
     /tmp/ccYnqADt.s:5674   .debug_str:000000000000064a .LASF219
     /tmp/ccYnqADt.s:5518   .debug_str:0000000000000152 .LASF220
     /tmp/ccYnqADt.s:5736   .debug_str:0000000000000859 .LASF221
     /tmp/ccYnqADt.s:5666   .debug_str:000000000000060e .LASF222
     /tmp/ccYnqADt.s:5856   .debug_str:0000000000000c5b .LASF223
     /tmp/ccYnqADt.s:5788   .debug_str:0000000000000a4e .LASF224
     /tmp/ccYnqADt.s:5656   .debug_str:00000000000005a7 .LASF225
     /tmp/ccYnqADt.s:6014   .debug_str:00000000000011c9 .LASF226
     /tmp/ccYnqADt.s:5918   .debug_str:0000000000000e41 .LASF227
     /tmp/ccYnqADt.s:5934   .debug_str:0000000000000e9a .LASF228
     /tmp/ccYnqADt.s:6046   .debug_str:00000000000012b9 .LASF229
     /tmp/ccYnqADt.s:6024   .debug_str:0000000000001200 .LASF230
     /tmp/ccYnqADt.s:5580   .debug_str:0000000000000360 .LASF231
     /tmp/ccYnqADt.s:5726   .debug_str:000000000000080f .LASF232
     /tmp/ccYnqADt.s:5970   .debug_str:0000000000001062 .LASF233
     /tmp/ccYnqADt.s:5818   .debug_str:0000000000000b45 .LASF234
     /tmp/ccYnqADt.s:5950   .debug_str:0000000000000fc2 .LASF235
     /tmp/ccYnqADt.s:5886   .debug_str:0000000000000d2b .LASF236
     /tmp/ccYnqADt.s:6064   .debug_str:000000000000133c .LASF237
     /tmp/ccYnqADt.s:5806   .debug_str:0000000000000ac9 .LASF238
     /tmp/ccYnqADt.s:5510   .debug_str:00000000000000e2 .LASF239
     /tmp/ccYnqADt.s:6036   .debug_str:0000000000001268 .LASF240
     /tmp/ccYnqADt.s:6052   .debug_str:00000000000012da .LASF241
     /tmp/ccYnqADt.s:5724   .debug_str:0000000000000800 .LASF242
     /tmp/ccYnqADt.s:5848   .debug_str:0000000000000c0c .LASF243
     /tmp/ccYnqADt.s:5512   .debug_str:0000000000000106 .LASF244
     /tmp/ccYnqADt.s:5550   .debug_str:0000000000000257 .LASF245
     /tmp/ccYnqADt.s:5770   .debug_str:000000000000099f .LASF246
     /tmp/ccYnqADt.s:6000   .debug_str:0000000000001136 .LASF247
     /tmp/ccYnqADt.s:6016   .debug_str:00000000000011d4 .LASF248
     /tmp/ccYnqADt.s:5890   .debug_str:0000000000000d4b .LASF249
     /tmp/ccYnqADt.s:5992   .debug_str:00000000000010ee .LASF250
     /tmp/ccYnqADt.s:5952   .debug_str:0000000000000fdb .LASF251
     /tmp/ccYnqADt.s:5734   .debug_str:0000000000000841 .LASF252
     /tmp/ccYnqADt.s:5824   .debug_str:0000000000000b70 .LASF253
     /tmp/ccYnqADt.s:5516   .debug_str:0000000000000130 .LASF254
     /tmp/ccYnqADt.s:5694   .debug_str:00000000000006e3 .LASF255
     /tmp/ccYnqADt.s:5520   .debug_str:0000000000000159 .LASF256
     /tmp/ccYnqADt.s:5530   .debug_str:00000000000001be .LASF257
     /tmp/ccYnqADt.s:5762   .debug_str:000000000000095b .LASF258
     /tmp/ccYnqADt.s:6040   .debug_str:0000000000001280 .LASF259
     /tmp/ccYnqADt.s:5682   .debug_str:000000000000067b .LASF260
     /tmp/ccYnqADt.s:5696   .debug_str:0000000000000713 .LASF261
     /tmp/ccYnqADt.s:5596   .debug_str:00000000000003bd .LASF262
     /tmp/ccYnqADt.s:5786   .debug_str:0000000000000a2d .LASF263
     /tmp/ccYnqADt.s:5798   .debug_str:0000000000000a95 .LASF264
     /tmp/ccYnqADt.s:5756   .debug_str:0000000000000916 .LASF265
GAS LISTING /tmp/ccYnqADt.s 			page 47


     /tmp/ccYnqADt.s:5836   .debug_str:0000000000000bc3 .LASF266
     /tmp/ccYnqADt.s:5664   .debug_str:00000000000005f3 .LASF267
     /tmp/ccYnqADt.s:5534   .debug_str:00000000000001e9 .LASF268
     /tmp/ccYnqADt.s:5754   .debug_str:00000000000008fb .LASF269
     /tmp/ccYnqADt.s:5628   .debug_str:00000000000004ab .LASF270
     /tmp/ccYnqADt.s:5688   .debug_str:00000000000006af .LASF271
     /tmp/ccYnqADt.s:63     .text:000000000000003c .LFB76
     /tmp/ccYnqADt.s:120    .text:00000000000000a0 .LFE76
     /tmp/ccYnqADt.s:5293   .debug_loc:0000000000000000 .LLST0
     /tmp/ccYnqADt.s:79     .text:0000000000000058 .LVL4
     /tmp/ccYnqADt.s:91     .text:0000000000000070 .LVL7
     /tmp/ccYnqADt.s:110    .text:000000000000008c .LVL8
     /tmp/ccYnqADt.s:117    .text:000000000000009c .LVL9
     /tmp/ccYnqADt.s:126    .text:00000000000000a0 .LFB75
     /tmp/ccYnqADt.s:151    .text:00000000000000c8 .LFE75
     /tmp/ccYnqADt.s:140    .text:00000000000000b8 .LVL10
     /tmp/ccYnqADt.s:171    .text:00000000000000c8 .LFB74
     /tmp/ccYnqADt.s:1157   .text:00000000000004a4 .LFE74
     /tmp/ccYnqADt.s:5914   .debug_str:0000000000000e35 .LASF272
     /tmp/ccYnqADt.s:5300   .debug_loc:0000000000000023 .LLST1
     /tmp/ccYnqADt.s:6012   .debug_str:00000000000011c4 .LASF273
     /tmp/ccYnqADt.s:5329   .debug_loc:00000000000000a7 .LLST2
     /tmp/ccYnqADt.s:313    .text:00000000000001a8 .LBB151
     /tmp/ccYnqADt.s:968    .text:0000000000000400 .LBE151
     /tmp/ccYnqADt.s:5336   .debug_loc:00000000000000ca .LLST3
     /tmp/ccYnqADt.s:6020   .debug_str:00000000000011f3 .LASF274
     /tmp/ccYnqADt.s:5343   .debug_loc:00000000000000ed .LLST4
     /tmp/ccYnqADt.s:315    .text:00000000000001a8 .LBB152
     /tmp/ccYnqADt.s:331    .text:00000000000001b4 .LBE152
     /tmp/ccYnqADt.s:336    .text:00000000000001b8 .LBB154
     /tmp/ccYnqADt.s:352    .text:00000000000001c4 .LBE154
     /tmp/ccYnqADt.s:354    .text:00000000000001c4 .LBB156
     /tmp/ccYnqADt.s:5474   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccYnqADt.s:453    .text:00000000000001f4 .LBB158
     /tmp/ccYnqADt.s:471    .text:0000000000000208 .LBE158
     /tmp/ccYnqADt.s:468    .text:0000000000000208 .LVL26
     /tmp/ccYnqADt.s:529    .text:0000000000000220 .LBB160
     /tmp/ccYnqADt.s:549    .text:0000000000000238 .LBE160
     /tmp/ccYnqADt.s:544    .text:0000000000000234 .LVL31
     /tmp/ccYnqADt.s:552    .text:0000000000000238 .LBB162
     /tmp/ccYnqADt.s:614    .text:0000000000000280 .LBE162
     /tmp/ccYnqADt.s:587    .text:0000000000000264 .LVL32
     /tmp/ccYnqADt.s:617    .text:0000000000000280 .LBB164
     /tmp/ccYnqADt.s:649    .text:00000000000002a4 .LBE164
     /tmp/ccYnqADt.s:624    .text:000000000000028c .LBB166
     /tmp/ccYnqADt.s:633    .text:0000000000000294 .LBE166
     /tmp/ccYnqADt.s:5350   .debug_loc:0000000000000110 .LLST5
     /tmp/ccYnqADt.s:5358   .debug_loc:0000000000000134 .LLST6
     /tmp/ccYnqADt.s:644    .text:00000000000002a0 .LVL35
     /tmp/ccYnqADt.s:652    .text:00000000000002a4 .LBB168
     /tmp/ccYnqADt.s:662    .text:00000000000002b0 .LBE168
     /tmp/ccYnqADt.s:657    .text:00000000000002ac .LVL36
     /tmp/ccYnqADt.s:665    .text:00000000000002b0 .LBB170
     /tmp/ccYnqADt.s:727    .text:00000000000002f8 .LBE170
     /tmp/ccYnqADt.s:700    .text:00000000000002dc .LVL37
     /tmp/ccYnqADt.s:730    .text:00000000000002f8 .LBB172
     /tmp/ccYnqADt.s:784    .text:0000000000000338 .LBE172
GAS LISTING /tmp/ccYnqADt.s 			page 48


     /tmp/ccYnqADt.s:757    .text:000000000000031c .LVL38
     /tmp/ccYnqADt.s:787    .text:0000000000000338 .LBB174
     /tmp/ccYnqADt.s:830    .text:000000000000036c .LBE174
     /tmp/ccYnqADt.s:808    .text:0000000000000358 .LBB176
     /tmp/ccYnqADt.s:818    .text:0000000000000364 .LBE176
     /tmp/ccYnqADt.s:5365   .debug_loc:0000000000000157 .LLST7
     /tmp/ccYnqADt.s:815    .text:0000000000000364 .LVL40
     /tmp/ccYnqADt.s:807    .text:0000000000000358 .LVL39
     /tmp/ccYnqADt.s:833    .text:000000000000036c .LBB178
     /tmp/ccYnqADt.s:853    .text:0000000000000384 .LBE178
     /tmp/ccYnqADt.s:848    .text:0000000000000380 .LVL41
     /tmp/ccYnqADt.s:856    .text:0000000000000384 .LBB180
     /tmp/ccYnqADt.s:876    .text:000000000000039c .LBE180
     /tmp/ccYnqADt.s:871    .text:0000000000000398 .LVL42
     /tmp/ccYnqADt.s:879    .text:000000000000039c .LBB182
     /tmp/ccYnqADt.s:899    .text:00000000000003b4 .LBE182
     /tmp/ccYnqADt.s:894    .text:00000000000003b0 .LVL43
     /tmp/ccYnqADt.s:902    .text:00000000000003b4 .LBB184
     /tmp/ccYnqADt.s:924    .text:00000000000003cc .LBE184
     /tmp/ccYnqADt.s:908    .text:00000000000003bc .LVL44
     /tmp/ccYnqADt.s:927    .text:00000000000003cc .LBB186
     /tmp/ccYnqADt.s:948    .text:00000000000003e8 .LBE186
     /tmp/ccYnqADt.s:943    .text:00000000000003e4 .LVL45
     /tmp/ccYnqADt.s:961    .text:00000000000003fc .LVL46
     /tmp/ccYnqADt.s:483    .text:000000000000020c .LBB189
     /tmp/ccYnqADt.s:494    .text:0000000000000210 .LBE189
     /tmp/ccYnqADt.s:5372   .debug_loc:000000000000017a .LLST8
     /tmp/ccYnqADt.s:496    .text:0000000000000210 .LBB191
     /tmp/ccYnqADt.s:507    .text:0000000000000214 .LBE191
     /tmp/ccYnqADt.s:5379   .debug_loc:000000000000019d .LLST9
     /tmp/ccYnqADt.s:509    .text:0000000000000214 .LBB193
     /tmp/ccYnqADt.s:521    .text:000000000000021c .LBE193
     /tmp/ccYnqADt.s:5386   .debug_loc:00000000000001c0 .LLST10
     /tmp/ccYnqADt.s:1053   .text:0000000000000458 .LBB203
     /tmp/ccYnqADt.s:1132   .text:0000000000000490 .LBE203
     /tmp/ccYnqADt.s:5394   .debug_loc:00000000000001e4 .LLST12
     /tmp/ccYnqADt.s:5401   .debug_loc:0000000000000207 .LLST13
     /tmp/ccYnqADt.s:1055   .text:0000000000000458 .LBB204
     /tmp/ccYnqADt.s:1071   .text:0000000000000464 .LBE204
     /tmp/ccYnqADt.s:1073   .text:0000000000000464 .LBB206
     /tmp/ccYnqADt.s:1089   .text:0000000000000470 .LBE206
     /tmp/ccYnqADt.s:1091   .text:0000000000000470 .LBB208
     /tmp/ccYnqADt.s:1098   .text:000000000000047c .LBE208
     /tmp/ccYnqADt.s:1104   .text:0000000000000484 .LBB210
     /tmp/ccYnqADt.s:1115   .text:0000000000000488 .LBE210
     /tmp/ccYnqADt.s:5408   .debug_loc:000000000000022a .LLST14
     /tmp/ccYnqADt.s:1117   .text:0000000000000488 .LBB212
     /tmp/ccYnqADt.s:1131   .text:0000000000000490 .LBE212
     /tmp/ccYnqADt.s:5415   .debug_loc:000000000000024d .LLST15
     /tmp/ccYnqADt.s:1102   .text:0000000000000484 .LVL57
     /tmp/ccYnqADt.s:189    .text:00000000000000e4 .LBB148
     /tmp/ccYnqADt.s:205    .text:00000000000000f0 .LBE148
     /tmp/ccYnqADt.s:983    .text:0000000000000418 .LBB198
     /tmp/ccYnqADt.s:992    .text:000000000000042c .LBE198
     /tmp/ccYnqADt.s:1004   .text:0000000000000438 .LBB201
     /tmp/ccYnqADt.s:1011   .text:000000000000043c .LBE201
     /tmp/ccYnqADt.s:5422   .debug_loc:0000000000000270 .LLST11
GAS LISTING /tmp/ccYnqADt.s 			page 49


     /tmp/ccYnqADt.s:1018   .text:0000000000000440 .LBB214
     /tmp/ccYnqADt.s:1030   .text:0000000000000448 .LBE214
     /tmp/ccYnqADt.s:5429   .debug_loc:0000000000000293 .LLST16
     /tmp/ccYnqADt.s:1036   .text:000000000000044c .LBB216
     /tmp/ccYnqADt.s:1048   .text:0000000000000454 .LBE216
     /tmp/ccYnqADt.s:5437   .debug_loc:00000000000002b7 .LLST17
     /tmp/ccYnqADt.s:227    .text:000000000000011c .LBB220
     /tmp/ccYnqADt.s:243    .text:0000000000000128 .LBE220
     /tmp/ccYnqADt.s:280    .text:0000000000000188 .LBB222
     /tmp/ccYnqADt.s:292    .text:000000000000018c .LBE222
     /tmp/ccYnqADt.s:5445   .debug_loc:00000000000002db .LLST18
     /tmp/ccYnqADt.s:1141   .text:0000000000000498 .LBB227
     /tmp/ccYnqADt.s:1153   .text:00000000000004a0 .LBE227
     /tmp/ccYnqADt.s:5452   .debug_loc:00000000000002fe .LLST19
     /tmp/ccYnqADt.s:248    .text:0000000000000138 .LVL13
     /tmp/ccYnqADt.s:253    .text:0000000000000148 .LVL14
     /tmp/ccYnqADt.s:258    .text:0000000000000154 .LVL15
     /tmp/ccYnqADt.s:263    .text:0000000000000160 .LVL16
     /tmp/ccYnqADt.s:268    .text:0000000000000170 .LVL17
     /tmp/ccYnqADt.s:273    .text:000000000000017c .LVL18
     /tmp/ccYnqADt.s:278    .text:0000000000000188 .LVL19
     /tmp/ccYnqADt.s:981    .text:0000000000000418 .LVL48
     /tmp/ccYnqADt.s:1139   .text:0000000000000498 .LVL60
     /tmp/ccYnqADt.s:10     .text:0000000000000000 .LFB73
     /tmp/ccYnqADt.s:57     .text:000000000000003c .LFE73
     /tmp/ccYnqADt.s:30     .text:0000000000000020 .LBB72
     /tmp/ccYnqADt.s:42     .text:0000000000000024 .LBE72
     /tmp/ccYnqADt.s:25     .text:0000000000000018 .LVL0
     /tmp/ccYnqADt.s:46     .text:000000000000002c .LVL3
     /tmp/ccYnqADt.s:5982   .debug_str:000000000000109a .LASF275
     /tmp/ccYnqADt.s:5984   .debug_str:000000000000109f .LASF276
     /tmp/ccYnqADt.s:5690   .debug_str:00000000000006ca .LASF277
     /tmp/ccYnqADt.s:5582   .debug_str:0000000000000373 .LASF278
     /tmp/ccYnqADt.s:5630   .debug_str:00000000000004b8 .LASF279
     /tmp/ccYnqADt.s:6002   .debug_str:0000000000001155 .LASF280
     /tmp/ccYnqADt.s:5728   .debug_str:000000000000081c .LASF281
     /tmp/ccYnqADt.s:5730   .debug_str:0000000000000822 .LASF282
     /tmp/ccYnqADt.s:6028   .debug_str:0000000000001213 .LASF283
     /tmp/ccYnqADt.s:5750   .debug_str:00000000000008cb .LASF284
     /tmp/ccYnqADt.s:5594   .debug_str:00000000000003ae .LASF285
     /tmp/ccYnqADt.s:5528   .debug_str:00000000000001aa .LASF286
     /tmp/ccYnqADt.s:6006   .debug_str:000000000000117b .LASF287
     /tmp/ccYnqADt.s:81     .text:000000000000005c .LVL5
     /tmp/ccYnqADt.s:85     .text:0000000000000064 .LVL6
     /tmp/ccYnqADt.s:203    .text:00000000000000f0 .LVL11
     /tmp/ccYnqADt.s:288    .text:000000000000018c .LVL20
     /tmp/ccYnqADt.s:309    .text:00000000000001a8 .LVL21
     /tmp/ccYnqADt.s:329    .text:00000000000001b4 .LVL22
     /tmp/ccYnqADt.s:370    .text:00000000000001d4 .LVL25
     /tmp/ccYnqADt.s:964    .text:0000000000000400 .LVL47
     /tmp/ccYnqADt.s:1014   .text:0000000000000440 .LVL51
     /tmp/ccYnqADt.s:1033   .text:000000000000044c .LVL53
     /tmp/ccYnqADt.s:1069   .text:0000000000000464 .LVL55
     /tmp/ccYnqADt.s:1128   .text:0000000000000490 .LVL59
     /tmp/ccYnqADt.s:241    .text:0000000000000128 .LVL12
     /tmp/ccYnqADt.s:334    .text:00000000000001b8 .LVL23
     /tmp/ccYnqADt.s:350    .text:00000000000001c4 .LVL24
GAS LISTING /tmp/ccYnqADt.s 			page 50


     /tmp/ccYnqADt.s:623    .text:000000000000028c .LVL33
     /tmp/ccYnqADt.s:631    .text:0000000000000294 .LVL34
     /tmp/ccYnqADt.s:481    .text:000000000000020c .LVL27
     /tmp/ccYnqADt.s:491    .text:0000000000000210 .LVL28
     /tmp/ccYnqADt.s:504    .text:0000000000000214 .LVL29
     /tmp/ccYnqADt.s:518    .text:000000000000021c .LVL30
     /tmp/ccYnqADt.s:1087   .text:0000000000000470 .LVL56
     /tmp/ccYnqADt.s:1112   .text:0000000000000488 .LVL58
     /tmp/ccYnqADt.s:1003   .text:0000000000000438 .LVL49
     /tmp/ccYnqADt.s:1009   .text:000000000000043c .LVL50
     /tmp/ccYnqADt.s:1027   .text:0000000000000448 .LVL52
     /tmp/ccYnqADt.s:1045   .text:0000000000000454 .LVL54
     /tmp/ccYnqADt.s:1150   .text:00000000000004a0 .LVL61
     /tmp/ccYnqADt.s:1168   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccYnqADt.s:473    .text:0000000000000208 .LBE156
     /tmp/ccYnqADt.s:525    .text:0000000000000220 .LBB195
     /tmp/ccYnqADt.s:967    .text:0000000000000400 .LBE195

UNDEFINED SYMBOLS
_ZN15MemoryAllocator7initMemEv
_ZN6Kernel14supervisorTrapEv
_ZN4Uart8initUartEv
plic_claim
plic_complete
_ZN4Uart9getStatusEv
_ZN4Uart9rxReceiveEv
_Z14__print_stringPKc
_Z14__print_uint64m
_ZN4Uart5txPutEc
_ZN15MemoryAllocator8allocateEm
_ZN15MemoryAllocator4freeEPv
_ZN3TCB9createTCBEPFvPvES0_
_ZN3TCB7runningE
_ZN3TCB8dispatchEv
_ZN3TCB20createDeactivatedTCBEPFvPvES0_
_ZN3Sem9createSemEj
_ZN3SemD1Ev
_ZN3Sem7semWaitEv
_ZN3Sem9semSignalEv
_ZN9Scheduler9timeSleepEm
_ZN4Uart5rxGetEv
_ZN9Scheduler14timerInterruptEv
_ZN3TCB16timeSliceCounterE
