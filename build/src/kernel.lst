GAS LISTING /tmp/cce9m9ZT.s 			page 1


   1              		.file	"kernel.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN6Kernel10initKernelEv
   9              	_ZN6Kernel10initKernelEv:
  10              	.LFB73:
  11              		.file 1 "src/kernel.cpp"
   1:src/kernel.cpp **** //
   2:src/kernel.cpp **** // Created by os on 9/6/22.
   3:src/kernel.cpp **** //
   4:src/kernel.cpp **** 
   5:src/kernel.cpp **** 
   6:src/kernel.cpp **** #include "../h/kernel.hpp"
   7:src/kernel.cpp **** //#include "../h/memory_allocator.hpp"
   8:src/kernel.cpp **** //#include "../h/riscv.hpp"
   9:src/kernel.cpp **** //#include "../h/uart.hpp"
  10:src/kernel.cpp **** 
  11:src/kernel.cpp **** //Uart* Kernel::uart = nullptr;
  12:src/kernel.cpp **** 
  13:src/kernel.cpp **** volatile bool Kernel::finished = false;
  14:src/kernel.cpp **** volatile int Kernel::sysThread = 0;
  15:src/kernel.cpp **** 
  16:src/kernel.cpp **** extern void userMain();
  17:src/kernel.cpp **** 
  18:src/kernel.cpp **** void Kernel::initKernel() {
  12              		.loc 1 18 27
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  19:src/kernel.cpp ****     MemoryAllocator::initMem();
  22              		.loc 1 19 5
  23              		.loc 1 19 29 is_stmt 0
  24 0010 97000000 		call	_ZN15MemoryAllocator7initMemEv@plt
  24      E7800000 
  25              	.LVL0:
  20:src/kernel.cpp ****     RiscV::writeStvec((uint64) &supervisorTrap);
  26              		.loc 1 20 5 is_stmt 1
  27              		.loc 1 20 22 is_stmt 0
  28 0018 97070000 		la	a5,_ZN6Kernel14supervisorTrapEv
  28      83B70700 
  29              	.LVL1:
  30              	.LBB72:
  31              	.LBB73:
  32              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 9/6/22.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cce9m9ZT.s 			page 2


   5:src/../h/riscv.hpp **** #ifndef OSMIUM_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OSMIUM_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** 
   9:src/../h/riscv.hpp **** #include "../lib/hw.h"
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp **** class RiscV {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp ****     // pop spp and spie sstatus bits
  14:src/../h/riscv.hpp ****     static void popSppSpie();
  15:src/../h/riscv.hpp **** 
  16:src/../h/riscv.hpp ****     //push x3...x31 registers on stack
  17:src/../h/riscv.hpp ****     static void pushRegisters();
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     //pop x3...x31 registers from stack
  20:src/../h/riscv.hpp ****     static void popRegisters();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     //read from scause register
  23:src/../h/riscv.hpp ****     static uint64 readScause();
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     //write to scause register
  26:src/../h/riscv.hpp ****     static void writeScause(uint64 scause);
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     //read from sepc register
  29:src/../h/riscv.hpp ****     static uint64 readSepc();
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     //write to sepc register
  32:src/../h/riscv.hpp ****     static void writeSepc(uint64 sepc);
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     //read from stvec register
  35:src/../h/riscv.hpp ****     static uint64 readStvec();
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     //write to stvec register
  38:src/../h/riscv.hpp ****     static void writeStvec(uint64 stvec);
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     enum SSTATUS
  41:src/../h/riscv.hpp ****     {
  42:src/../h/riscv.hpp ****         SIE = (1 << 1), //supervisor interrupt enable
  43:src/../h/riscv.hpp ****         SPIE = (1 << 5),//supervisor previous interrupt enable
  44:src/../h/riscv.hpp ****         SPP = (1 << 8), //supervisor previous privilege
  45:src/../h/riscv.hpp ****     };
  46:src/../h/riscv.hpp **** 
  47:src/../h/riscv.hpp ****     //set bit-mask bits in the sstatus register
  48:src/../h/riscv.hpp ****     static void setSstatus(uint64 mask);
  49:src/../h/riscv.hpp **** 
  50:src/../h/riscv.hpp ****     //clear bit-mask bits in the sstatus register
  51:src/../h/riscv.hpp ****     static void clearSstatus(uint64 mask);
  52:src/../h/riscv.hpp **** 
  53:src/../h/riscv.hpp ****     //read from sstatus register
  54:src/../h/riscv.hpp ****     static uint64 readSstatus();
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp ****     //write to sstatus register
  57:src/../h/riscv.hpp ****     static void writeSstatus(uint64 sstatus);
  58:src/../h/riscv.hpp **** 
  59:src/../h/riscv.hpp ****     enum SIP
  60:src/../h/riscv.hpp ****     {
  61:src/../h/riscv.hpp ****         SSIP = (1 << 1), //supervisor software interrupt pending
GAS LISTING /tmp/cce9m9ZT.s 			page 3


  62:src/../h/riscv.hpp ****         STIP = (1 << 5), //supervisor timer interrupt pending
  63:src/../h/riscv.hpp ****                          //(timer is configured to throw a software interrupt, so this is not used)
  64:src/../h/riscv.hpp ****         SEIP = (1 << 9), //supervisor external interrupt pending
  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     //set bit-mask bits in the sip register
  68:src/../h/riscv.hpp ****     static void setSip(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     //clear bit-mask bits in the sip register
  71:src/../h/riscv.hpp ****     static void clearSip(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     //read from sip register
  74:src/../h/riscv.hpp ****     static uint64 readSip();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     //write to sip register
  77:src/../h/riscv.hpp ****     static void writeSip(uint64 Sip);
  78:src/../h/riscv.hpp **** private:
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp **** };
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp **** inline uint64 RiscV::readScause() {
  83:src/../h/riscv.hpp ****     uint64 volatile scause;
  84:src/../h/riscv.hpp ****     asm volatile("csrr %[scause], scause": [scause] "=r" (scause));
  85:src/../h/riscv.hpp ****     return scause;
  86:src/../h/riscv.hpp **** }
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp **** inline void RiscV::writeScause(uint64 scause) {
  89:src/../h/riscv.hpp ****     asm volatile("csrw scause, %[scause]":: [scause] "r" (scause));
  90:src/../h/riscv.hpp **** }
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp **** inline uint64 RiscV::readSepc() {
  93:src/../h/riscv.hpp ****     uint64 volatile sepc;
  94:src/../h/riscv.hpp ****     asm volatile("csrr %[sepc], sepc": [sepc] "=r" (sepc));
  95:src/../h/riscv.hpp ****     return sepc;
  96:src/../h/riscv.hpp **** }
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** inline void RiscV::writeSepc(uint64 sepc) {
  99:src/../h/riscv.hpp ****     asm volatile("csrw sepc, %[sepc]":: [sepc] "r" (sepc));
 100:src/../h/riscv.hpp **** }
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp **** inline uint64 RiscV::readStvec() {
 103:src/../h/riscv.hpp ****     uint64 volatile stvec;
 104:src/../h/riscv.hpp ****     asm volatile("csrr %[stvec], stvec": [stvec] "=r" (stvec));
 105:src/../h/riscv.hpp ****     return stvec;
 106:src/../h/riscv.hpp **** }
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp **** inline void RiscV::writeStvec(uint64 stvec) {
 109:src/../h/riscv.hpp ****     asm volatile("csrw stvec, %[stvec]":: [stvec] "r" (stvec));
  33              		.loc 2 109 5 is_stmt 1
  34              		.loc 2 109 63 is_stmt 0
  35              	#APP
  36              	# 109 "src/../h/riscv.hpp" 1
 110              	}
  37              		csrw stvec, a5
  38              	# 0 "" 2
  39              	.LVL2:
  40              	#NO_APP
GAS LISTING /tmp/cce9m9ZT.s 			page 4


  41              	.LBE73:
  42              	.LBE72:
  21:src/kernel.cpp ****     //sysThread = Sem::createSem(0);
  22:src/kernel.cpp **** 
  23:src/kernel.cpp ****     Uart::initUart();
  43              		.loc 1 23 5 is_stmt 1
  44              		.loc 1 23 19 is_stmt 0
  45 0024 97000000 		call	_ZN4Uart8initUartEv@plt
  45      E7800000 
  46              	.LVL3:
  24:src/kernel.cpp ****     //RiscV::setSstatus(RiscV::SIE);
  25:src/kernel.cpp **** }
  47              		.loc 1 25 1
  48 002c 83308100 		ld	ra,8(sp)
  49              		.cfi_restore 1
  50 0030 03340100 		ld	s0,0(sp)
  51              		.cfi_restore 8
  52              		.cfi_def_cfa 2, 16
  53 0034 13010101 		addi	sp,sp,16
  54              		.cfi_def_cfa_offset 0
  55 0038 67800000 		jr	ra
  56              		.cfi_endproc
  57              	.LFE73:
  59              		.section	.rodata.str1.8,"aMS",@progbits,1
  60              		.align	3
  61              	.LC0:
  62 0000 4572726F 		.string	"Error: Invalid syscall id!"
  62      723A2049 
  62      6E76616C 
  62      69642073 
  62      79736361 
  63 001b 00000000 		.align	3
  63      00
  64              	.LC1:
  65 0020 4E656F62 		.string	"Neobradjen izuzetak.\n"
  65      7261646A 
  65      656E2069 
  65      7A757A65 
  65      74616B2E 
  66 0036 0000     		.align	3
  67              	.LC2:
  68 0038 73636175 		.string	"scause: "
  68      73653A20 
  68      00
  69 0041 00000000 		.align	3
  69      000000
  70              	.LC3:
  71 0048 73657063 		.string	"sepc: "
  71      3A2000
  72              		.text
  73              		.align	2
  74              		.globl	_ZN6Kernel21supervisorTrapHandlerEv
  76              	_ZN6Kernel21supervisorTrapHandlerEv:
  77              	.LFB74:
  26:src/kernel.cpp **** 
  27:src/kernel.cpp **** void Kernel::supervisorTrapHandler() {
  78              		.loc 1 27 38 is_stmt 1
GAS LISTING /tmp/cce9m9ZT.s 			page 5


  79              		.cfi_startproc
  80 003c 130101F1 		addi	sp,sp,-240
  81              		.cfi_def_cfa_offset 240
  82 0040 2334110E 		sd	ra,232(sp)
  83 0044 2330810E 		sd	s0,224(sp)
  84 0048 233C910C 		sd	s1,216(sp)
  85 004c 2338210D 		sd	s2,208(sp)
  86 0050 2334310D 		sd	s3,200(sp)
  87              		.cfi_offset 1, -8
  88              		.cfi_offset 8, -16
  89              		.cfi_offset 9, -24
  90              		.cfi_offset 18, -32
  91              		.cfi_offset 19, -40
  92 0054 1304010F 		addi	s0,sp,240
  93              		.cfi_def_cfa 8, 0
  28:src/kernel.cpp ****     uint64 scause = RiscV::readScause();
  94              		.loc 1 28 5
  95              	.LBB150:
  96              	.LBB151:
  83:src/../h/riscv.hpp ****     asm volatile("csrr %[scause], scause": [scause] "=r" (scause));
  97              		.loc 2 83 5
  84:src/../h/riscv.hpp ****     return scause;
  98              		.loc 2 84 5
  84:src/../h/riscv.hpp ****     return scause;
  99              		.loc 2 84 67 is_stmt 0
 100              	#APP
 101              	# 84 "src/../h/riscv.hpp" 1
 102              		csrr a5, scause
 103              	# 0 "" 2
 104              	#NO_APP
 105 005c 233CF4F0 		sd	a5,-232(s0)
  85:src/../h/riscv.hpp **** }
 106              		.loc 2 85 5 is_stmt 1
  85:src/../h/riscv.hpp **** }
 107              		.loc 2 85 12 is_stmt 0
 108 0060 833484F1 		ld	s1,-232(s0)
 109              	.LVL4:
 110              	.LBE151:
 111              	.LBE150:
  29:src/kernel.cpp **** 
  30:src/kernel.cpp ****     if (scause == USER_SYSCALL || scause == SUPERVISOR_SYSCALL) {
 112              		.loc 1 30 5 is_stmt 1
 113              	.LBB152:
 114              		.loc 1 30 32 is_stmt 0
 115 0064 138784FF 		addi	a4,s1,-8
 116              		.loc 1 30 5
 117 0068 93071000 		li	a5,1
 118 006c 63F8E70A 		bleu	a4,a5,.L33
 119              	.LBE152:
  31:src/kernel.cpp ****         uint64 sepc = RiscV::readSepc() + 4;
  32:src/kernel.cpp ****         uint64 sstatus = RiscV::readSstatus();
  33:src/kernel.cpp **** 
  34:src/kernel.cpp ****         syscall_handler();
  35:src/kernel.cpp **** 
  36:src/kernel.cpp ****         asm volatile ("sd a0, 80(s0)");
  37:src/kernel.cpp ****         RiscV::writeSstatus(sstatus);
  38:src/kernel.cpp ****         RiscV::writeSepc(sepc);
GAS LISTING /tmp/cce9m9ZT.s 			page 6


  39:src/kernel.cpp ****         RiscV::clearSip(RiscV::SSIP);
  40:src/kernel.cpp ****         return;
  41:src/kernel.cpp ****     }
  42:src/kernel.cpp ****     if (scause == TIMER_IRQ) {
 120              		.loc 1 42 5 is_stmt 1
 121              	.LBB198:
 122 0070 9307F0FF 		li	a5,-1
 123 0074 9397F703 		slli	a5,a5,63
 124 0078 93871700 		addi	a5,a5,1
 125 007c 638CF42E 		beq	s1,a5,.L34
 126              	.LBE198:
  43:src/kernel.cpp ****         if (!TCB::running) { RiscV::clearSip(RiscV::SSIP); return; }
  44:src/kernel.cpp ****         Scheduler::timerInterrupt();
  45:src/kernel.cpp ****         TCB::incTimeSliceCounter();
  46:src/kernel.cpp ****         if (TCB::getTimeSliceCounter() >= TCB::running->getTimeSlice())
  47:src/kernel.cpp ****         {
  48:src/kernel.cpp ****             //__print_string("timer\n");
  49:src/kernel.cpp ****             uint64 sepc = RiscV::readSepc();
  50:src/kernel.cpp ****             uint64 sstatus = RiscV::readSstatus();
  51:src/kernel.cpp ****             TCB::resetTimeSliceCounter();
  52:src/kernel.cpp ****             TCB::dispatch();
  53:src/kernel.cpp ****             RiscV::writeSstatus(sstatus);
  54:src/kernel.cpp ****             RiscV::writeSepc(sepc);
  55:src/kernel.cpp ****         }
  56:src/kernel.cpp ****         RiscV::clearSip(RiscV::SSIP);
  57:src/kernel.cpp ****         return;
  58:src/kernel.cpp ****     }
  59:src/kernel.cpp ****     if (scause == HARDWARE_IRQ) {
 127              		.loc 1 59 5
 128 0080 9307F0FF 		li	a5,-1
 129 0084 9397F703 		slli	a5,a5,63
 130 0088 93879700 		addi	a5,a5,9
 131 008c 638CF436 		beq	s1,a5,.L35
  60:src/kernel.cpp ****         //console_handler();
  61:src/kernel.cpp ****         //ConsoleInterface::console_handler();
  62:src/kernel.cpp ****         uart_handler();
  63:src/kernel.cpp ****         RiscV::clearSip(RiscV::SEIP);
  64:src/kernel.cpp ****         return;
  65:src/kernel.cpp ****     }
  66:src/kernel.cpp **** 
  67:src/kernel.cpp ****     uint64 sepc = RiscV::readSepc();
 132              		.loc 1 67 5
 133              	.LBB222:
 134              	.LBB223:
  93:src/../h/riscv.hpp ****     asm volatile("csrr %[sepc], sepc": [sepc] "=r" (sepc));
 135              		.loc 2 93 5
  94:src/../h/riscv.hpp ****     return sepc;
 136              		.loc 2 94 5
  94:src/../h/riscv.hpp ****     return sepc;
 137              		.loc 2 94 59 is_stmt 0
 138              	#APP
 139              	# 94 "src/../h/riscv.hpp" 1
 140              		csrr a5, sepc
 141              	# 0 "" 2
 142              	#NO_APP
 143 0094 2330F4F4 		sd	a5,-192(s0)
  95:src/../h/riscv.hpp **** }
GAS LISTING /tmp/cce9m9ZT.s 			page 7


 144              		.loc 2 95 5 is_stmt 1
  95:src/../h/riscv.hpp **** }
 145              		.loc 2 95 12 is_stmt 0
 146 0098 033904F4 		ld	s2,-192(s0)
 147              	.LVL5:
 148              	.LBE223:
 149              	.LBE222:
  68:src/kernel.cpp ****     __print_string("Neobradjen izuzetak.\n");
 150              		.loc 1 68 5 is_stmt 1
 151              		.loc 1 68 19 is_stmt 0
 152 009c 17050000 		lla	a0,.LC1
 152      13050500 
 153 00a4 97000000 		call	_Z14__print_stringPKc@plt
 153      E7800000 
 154              	.LVL6:
  69:src/kernel.cpp ****     __print_string("scause: ");
 155              		.loc 1 69 5 is_stmt 1
 156              		.loc 1 69 19 is_stmt 0
 157 00ac 17050000 		lla	a0,.LC2
 157      13050500 
 158 00b4 97000000 		call	_Z14__print_stringPKc@plt
 158      E7800000 
 159              	.LVL7:
  70:src/kernel.cpp ****     __print_uint64(scause);
 160              		.loc 1 70 5 is_stmt 1
 161              		.loc 1 70 19 is_stmt 0
 162 00bc 13850400 		mv	a0,s1
 163 00c0 97000000 		call	_Z14__print_uint64m@plt
 163      E7800000 
 164              	.LVL8:
  71:src/kernel.cpp ****     Uart::txPut('\n');
 165              		.loc 1 71 5 is_stmt 1
 166              		.loc 1 71 16 is_stmt 0
 167 00c8 1305A000 		li	a0,10
 168 00cc 97000000 		call	_ZN4Uart5txPutEc@plt
 168      E7800000 
 169              	.LVL9:
  72:src/kernel.cpp ****     __print_string("sepc: ");
 170              		.loc 1 72 5 is_stmt 1
 171              		.loc 1 72 19 is_stmt 0
 172 00d4 17050000 		lla	a0,.LC3
 172      13050500 
 173 00dc 97000000 		call	_Z14__print_stringPKc@plt
 173      E7800000 
 174              	.LVL10:
  73:src/kernel.cpp ****     __print_uint64(sepc);
 175              		.loc 1 73 5 is_stmt 1
 176              		.loc 1 73 19 is_stmt 0
 177 00e4 13050900 		mv	a0,s2
 178 00e8 97000000 		call	_Z14__print_uint64m@plt
 178      E7800000 
 179              	.LVL11:
  74:src/kernel.cpp ****     Uart::txPut('\n');
 180              		.loc 1 74 5 is_stmt 1
 181              		.loc 1 74 16 is_stmt 0
 182 00f0 1305A000 		li	a0,10
 183 00f4 97000000 		call	_ZN4Uart5txPutEc@plt
GAS LISTING /tmp/cce9m9ZT.s 			page 8


 183      E7800000 
 184              	.LVL12:
  75:src/kernel.cpp ****     //riscV::clearSip(RiscV::SSIP);
  76:src/kernel.cpp ****     RiscV::writeSepc(sepc);
 185              		.loc 1 76 5 is_stmt 1
 186              	.LBB224:
 187              	.LBB225:
  99:src/../h/riscv.hpp **** }
 188              		.loc 2 99 5
  99:src/../h/riscv.hpp **** }
 189              		.loc 2 99 59 is_stmt 0
 190              	#APP
 191              	# 99 "src/../h/riscv.hpp" 1
 192              		csrw sepc, s2
 193              	# 0 "" 2
 194              	.LVL13:
 195              	#NO_APP
 196              	.L3:
 197              	.LBE225:
 198              	.LBE224:
  77:src/kernel.cpp ****     return;
  78:src/kernel.cpp **** }
 199              		.loc 1 78 1
 200 0100 8330810E 		ld	ra,232(sp)
 201              		.cfi_remember_state
 202              		.cfi_restore 1
 203 0104 0334010E 		ld	s0,224(sp)
 204              		.cfi_restore 8
 205              		.cfi_def_cfa 2, 240
 206 0108 8334810D 		ld	s1,216(sp)
 207              		.cfi_restore 9
 208 010c 0339010D 		ld	s2,208(sp)
 209              		.cfi_restore 18
 210 0110 8339810C 		ld	s3,200(sp)
 211              		.cfi_restore 19
 212 0114 1301010F 		addi	sp,sp,240
 213              		.cfi_def_cfa_offset 0
 214 0118 67800000 		jr	ra
 215              	.LVL14:
 216              	.L33:
 217              		.cfi_restore_state
 218              	.LBB226:
 219              	.LBB153:
  31:src/kernel.cpp ****         uint64 sstatus = RiscV::readSstatus();
 220              		.loc 1 31 9 is_stmt 1
 221              	.LBB154:
 222              	.LBB155:
  93:src/../h/riscv.hpp ****     asm volatile("csrr %[sepc], sepc": [sepc] "=r" (sepc));
 223              		.loc 2 93 5
  94:src/../h/riscv.hpp ****     return sepc;
 224              		.loc 2 94 5
  94:src/../h/riscv.hpp ****     return sepc;
 225              		.loc 2 94 59 is_stmt 0
 226              	#APP
 227              	# 94 "src/../h/riscv.hpp" 1
 228              		csrr a5, sepc
 229              	# 0 "" 2
GAS LISTING /tmp/cce9m9ZT.s 			page 9


 230              	#NO_APP
 231 0120 2334F4F2 		sd	a5,-216(s0)
  95:src/../h/riscv.hpp **** }
 232              		.loc 2 95 5 is_stmt 1
  95:src/../h/riscv.hpp **** }
 233              		.loc 2 95 12 is_stmt 0
 234 0124 833484F2 		ld	s1,-216(s0)
 235              	.LVL15:
 236              	.LBE155:
 237              	.LBE154:
  31:src/kernel.cpp ****         uint64 sstatus = RiscV::readSstatus();
 238              		.loc 1 31 43
 239 0128 93844400 		addi	s1,s1,4
 240              	.LVL16:
  32:src/kernel.cpp **** 
 241              		.loc 1 32 9 is_stmt 1
 242              	.LBB156:
 243              	.LBB157:
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp **** inline void RiscV::setSstatus(uint64 mask) {
 113:src/../h/riscv.hpp ****     asm volatile("csrs sstatus, %[mask]":: [mask] "r" (mask));
 114:src/../h/riscv.hpp **** }
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp **** inline void RiscV::clearSstatus(uint64 mask) {
 117:src/../h/riscv.hpp ****     asm volatile("csrc sstatus, %[mask]":: [mask] "r" (mask));
 118:src/../h/riscv.hpp **** }
 119:src/../h/riscv.hpp **** 
 120:src/../h/riscv.hpp **** inline uint64 RiscV::readSstatus() {
 121:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 244              		.loc 2 121 5
 122:src/../h/riscv.hpp ****     asm volatile("csrr %[sstatus], sstatus": [sstatus] "=r" (sstatus));
 245              		.loc 2 122 5
 246              		.loc 2 122 71 is_stmt 0
 247              	#APP
 248              	# 122 "src/../h/riscv.hpp" 1
 123              	    return sstatus;
 249              		csrr a5, sstatus
 250              	# 0 "" 2
 251              	#NO_APP
 252 0130 2330F4F2 		sd	a5,-224(s0)
 253              		.loc 2 123 5 is_stmt 1
 254              		.loc 2 123 12 is_stmt 0
 255 0134 033904F2 		ld	s2,-224(s0)
 256              	.LVL17:
 257              	.LBE157:
 258              	.LBE156:
  34:src/kernel.cpp **** 
 259              		.loc 1 34 9 is_stmt 1
 260              	.LBB158:
 261              	.LBB159:
 262              		.file 3 "src/../h/kernel.hpp"
   1:src/../h/kernel.hpp **** //
   2:src/../h/kernel.hpp **** // Created by os on 9/6/22.
   3:src/../h/kernel.hpp **** //
   4:src/../h/kernel.hpp **** 
   5:src/../h/kernel.hpp **** #ifndef OSMIUM_KERNEL_HPP
   6:src/../h/kernel.hpp **** #define OSMIUM_KERNEL_HPP
GAS LISTING /tmp/cce9m9ZT.s 			page 10


   7:src/../h/kernel.hpp **** 
   8:src/../h/kernel.hpp **** #include "../lib/hw.h"
   9:src/../h/kernel.hpp **** #include "../lib/console.h"
  10:src/../h/kernel.hpp **** 
  11:src/../h/kernel.hpp **** #include "memory_allocator.hpp"
  12:src/../h/kernel.hpp **** #include "tcb.hpp"
  13:src/../h/kernel.hpp **** #include "uart.hpp"
  14:src/../h/kernel.hpp **** 
  15:src/../h/kernel.hpp **** class Kernel {
  16:src/../h/kernel.hpp **** public:
  17:src/../h/kernel.hpp ****     static constexpr uint64 USER_SYSCALL = 0x0000000000000008UL;
  18:src/../h/kernel.hpp ****     static constexpr uint64 SUPERVISOR_SYSCALL = 0x0000000000000009UL;
  19:src/../h/kernel.hpp ****     static constexpr uint64 HARDWARE_IRQ = 0x8000000000000009UL;
  20:src/../h/kernel.hpp ****     static constexpr uint64 TIMER_IRQ = 0x8000000000000001UL;
  21:src/../h/kernel.hpp **** 
  22:src/../h/kernel.hpp ****     static void initKernel();
  23:src/../h/kernel.hpp ****     static void supervisorTrap();
  24:src/../h/kernel.hpp ****     static void finishKernel();
  25:src/../h/kernel.hpp ****     static bool isFinished();
  26:src/../h/kernel.hpp **** private:
  27:src/../h/kernel.hpp ****     /* supervisor Trap routines */
  28:src/../h/kernel.hpp ****     static void supervisorTrapHandler();
  29:src/../h/kernel.hpp ****     static void syscall_handler();
  30:src/../h/kernel.hpp **** 
  31:src/../h/kernel.hpp ****     /* software syscall_c handlers */
  32:src/../h/kernel.hpp ****     static void mem_alloc_handler();                    //0x01
  33:src/../h/kernel.hpp ****     static void mem_free_handler();                     //0x02
  34:src/../h/kernel.hpp ****     static void thread_create_handler();                //0x11
  35:src/../h/kernel.hpp ****     static void thread_exit_handler();                  //0x12
  36:src/../h/kernel.hpp ****     static void thread_dispatch_handler();              //0x13
  37:src/../h/kernel.hpp ****     static void thread_create_deactivated_handler();    //0x14
  38:src/../h/kernel.hpp ****     static void sem_open_handler();                     //0x21
  39:src/../h/kernel.hpp ****     static void sem_close_handler();                    //0x22
  40:src/../h/kernel.hpp ****     static void sem_wait_handler();                     //0x23
  41:src/../h/kernel.hpp ****     static void sem_signal_handler();                   //0x24
  42:src/../h/kernel.hpp ****     static void time_sleep_handler();                   //0x31
  43:src/../h/kernel.hpp ****     static void getc_handler();                         //0x41
  44:src/../h/kernel.hpp ****     static void putc_handler();                         //0x42
  45:src/../h/kernel.hpp **** 
  46:src/../h/kernel.hpp ****     /* hardware interrupt handlers */
  47:src/../h/kernel.hpp ****     static void uart_handler();                         //0x0a
  48:src/../h/kernel.hpp **** 
  49:src/../h/kernel.hpp ****     //private fields
  50:src/../h/kernel.hpp ****     static volatile bool finished;
  51:src/../h/kernel.hpp **** 
  52:src/../h/kernel.hpp ****     static volatile int sysThread;
  53:src/../h/kernel.hpp **** };
  54:src/../h/kernel.hpp **** 
  55:src/../h/kernel.hpp **** inline void Kernel::syscall_handler() {
  56:src/../h/kernel.hpp ****     //uint64 sepc = RiscV::readSepc();
  57:src/../h/kernel.hpp ****     volatile uint64 syscall_id;
 263              		.loc 3 57 5
  58:src/../h/kernel.hpp ****     asm volatile ("mv %[syscall_id], a7": [syscall_id] "=r" (syscall_id));
 264              		.loc 3 58 5
 265              		.loc 3 58 74 is_stmt 0
 266              	#APP
 267              	# 58 "src/../h/kernel.hpp" 1
GAS LISTING /tmp/cce9m9ZT.s 			page 11


  59              	
 268              		mv a5, a7
 269              	# 0 "" 2
 270              	#NO_APP
 271 013c 2334F4F4 		sd	a5,-184(s0)
  60:src/../h/kernel.hpp ****     //volatile uint64 arg0, arg1, arg2, temp;
  61:src/../h/kernel.hpp ****     switch(syscall_id) {
 272              		.loc 3 61 5 is_stmt 1
 273              		.loc 3 61 12 is_stmt 0
 274 0140 833784F4 		ld	a5,-184(s0)
 275 0144 13072004 		li	a4,66
 276              	.LVL18:
 277 0148 636AF720 		bgtu	a5,a4,.L5
 278 014c 93972700 		slli	a5,a5,2
 279 0150 17070000 		lla	a4,.L7
 279      13070700 
 280 0158 B387E700 		add	a5,a5,a4
 281 015c 83A70700 		lw	a5,0(a5)
 282 0160 B387E700 		add	a5,a5,a4
 283 0164 67800700 		jr	a5
 284              		.section	.rodata
 285              		.align	2
 286              		.align	2
 287              	.L7:
 288 0000 00000000 		.word	.L5-.L7
 289 0004 00000000 		.word	.L19-.L7
 290 0008 00000000 		.word	.L18-.L7
 291 000c 00000000 		.word	.L5-.L7
 292 0010 00000000 		.word	.L5-.L7
 293 0014 00000000 		.word	.L5-.L7
 294 0018 00000000 		.word	.L5-.L7
 295 001c 00000000 		.word	.L5-.L7
 296 0020 00000000 		.word	.L5-.L7
 297 0024 00000000 		.word	.L5-.L7
 298 0028 00000000 		.word	.L5-.L7
 299 002c 00000000 		.word	.L5-.L7
 300 0030 00000000 		.word	.L5-.L7
 301 0034 00000000 		.word	.L5-.L7
 302 0038 00000000 		.word	.L5-.L7
 303 003c 00000000 		.word	.L5-.L7
 304 0040 00000000 		.word	.L5-.L7
 305 0044 00000000 		.word	.L17-.L7
 306 0048 00000000 		.word	.L16-.L7
 307 004c 00000000 		.word	.L15-.L7
 308 0050 00000000 		.word	.L14-.L7
 309 0054 00000000 		.word	.L5-.L7
 310 0058 00000000 		.word	.L5-.L7
 311 005c 00000000 		.word	.L5-.L7
 312 0060 00000000 		.word	.L5-.L7
 313 0064 00000000 		.word	.L5-.L7
 314 0068 00000000 		.word	.L5-.L7
 315 006c 00000000 		.word	.L5-.L7
 316 0070 00000000 		.word	.L5-.L7
 317 0074 00000000 		.word	.L5-.L7
 318 0078 00000000 		.word	.L5-.L7
 319 007c 00000000 		.word	.L5-.L7
 320 0080 00000000 		.word	.L5-.L7
GAS LISTING /tmp/cce9m9ZT.s 			page 12


 321 0084 00000000 		.word	.L13-.L7
 322 0088 00000000 		.word	.L12-.L7
 323 008c 00000000 		.word	.L11-.L7
 324 0090 00000000 		.word	.L10-.L7
 325 0094 00000000 		.word	.L5-.L7
 326 0098 00000000 		.word	.L5-.L7
 327 009c 00000000 		.word	.L5-.L7
 328 00a0 00000000 		.word	.L5-.L7
 329 00a4 00000000 		.word	.L5-.L7
 330 00a8 00000000 		.word	.L5-.L7
 331 00ac 00000000 		.word	.L5-.L7
 332 00b0 00000000 		.word	.L5-.L7
 333 00b4 00000000 		.word	.L5-.L7
 334 00b8 00000000 		.word	.L5-.L7
 335 00bc 00000000 		.word	.L5-.L7
 336 00c0 00000000 		.word	.L5-.L7
 337 00c4 00000000 		.word	.L9-.L7
 338 00c8 00000000 		.word	.L5-.L7
 339 00cc 00000000 		.word	.L5-.L7
 340 00d0 00000000 		.word	.L5-.L7
 341 00d4 00000000 		.word	.L5-.L7
 342 00d8 00000000 		.word	.L5-.L7
 343 00dc 00000000 		.word	.L5-.L7
 344 00e0 00000000 		.word	.L5-.L7
 345 00e4 00000000 		.word	.L5-.L7
 346 00e8 00000000 		.word	.L5-.L7
 347 00ec 00000000 		.word	.L5-.L7
 348 00f0 00000000 		.word	.L5-.L7
 349 00f4 00000000 		.word	.L5-.L7
 350 00f8 00000000 		.word	.L5-.L7
 351 00fc 00000000 		.word	.L5-.L7
 352 0100 00000000 		.word	.L5-.L7
 353 0104 00000000 		.word	.L8-.L7
 354 0108 00000000 		.word	.L6-.L7
 355              		.text
 356              	.L19:
  62:src/../h/kernel.hpp ****         case 0x01:
 357              		.loc 3 62 9 is_stmt 1
  63:src/../h/kernel.hpp ****             Kernel::mem_alloc_handler();
 358              		.loc 3 63 13
 359              	.LBB160:
 360              	.LBB161:
  64:src/../h/kernel.hpp ****             break;
  65:src/../h/kernel.hpp ****         case 0x02:
  66:src/../h/kernel.hpp ****             Kernel::mem_free_handler();
  67:src/../h/kernel.hpp ****             break;
  68:src/../h/kernel.hpp ****         case 0x11:
  69:src/../h/kernel.hpp ****             Kernel::thread_create_handler();
  70:src/../h/kernel.hpp ****             break;
  71:src/../h/kernel.hpp ****         case 0x12:
  72:src/../h/kernel.hpp ****             Kernel::thread_exit_handler();
  73:src/../h/kernel.hpp ****             break;
  74:src/../h/kernel.hpp ****         case 0x13:
  75:src/../h/kernel.hpp ****             Kernel::thread_dispatch_handler();
  76:src/../h/kernel.hpp ****             break;
  77:src/../h/kernel.hpp ****         case 0x14:
  78:src/../h/kernel.hpp ****             Kernel::thread_create_deactivated_handler();
GAS LISTING /tmp/cce9m9ZT.s 			page 13


  79:src/../h/kernel.hpp ****             break;
  80:src/../h/kernel.hpp ****         case 0x21:
  81:src/../h/kernel.hpp ****             Kernel::sem_open_handler();
  82:src/../h/kernel.hpp ****             break;
  83:src/../h/kernel.hpp ****         case 0x22:
  84:src/../h/kernel.hpp ****             Kernel::sem_close_handler();
  85:src/../h/kernel.hpp ****             break;
  86:src/../h/kernel.hpp ****         case 0x23:
  87:src/../h/kernel.hpp ****             Kernel::sem_wait_handler();
  88:src/../h/kernel.hpp ****             break;
  89:src/../h/kernel.hpp ****         case 0x24:
  90:src/../h/kernel.hpp ****             Kernel::sem_signal_handler();
  91:src/../h/kernel.hpp ****             break;
  92:src/../h/kernel.hpp ****         case 0x31:
  93:src/../h/kernel.hpp ****             Kernel::time_sleep_handler();
  94:src/../h/kernel.hpp ****             break;
  95:src/../h/kernel.hpp ****         case 0x41:
  96:src/../h/kernel.hpp ****             Kernel::getc_handler();
  97:src/../h/kernel.hpp ****             break;
  98:src/../h/kernel.hpp ****         case 0x42:
  99:src/../h/kernel.hpp ****             Kernel::putc_handler();
 100:src/../h/kernel.hpp ****             break;
 101:src/../h/kernel.hpp ****         default:
 102:src/../h/kernel.hpp ****             asm volatile ("addi a0, zero, -1");
 103:src/../h/kernel.hpp ****             __print_string("Error: Invalid syscall id!");
 104:src/../h/kernel.hpp ****             break;
 105:src/../h/kernel.hpp ****     }
 106:src/../h/kernel.hpp **** }
 107:src/../h/kernel.hpp **** 
 108:src/../h/kernel.hpp **** //0x01
 109:src/../h/kernel.hpp **** inline void Kernel::mem_alloc_handler() {
 110:src/../h/kernel.hpp ****     volatile uint64 arg0;
 361              		.loc 3 110 5
 111:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 362              		.loc 3 111 5
 363              		.loc 3 111 55 is_stmt 0
 364              	#APP
 365              	# 111 "src/../h/kernel.hpp" 1
 112              	    MemoryAllocator::allocate((size_t)arg0);
 366              		mv a5, a0
 367              	# 0 "" 2
 368              	#NO_APP
 369 016c 2330F4F8 		sd	a5,-128(s0)
 370              		.loc 3 112 5 is_stmt 1
 371              		.loc 3 112 30 is_stmt 0
 372 0170 033504F8 		ld	a0,-128(s0)
 373 0174 97000000 		call	_ZN15MemoryAllocator8allocateEm@plt
 373      E7800000 
 374              	.LVL19:
 375              	.L20:
 376              	.LBE161:
 377              	.LBE160:
 378              	.LBE159:
 379              	.LBE158:
  36:src/kernel.cpp ****         RiscV::writeSstatus(sstatus);
 380              		.loc 1 36 9 is_stmt 1
  36:src/kernel.cpp ****         RiscV::writeSstatus(sstatus);
GAS LISTING /tmp/cce9m9ZT.s 			page 14


 381              		.loc 1 36 39 is_stmt 0
 382              	#APP
 383              	# 36 "src/kernel.cpp" 1
  37:src/kernel.cpp ****         RiscV::writeSepc(sepc);
 384              		sd a0, 80(s0)
 385              	# 0 "" 2
 386              		.loc 1 37 9 is_stmt 1
 387              	.LVL20:
 388              	#NO_APP
 389              	.LBB191:
 390              	.LBB192:
 124:src/../h/riscv.hpp **** }
 125:src/../h/riscv.hpp **** 
 126:src/../h/riscv.hpp **** inline void RiscV::writeSstatus(uint64 sstatus) {
 127:src/../h/riscv.hpp ****     asm volatile("csrw sstatus, %[sstatus]":: [sstatus] "r" (sstatus));
 391              		.loc 2 127 5
 392              		.loc 2 127 71 is_stmt 0
 393              	#APP
 394              	# 127 "src/../h/riscv.hpp" 1
 128              	}
 395              		csrw sstatus, s2
 396              	# 0 "" 2
 397              	.LVL21:
 398              	#NO_APP
 399              	.LBE192:
 400              	.LBE191:
  38:src/kernel.cpp ****         RiscV::clearSip(RiscV::SSIP);
 401              		.loc 1 38 9 is_stmt 1
 402              	.LBB193:
 403              	.LBB194:
  99:src/../h/riscv.hpp **** }
 404              		.loc 2 99 5
  99:src/../h/riscv.hpp **** }
 405              		.loc 2 99 59 is_stmt 0
 406              	#APP
 407              	# 99 "src/../h/riscv.hpp" 1
 408              		csrw sepc, s1
 409              	# 0 "" 2
 410              	.LVL22:
 411              	#NO_APP
 412              	.LBE194:
 413              	.LBE193:
  39:src/kernel.cpp ****         return;
 414              		.loc 1 39 9 is_stmt 1
 415              	.LBB195:
 416              	.LBB196:
 129:src/../h/riscv.hpp **** 
 130:src/../h/riscv.hpp **** inline void RiscV::setSip(uint64 mask) {
 131:src/../h/riscv.hpp ****     asm volatile("csrs sip, %[mask]":: [mask] "r" (mask));
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline void RiscV::clearSip(uint64 mask) {
 135:src/../h/riscv.hpp ****     asm volatile("csrc sip, %[mask]":: [mask] "r" (mask));
 417              		.loc 2 135 5
 418              		.loc 2 135 58 is_stmt 0
 419 0188 93072000 		li	a5,2
 420              	#APP
GAS LISTING /tmp/cce9m9ZT.s 			page 15


 421              	# 135 "src/../h/riscv.hpp" 1
 136              	}
 422              		csrc sip, a5
 423              	# 0 "" 2
 424              	.LVL23:
 425              	#NO_APP
 426              	.LBE196:
 427              	.LBE195:
  40:src/kernel.cpp ****     }
 428              		.loc 1 40 9 is_stmt 1
 429 0190 6FF01FF7 		j	.L3
 430              	.L18:
 431              	.LBB197:
 432              	.LBB190:
  65:src/../h/kernel.hpp ****             Kernel::mem_free_handler();
 433              		.loc 3 65 9
  66:src/../h/kernel.hpp ****             break;
 434              		.loc 3 66 13
 435              	.LBB162:
 436              	.LBB163:
 113:src/../h/kernel.hpp **** }
 114:src/../h/kernel.hpp **** 
 115:src/../h/kernel.hpp **** //0x02
 116:src/../h/kernel.hpp **** inline void Kernel::mem_free_handler() {
 117:src/../h/kernel.hpp ****     volatile uint64 arg0;
 437              		.loc 3 117 5
 118:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 438              		.loc 3 118 5
 439              		.loc 3 118 55 is_stmt 0
 440              	#APP
 441              	# 118 "src/../h/kernel.hpp" 1
 119              	    MemoryAllocator::free((void*)arg0);
 442              		mv a5, a0
 443              	# 0 "" 2
 444              	#NO_APP
 445 0198 233CF4F6 		sd	a5,-136(s0)
 446              		.loc 3 119 5 is_stmt 1
 447              		.loc 3 119 26 is_stmt 0
 448 019c 033584F7 		ld	a0,-136(s0)
 449 01a0 97000000 		call	_ZN15MemoryAllocator4freeEPv@plt
 449      E7800000 
 450              	.LVL24:
 120:src/../h/kernel.hpp **** }
 451              		.loc 3 120 1
 452 01a8 6FF05FFD 		j	.L20
 453              	.L17:
 454              	.LBE163:
 455              	.LBE162:
  68:src/../h/kernel.hpp ****             Kernel::thread_create_handler();
 456              		.loc 3 68 9 is_stmt 1
  69:src/../h/kernel.hpp ****             break;
 457              		.loc 3 69 13
 458              	.LBB164:
 459              	.LBB165:
 121:src/../h/kernel.hpp **** 
 122:src/../h/kernel.hpp **** //0x11
 123:src/../h/kernel.hpp **** inline void Kernel::thread_create_handler() {
GAS LISTING /tmp/cce9m9ZT.s 			page 16


 124:src/../h/kernel.hpp ****     volatile uint64 arg0, arg1, arg2;
 460              		.loc 3 124 5
 125:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 461              		.loc 3 125 5
 462              		.loc 3 125 55 is_stmt 0
 463              	#APP
 464              	# 125 "src/../h/kernel.hpp" 1
 126              	    asm volatile ("mv %[arg1], a1": [arg1] "=r"(arg1));
 465              		mv a5, a0
 466              	# 0 "" 2
 467              	#NO_APP
 468 01b0 2334F4F8 		sd	a5,-120(s0)
 469              		.loc 3 126 5 is_stmt 1
 470              		.loc 3 126 55 is_stmt 0
 471              	#APP
 472              	# 126 "src/../h/kernel.hpp" 1
 127              	    asm volatile ("mv %[arg2], a2": [arg2] "=r"(arg2));
 473              		mv a5, a1
 474              	# 0 "" 2
 475              	#NO_APP
 476 01b8 2338F4F8 		sd	a5,-112(s0)
 477              		.loc 3 127 5 is_stmt 1
 478              		.loc 3 127 55 is_stmt 0
 479              	#APP
 480              	# 127 "src/../h/kernel.hpp" 1
 128              	
 481              		mv a5, a2
 482              	# 0 "" 2
 483              	#NO_APP
 484 01c0 233CF4F8 		sd	a5,-104(s0)
 129:src/../h/kernel.hpp ****     *(TCB**)arg0 = TCB::createTCB((TCB::Body)arg1, (void*)arg2);
 485              		.loc 3 129 5 is_stmt 1
 486              		.loc 3 129 34 is_stmt 0
 487 01c4 033504F9 		ld	a0,-112(s0)
 488 01c8 833584F9 		ld	a1,-104(s0)
 489              		.loc 3 129 5
 490 01cc 833984F8 		ld	s3,-120(s0)
 491              		.loc 3 129 34
 492 01d0 97000000 		call	_ZN3TCB9createTCBEPFvPvES0_@plt
 492      E7800000 
 493              	.LVL25:
 494              		.loc 3 129 18
 495 01d8 23B0A900 		sd	a0,0(s3)
 130:src/../h/kernel.hpp **** 
 131:src/../h/kernel.hpp ****     asm volatile("mv a0, zero");
 496              		.loc 3 131 5 is_stmt 1
 497              		.loc 3 131 32 is_stmt 0
 498              	#APP
 499              	# 131 "src/../h/kernel.hpp" 1
 132              	    if (!(*(TCB**)arg0)) asm volatile("addi a0, a0, -1");
 500              		mv a0, zero
 501              	# 0 "" 2
 502              		.loc 3 132 5 is_stmt 1
 503              		.loc 3 132 11 is_stmt 0
 504              	#NO_APP
 505 01e0 833784F8 		ld	a5,-120(s0)
 506 01e4 83B70700 		ld	a5,0(a5)
GAS LISTING /tmp/cce9m9ZT.s 			page 17


 507              		.loc 3 132 5
 508 01e8 E39A07F8 		bnez	a5,.L20
 509              		.loc 3 132 26 is_stmt 1
 510              		.loc 3 132 57 is_stmt 0
 511              	#APP
 512              	# 132 "src/../h/kernel.hpp" 1
 133              	}
 513              		addi a0, a0, -1
 514              	# 0 "" 2
 515              		.loc 3 133 1
 516              	#NO_APP
 517 01f0 6FF0DFF8 		j	.L20
 518              	.L16:
 519              	.LBE165:
 520              	.LBE164:
  71:src/../h/kernel.hpp ****             Kernel::thread_exit_handler();
 521              		.loc 3 71 9 is_stmt 1
  72:src/../h/kernel.hpp ****             break;
 522              		.loc 3 72 13
 523              	.LBB166:
 524              	.LBB167:
 134:src/../h/kernel.hpp **** 
 135:src/../h/kernel.hpp **** //0x12
 136:src/../h/kernel.hpp **** inline void Kernel::thread_exit_handler() {
 137:src/../h/kernel.hpp ****     TCB::running->setFinished(true);
 525              		.loc 3 137 5
 526              		.loc 3 137 30 is_stmt 0
 527 01f4 97070000 		la	a5,_ZN3TCB7runningE
 527      83B70700 
 528 01fc 83B70700 		ld	a5,0(a5)
 529              	.LVL26:
 530              	.LBB168:
 531              	.LBB169:
 532              		.file 4 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by os on 9/9/22.
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OSMIUM_TCB_HPP
   6:src/../h/tcb.hpp **** #define OSMIUM_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** //#include "../h/scheduler.hpp"
  10:src/../h/tcb.hpp **** #include "riscv.hpp"
  11:src/../h/tcb.hpp **** #include "memory_allocator.hpp"
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp **** class Scheduler;
  14:src/../h/tcb.hpp **** 
  15:src/../h/tcb.hpp **** 
  16:src/../h/tcb.hpp **** class TCB {
  17:src/../h/tcb.hpp **** public:
  18:src/../h/tcb.hpp ****     using Body = void (*)(void*);
  19:src/../h/tcb.hpp **** 
  20:src/../h/tcb.hpp ****     static TCB* createTCB(Body body, void* args);
  21:src/../h/tcb.hpp **** 
  22:src/../h/tcb.hpp ****     static TCB* createDeactivatedTCB(Body body, void* args);
  23:src/../h/tcb.hpp **** 
GAS LISTING /tmp/cce9m9ZT.s 			page 18


  24:src/../h/tcb.hpp ****     static TCB* createSupervisorTCB(Body body, void* args);
  25:src/../h/tcb.hpp **** 
  26:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  27:src/../h/tcb.hpp **** 
  28:src/../h/tcb.hpp ****     void setFinished(bool val) { finished = val; }
 533              		.loc 4 28 34 is_stmt 1
 534              		.loc 4 28 43 is_stmt 0
 535 0200 13071000 		li	a4,1
 536 0204 238CE700 		sb	a4,24(a5)
 537              	.LVL27:
 538              	.LBE169:
 539              	.LBE168:
 138:src/../h/kernel.hpp ****     asm volatile ("addi a0, zero, 0");
 540              		.loc 3 138 5 is_stmt 1
 541              		.loc 3 138 38 is_stmt 0
 542              	#APP
 543              	# 138 "src/../h/kernel.hpp" 1
 139              	    //TCB::yield();
 140:src/../h/kernel.hpp ****     TCB::dispatch();
 544              		addi a0, zero, 0
 545              	# 0 "" 2
 546              		.loc 3 140 5 is_stmt 1
 547              		.loc 3 140 18 is_stmt 0
 548              	#NO_APP
 549 020c 97000000 		call	_ZN3TCB8dispatchEv@plt
 549      E7800000 
 550              	.LVL28:
 141:src/../h/kernel.hpp **** }
 551              		.loc 3 141 1
 552 0214 6FF09FF6 		j	.L20
 553              	.L15:
 554              	.LBE167:
 555              	.LBE166:
  74:src/../h/kernel.hpp ****             Kernel::thread_dispatch_handler();
 556              		.loc 3 74 9 is_stmt 1
  75:src/../h/kernel.hpp ****             break;
 557              		.loc 3 75 13
 558              	.LBB170:
 559              	.LBB171:
 142:src/../h/kernel.hpp **** 
 143:src/../h/kernel.hpp **** //0x13
 144:src/../h/kernel.hpp **** inline void Kernel::thread_dispatch_handler() {
 145:src/../h/kernel.hpp ****     //TCB::yield();
 146:src/../h/kernel.hpp ****     TCB::dispatch();
 560              		.loc 3 146 5
 561              		.loc 3 146 18 is_stmt 0
 562 0218 97000000 		call	_ZN3TCB8dispatchEv@plt
 562      E7800000 
 563              	.LVL29:
 147:src/../h/kernel.hpp **** }
 564              		.loc 3 147 1
 565 0220 6FF0DFF5 		j	.L20
 566              	.L14:
 567              	.LBE171:
 568              	.LBE170:
  77:src/../h/kernel.hpp ****             Kernel::thread_create_deactivated_handler();
 569              		.loc 3 77 9 is_stmt 1
GAS LISTING /tmp/cce9m9ZT.s 			page 19


  78:src/../h/kernel.hpp ****             break;
 570              		.loc 3 78 13
 571              	.LBB172:
 572              	.LBB173:
 148:src/../h/kernel.hpp **** 
 149:src/../h/kernel.hpp **** //0x14
 150:src/../h/kernel.hpp **** inline void Kernel::thread_create_deactivated_handler() {
 151:src/../h/kernel.hpp ****     volatile uint64 arg0, arg1, arg2;
 573              		.loc 3 151 5
 152:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 574              		.loc 3 152 5
 575              		.loc 3 152 55 is_stmt 0
 576              	#APP
 577              	# 152 "src/../h/kernel.hpp" 1
 153              	    asm volatile ("mv %[arg1], a1": [arg1] "=r"(arg1));
 578              		mv a5, a0
 579              	# 0 "" 2
 580              	#NO_APP
 581 0228 2330F4FA 		sd	a5,-96(s0)
 582              		.loc 3 153 5 is_stmt 1
 583              		.loc 3 153 55 is_stmt 0
 584              	#APP
 585              	# 153 "src/../h/kernel.hpp" 1
 154              	    asm volatile ("mv %[arg2], a2": [arg2] "=r"(arg2));
 586              		mv a5, a1
 587              	# 0 "" 2
 588              	#NO_APP
 589 0230 2334F4FA 		sd	a5,-88(s0)
 590              		.loc 3 154 5 is_stmt 1
 591              		.loc 3 154 55 is_stmt 0
 592              	#APP
 593              	# 154 "src/../h/kernel.hpp" 1
 155              	
 594              		mv a5, a2
 595              	# 0 "" 2
 596              	#NO_APP
 597 0238 2338F4FA 		sd	a5,-80(s0)
 156:src/../h/kernel.hpp ****     *(TCB**)arg0 = TCB::createDeactivatedTCB((TCB::Body)arg1, (void*)arg2);
 598              		.loc 3 156 5 is_stmt 1
 599              		.loc 3 156 45 is_stmt 0
 600 023c 033584FA 		ld	a0,-88(s0)
 601 0240 833504FB 		ld	a1,-80(s0)
 602              		.loc 3 156 5
 603 0244 833904FA 		ld	s3,-96(s0)
 604              		.loc 3 156 45
 605 0248 97000000 		call	_ZN3TCB20createDeactivatedTCBEPFvPvES0_@plt
 605      E7800000 
 606              	.LVL30:
 607              		.loc 3 156 18
 608 0250 23B0A900 		sd	a0,0(s3)
 157:src/../h/kernel.hpp **** 
 158:src/../h/kernel.hpp ****     asm volatile("mv a0, zero");
 609              		.loc 3 158 5 is_stmt 1
 610              		.loc 3 158 32 is_stmt 0
 611              	#APP
 612              	# 158 "src/../h/kernel.hpp" 1
 159              	    if (!(*(TCB**)arg0)) asm volatile("addi a0, a0, -1");
GAS LISTING /tmp/cce9m9ZT.s 			page 20


 613              		mv a0, zero
 614              	# 0 "" 2
 615              		.loc 3 159 5 is_stmt 1
 616              		.loc 3 159 11 is_stmt 0
 617              	#NO_APP
 618 0258 833704FA 		ld	a5,-96(s0)
 619 025c 83B70700 		ld	a5,0(a5)
 620              		.loc 3 159 5
 621 0260 E39E07F0 		bnez	a5,.L20
 622              		.loc 3 159 26 is_stmt 1
 623              		.loc 3 159 57 is_stmt 0
 624              	#APP
 625              	# 159 "src/../h/kernel.hpp" 1
 160              	}
 626              		addi a0, a0, -1
 627              	# 0 "" 2
 628              		.loc 3 160 1
 629              	#NO_APP
 630 0268 6FF05FF1 		j	.L20
 631              	.L13:
 632              	.LBE173:
 633              	.LBE172:
  80:src/../h/kernel.hpp ****             Kernel::sem_open_handler();
 634              		.loc 3 80 9 is_stmt 1
  81:src/../h/kernel.hpp ****             break;
 635              		.loc 3 81 13
 636              	.LBB174:
 637              	.LBB175:
 161:src/../h/kernel.hpp **** 
 162:src/../h/kernel.hpp **** //0x021
 163:src/../h/kernel.hpp **** inline void Kernel::sem_open_handler() {
 164:src/../h/kernel.hpp ****     volatile uint64 arg0, arg1;
 638              		.loc 3 164 5
 165:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 639              		.loc 3 165 5
 640              		.loc 3 165 55 is_stmt 0
 641              	#APP
 642              	# 165 "src/../h/kernel.hpp" 1
 166              	    asm volatile ("mv %[arg1], a1": [arg1] "=r"(arg1));
 643              		mv a5, a0
 644              	# 0 "" 2
 645              	#NO_APP
 646 0270 233CF4FA 		sd	a5,-72(s0)
 647              		.loc 3 166 5 is_stmt 1
 648              		.loc 3 166 55 is_stmt 0
 649              	#APP
 650              	# 166 "src/../h/kernel.hpp" 1
 167              	
 651              		mv a5, a1
 652              	# 0 "" 2
 653              	#NO_APP
 654 0278 2330F4FC 		sd	a5,-64(s0)
 168:src/../h/kernel.hpp ****     *(Sem**)arg0 = Sem::createSem((unsigned)arg1);
 655              		.loc 3 168 5 is_stmt 1
 656              		.loc 3 168 34 is_stmt 0
 657 027c 033504FC 		ld	a0,-64(s0)
 658              		.loc 3 168 5
GAS LISTING /tmp/cce9m9ZT.s 			page 21


 659 0280 833984FB 		ld	s3,-72(s0)
 660              		.loc 3 168 34
 661 0284 1B050500 		sext.w	a0,a0
 662 0288 97000000 		call	_ZN3Sem9createSemEj@plt
 662      E7800000 
 663              	.LVL31:
 664              		.loc 3 168 18
 665 0290 23B0A900 		sd	a0,0(s3)
 169:src/../h/kernel.hpp **** 
 170:src/../h/kernel.hpp ****     asm volatile("mv a0, zero");
 666              		.loc 3 170 5 is_stmt 1
 667              		.loc 3 170 32 is_stmt 0
 668              	#APP
 669              	# 170 "src/../h/kernel.hpp" 1
 171              	    if (!(*(Sem**)arg0)) asm volatile("addi a0, a0, -1");
 670              		mv a0, zero
 671              	# 0 "" 2
 672              		.loc 3 171 5 is_stmt 1
 673              		.loc 3 171 11 is_stmt 0
 674              	#NO_APP
 675 0298 833784FB 		ld	a5,-72(s0)
 676 029c 83B70700 		ld	a5,0(a5)
 677              		.loc 3 171 5
 678 02a0 E39E07EC 		bnez	a5,.L20
 679              		.loc 3 171 26 is_stmt 1
 680              		.loc 3 171 57 is_stmt 0
 681              	#APP
 682              	# 171 "src/../h/kernel.hpp" 1
 172              	}
 683              		addi a0, a0, -1
 684              	# 0 "" 2
 685              		.loc 3 172 1
 686              	#NO_APP
 687 02a8 6FF05FED 		j	.L20
 688              	.L12:
 689              	.LBE175:
 690              	.LBE174:
  83:src/../h/kernel.hpp ****             Kernel::sem_close_handler();
 691              		.loc 3 83 9 is_stmt 1
  84:src/../h/kernel.hpp ****             break;
 692              		.loc 3 84 13
 693              	.LBB176:
 694              	.LBB177:
 173:src/../h/kernel.hpp **** 
 174:src/../h/kernel.hpp **** //0x22
 175:src/../h/kernel.hpp **** inline void Kernel::sem_close_handler() {
 176:src/../h/kernel.hpp ****     volatile uint64 arg0;
 695              		.loc 3 176 5
 177:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 696              		.loc 3 177 5
 697              		.loc 3 177 55 is_stmt 0
 698              	#APP
 699              	# 177 "src/../h/kernel.hpp" 1
 178              	    delete *(Sem**)arg0;
 700              		mv a5, a0
 701              	# 0 "" 2
 702              	#NO_APP
GAS LISTING /tmp/cce9m9ZT.s 			page 22


 703 02b0 2334F4FC 		sd	a5,-56(s0)
 704              		.loc 3 178 5 is_stmt 1
 705              		.loc 3 178 12 is_stmt 0
 706 02b4 833784FC 		ld	a5,-56(s0)
 707 02b8 83B90700 		ld	s3,0(a5)
 708              		.loc 3 178 24
 709 02bc 638E0900 		beqz	s3,.L24
 710              		.loc 3 178 20
 711 02c0 13850900 		mv	a0,s3
 712 02c4 97000000 		call	_ZN3SemD1Ev@plt
 712      E7800000 
 713              	.LVL32:
 714              	.LBB178:
 715              	.LBB179:
 716              		.file 5 "src/../h/sem.hpp"
   1:src/../h/sem.hpp **** //
   2:src/../h/sem.hpp **** // Created by os on 9/12/22.
   3:src/../h/sem.hpp **** //
   4:src/../h/sem.hpp **** 
   5:src/../h/sem.hpp **** #ifndef OSMIUM_SEM_HPP
   6:src/../h/sem.hpp **** #define OSMIUM_SEM_HPP
   7:src/../h/sem.hpp **** 
   8:src/../h/sem.hpp **** #include "../lib/hw.h"
   9:src/../h/sem.hpp **** #include "tcb.hpp"
  10:src/../h/sem.hpp **** #include "list.hpp"
  11:src/../h/sem.hpp **** #include "scheduler.hpp"
  12:src/../h/sem.hpp **** 
  13:src/../h/sem.hpp **** class Sem {
  14:src/../h/sem.hpp **** public:
  15:src/../h/sem.hpp ****     static Sem* createSem(unsigned init);
  16:src/../h/sem.hpp **** 
  17:src/../h/sem.hpp ****     ~Sem();
  18:src/../h/sem.hpp **** 
  19:src/../h/sem.hpp ****     int semWait();
  20:src/../h/sem.hpp **** 
  21:src/../h/sem.hpp ****     int semSignal();
  22:src/../h/sem.hpp **** 
  23:src/../h/sem.hpp ****     void* operator new(size_t size) {
  24:src/../h/sem.hpp ****         return MemoryAllocator::allocate(size);
  25:src/../h/sem.hpp ****     }
  26:src/../h/sem.hpp **** 
  27:src/../h/sem.hpp ****     void* operator new[](size_t size) {
  28:src/../h/sem.hpp ****         return MemoryAllocator::allocate(size);
  29:src/../h/sem.hpp ****     }
  30:src/../h/sem.hpp **** 
  31:src/../h/sem.hpp ****     void operator delete(void* ptr) {
  32:src/../h/sem.hpp ****         MemoryAllocator::free(ptr);
 717              		.loc 5 32 9 is_stmt 1
 718              		.loc 5 32 30 is_stmt 0
 719 02cc 13850900 		mv	a0,s3
 720 02d0 97000000 		call	_ZN15MemoryAllocator4freeEPv@plt
 720      E7800000 
 721              	.LVL33:
 722              	.L24:
 723              	.LBE179:
 724              	.LBE178:
 179:src/../h/kernel.hpp **** 
GAS LISTING /tmp/cce9m9ZT.s 			page 23


 180:src/../h/kernel.hpp ****     asm volatile("mv a0, zero");
 725              		.loc 3 180 5 is_stmt 1
 726              		.loc 3 180 32 is_stmt 0
 727              	#APP
 728              	# 180 "src/../h/kernel.hpp" 1
 181              	}
 729              		mv a0, zero
 730              	# 0 "" 2
 731              		.loc 3 181 1
 732              	#NO_APP
 733 02dc 6FF01FEA 		j	.L20
 734              	.L11:
 735              	.LBE177:
 736              	.LBE176:
  86:src/../h/kernel.hpp ****             Kernel::sem_wait_handler();
 737              		.loc 3 86 9 is_stmt 1
  87:src/../h/kernel.hpp ****             break;
 738              		.loc 3 87 13
 739              	.LBB180:
 740              	.LBB181:
 182:src/../h/kernel.hpp **** 
 183:src/../h/kernel.hpp **** //0x23
 184:src/../h/kernel.hpp **** inline void Kernel::sem_wait_handler() {
 185:src/../h/kernel.hpp ****     volatile uint64 arg0;
 741              		.loc 3 185 5
 186:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 742              		.loc 3 186 5
 743              		.loc 3 186 55 is_stmt 0
 744              	#APP
 745              	# 186 "src/../h/kernel.hpp" 1
 187              	    ((Sem*)arg0)->semWait();
 746              		mv a5, a0
 747              	# 0 "" 2
 748              	#NO_APP
 749 02e4 2338F4F6 		sd	a5,-144(s0)
 750              		.loc 3 187 5 is_stmt 1
 751              		.loc 3 187 26 is_stmt 0
 752 02e8 033504F7 		ld	a0,-144(s0)
 753 02ec 97000000 		call	_ZN3Sem7semWaitEv@plt
 753      E7800000 
 754              	.LVL34:
 188:src/../h/kernel.hpp **** 
 189:src/../h/kernel.hpp ****     //asm volatile("mv a0, zero");
 190:src/../h/kernel.hpp **** }
 755              		.loc 3 190 1
 756 02f4 6FF09FE8 		j	.L20
 757              	.L10:
 758              	.LBE181:
 759              	.LBE180:
  89:src/../h/kernel.hpp ****             Kernel::sem_signal_handler();
 760              		.loc 3 89 9 is_stmt 1
  90:src/../h/kernel.hpp ****             break;
 761              		.loc 3 90 13
 762              	.LBB182:
 763              	.LBB183:
 191:src/../h/kernel.hpp **** 
 192:src/../h/kernel.hpp **** //0x24
GAS LISTING /tmp/cce9m9ZT.s 			page 24


 193:src/../h/kernel.hpp **** inline void Kernel::sem_signal_handler() {
 194:src/../h/kernel.hpp ****     volatile uint64 arg0;
 764              		.loc 3 194 5
 195:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 765              		.loc 3 195 5
 766              		.loc 3 195 55 is_stmt 0
 767              	#APP
 768              	# 195 "src/../h/kernel.hpp" 1
 196              	    ((Sem*)arg0)->semSignal();
 769              		mv a5, a0
 770              	# 0 "" 2
 771              	#NO_APP
 772 02fc 2334F4F6 		sd	a5,-152(s0)
 773              		.loc 3 196 5 is_stmt 1
 774              		.loc 3 196 28 is_stmt 0
 775 0300 033584F6 		ld	a0,-152(s0)
 776 0304 97000000 		call	_ZN3Sem9semSignalEv@plt
 776      E7800000 
 777              	.LVL35:
 197:src/../h/kernel.hpp **** }
 778              		.loc 3 197 1
 779 030c 6FF01FE7 		j	.L20
 780              	.L9:
 781              	.LBE183:
 782              	.LBE182:
  92:src/../h/kernel.hpp ****             Kernel::time_sleep_handler();
 783              		.loc 3 92 9 is_stmt 1
  93:src/../h/kernel.hpp ****             break;
 784              		.loc 3 93 13
 785              	.LBB184:
 786              	.LBB185:
 198:src/../h/kernel.hpp **** 
 199:src/../h/kernel.hpp **** //0x31
 200:src/../h/kernel.hpp **** inline void Kernel::time_sleep_handler() {
 201:src/../h/kernel.hpp ****     volatile uint64 arg0;
 787              		.loc 3 201 5
 202:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 788              		.loc 3 202 5
 789              		.loc 3 202 55 is_stmt 0
 790              	#APP
 791              	# 202 "src/../h/kernel.hpp" 1
 203              	    Scheduler::timeSleep((time_t)arg0);
 792              		mv a5, a0
 793              	# 0 "" 2
 794              	#NO_APP
 795 0314 2330F4F6 		sd	a5,-160(s0)
 796              		.loc 3 203 5 is_stmt 1
 797              		.loc 3 203 25 is_stmt 0
 798 0318 033504F6 		ld	a0,-160(s0)
 799 031c 97000000 		call	_ZN9Scheduler9timeSleepEm@plt
 799      E7800000 
 800              	.LVL36:
 204:src/../h/kernel.hpp **** }
 801              		.loc 3 204 1
 802 0324 6FF09FE5 		j	.L20
 803              	.L8:
 804              	.LBE185:
GAS LISTING /tmp/cce9m9ZT.s 			page 25


 805              	.LBE184:
  95:src/../h/kernel.hpp ****             Kernel::getc_handler();
 806              		.loc 3 95 9 is_stmt 1
  96:src/../h/kernel.hpp ****             break;
 807              		.loc 3 96 13
 808              	.LBB186:
 809              	.LBB187:
 205:src/../h/kernel.hpp **** 
 206:src/../h/kernel.hpp **** //0x41
 207:src/../h/kernel.hpp **** inline void Kernel::getc_handler() {
 208:src/../h/kernel.hpp ****     volatile uint64 arg0;
 810              		.loc 3 208 5
 209:src/../h/kernel.hpp ****     //arg0 = __getc();
 210:src/../h/kernel.hpp ****     //__print_string("getc");
 211:src/../h/kernel.hpp ****     arg0 = Uart::rxGet();
 811              		.loc 3 211 5
 812              		.loc 3 211 23 is_stmt 0
 813 0328 97000000 		call	_ZN4Uart5rxGetEv@plt
 813      E7800000 
 814              	.LVL37:
 815              		.loc 3 211 10
 816 0330 233CA4F4 		sd	a0,-168(s0)
 212:src/../h/kernel.hpp ****     asm volatile ("mv a0, %[arg0]":: [arg0] "r"(arg0));
 817              		.loc 3 212 5 is_stmt 1
 818              		.loc 3 212 49 is_stmt 0
 819 0334 833784F5 		ld	a5,-168(s0)
 820              		.loc 3 212 55
 821              	#APP
 822              	# 212 "src/../h/kernel.hpp" 1
 213              	}
 823              		mv a0, a5
 824              	# 0 "" 2
 825              		.loc 3 213 1
 826              	#NO_APP
 827 033c 6FF01FE4 		j	.L20
 828              	.L6:
 829              	.LBE187:
 830              	.LBE186:
  98:src/../h/kernel.hpp ****             Kernel::putc_handler();
 831              		.loc 3 98 9 is_stmt 1
  99:src/../h/kernel.hpp ****             break;
 832              		.loc 3 99 13
 833              	.LBB188:
 834              	.LBB189:
 214:src/../h/kernel.hpp **** 
 215:src/../h/kernel.hpp **** //0x42
 216:src/../h/kernel.hpp **** inline void Kernel::putc_handler() {
 217:src/../h/kernel.hpp ****     volatile uint64 arg0;
 835              		.loc 3 217 5
 218:src/../h/kernel.hpp ****     asm volatile ("mv %[arg0], a0": [arg0] "=r"(arg0));
 836              		.loc 3 218 5
 837              		.loc 3 218 55 is_stmt 0
 838              	#APP
 839              	# 218 "src/../h/kernel.hpp" 1
 219              	    //__putc(arg0);
 840              		mv a5, a0
 841              	# 0 "" 2
GAS LISTING /tmp/cce9m9ZT.s 			page 26


 842              	#NO_APP
 843 0344 2338F4F4 		sd	a5,-176(s0)
 220:src/../h/kernel.hpp ****     Uart::txPut(arg0);
 844              		.loc 3 220 5 is_stmt 1
 845              		.loc 3 220 16 is_stmt 0
 846 0348 033504F5 		ld	a0,-176(s0)
 847 034c 1375F50F 		andi	a0,a0,0xff
 848 0350 97000000 		call	_ZN4Uart5txPutEc@plt
 848      E7800000 
 849              	.LVL38:
 221:src/../h/kernel.hpp ****     //uart->tx
 222:src/../h/kernel.hpp **** }
 850              		.loc 3 222 1
 851 0358 6FF05FE2 		j	.L20
 852              	.L5:
 853              	.LBE189:
 854              	.LBE188:
 101:src/../h/kernel.hpp ****             asm volatile ("addi a0, zero, -1");
 855              		.loc 3 101 9 is_stmt 1
 102:src/../h/kernel.hpp ****             __print_string("Error: Invalid syscall id!");
 856              		.loc 3 102 13
 102:src/../h/kernel.hpp ****             __print_string("Error: Invalid syscall id!");
 857              		.loc 3 102 47 is_stmt 0
 858              	#APP
 859              	# 102 "src/../h/kernel.hpp" 1
 103:src/../h/kernel.hpp ****             break;
 860              		addi a0, zero, -1
 861              	# 0 "" 2
 862              		.loc 3 103 13 is_stmt 1
 103:src/../h/kernel.hpp ****             break;
 863              		.loc 3 103 27 is_stmt 0
 864              	#NO_APP
 865 0360 17050000 		lla	a0,.LC0
 865      13050500 
 866 0368 97000000 		call	_Z14__print_stringPKc@plt
 866      E7800000 
 867              	.LVL39:
 104:src/../h/kernel.hpp ****     }
 868              		.loc 3 104 13 is_stmt 1
 869 0370 6FF0DFE0 		j	.L20
 870              	.LVL40:
 871              	.L34:
 872              	.LBE190:
 873              	.LBE197:
 874              	.LBE153:
 875              	.LBE226:
 876              	.LBB227:
 877              	.LBB199:
  43:src/kernel.cpp ****         Scheduler::timerInterrupt();
 878              		.loc 1 43 9
  43:src/kernel.cpp ****         Scheduler::timerInterrupt();
 879              		.loc 1 43 13 is_stmt 0
 880 0374 97070000 		la	a5,_ZN3TCB7runningE
 880      83B70700 
 881 037c 83B70700 		ld	a5,0(a5)
  43:src/kernel.cpp ****         Scheduler::timerInterrupt();
 882              		.loc 1 43 9
GAS LISTING /tmp/cce9m9ZT.s 			page 27


 883 0380 63800704 		beqz	a5,.L36
  44:src/kernel.cpp ****         TCB::incTimeSliceCounter();
 884              		.loc 1 44 9 is_stmt 1
  44:src/kernel.cpp ****         TCB::incTimeSliceCounter();
 885              		.loc 1 44 34 is_stmt 0
 886 0384 97000000 		call	_ZN9Scheduler14timerInterruptEv@plt
 886      E7800000 
 887              	.LVL41:
  45:src/kernel.cpp ****         if (TCB::getTimeSliceCounter() >= TCB::running->getTimeSlice())
 888              		.loc 1 45 9 is_stmt 1
 889              	.LBB200:
 890              	.LBB201:
  29:src/../h/tcb.hpp **** 
  30:src/../h/tcb.hpp ****     bool isBlocked() const { return blocked; }
  31:src/../h/tcb.hpp **** 
  32:src/../h/tcb.hpp ****     void setBlocked(bool val) { blocked = val; }
  33:src/../h/tcb.hpp **** 
  34:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  35:src/../h/tcb.hpp **** 
  36:src/../h/tcb.hpp ****     static TCB* running;
  37:src/../h/tcb.hpp **** 
  38:src/../h/tcb.hpp ****     //static void yield();
  39:src/../h/tcb.hpp **** 
  40:src/../h/tcb.hpp ****     static void dispatch();
  41:src/../h/tcb.hpp **** 
  42:src/../h/tcb.hpp ****     static void incTimeSliceCounter() { timeSliceCounter++; }
 891              		.loc 4 42 41
 892              		.loc 4 42 57 is_stmt 0
 893 038c 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 893      03370700 
 894 0394 83370700 		ld	a5,0(a4)
 895 0398 93871700 		addi	a5,a5,1
 896 039c 2330F700 		sd	a5,0(a4)
 897              	.LBE201:
 898              	.LBE200:
  46:src/kernel.cpp ****         {
 899              		.loc 1 46 9 is_stmt 1
 900              	.LBE199:
 901              	.LBE227:
  43:src/../h/tcb.hpp ****     static uint64 getTimeSliceCounter() { return timeSliceCounter; }
 902              		.loc 4 43 43
 903              	.LBB228:
 904              	.LBB221:
 905              	.LBB202:
  46:src/kernel.cpp ****         {
 906              		.loc 1 46 69 is_stmt 0
 907 03a0 17070000 		la	a4,_ZN3TCB7runningE
 907      03370700 
 908 03a8 03370700 		ld	a4,0(a4)
 909              	.LVL42:
 910              	.LBB203:
 911              	.LBB204:
  34:src/../h/tcb.hpp **** 
 912              		.loc 4 34 35 is_stmt 1
  34:src/../h/tcb.hpp **** 
 913              		.loc 4 34 42 is_stmt 0
 914 03ac 03370702 		ld	a4,32(a4)
GAS LISTING /tmp/cce9m9ZT.s 			page 28


 915              	.LVL43:
 916              	.LBE204:
 917              	.LBE203:
  46:src/kernel.cpp ****         {
 918              		.loc 1 46 9
 919 03b0 63FEE700 		bleu	a4,a5,.L37
 920              	.LVL44:
 921              	.L28:
 922              	.LBE202:
  56:src/kernel.cpp ****         return;
 923              		.loc 1 56 9 is_stmt 1
 924              	.LBB216:
 925              	.LBB217:
 135:src/../h/riscv.hpp **** }
 926              		.loc 2 135 5
 135:src/../h/riscv.hpp **** }
 927              		.loc 2 135 58 is_stmt 0
 928 03b4 93072000 		li	a5,2
 929              	#APP
 930              	# 135 "src/../h/riscv.hpp" 1
 931              		csrc sip, a5
 932              	# 0 "" 2
 933              	.LVL45:
 934              	#NO_APP
 935              	.LBE217:
 936              	.LBE216:
  57:src/kernel.cpp ****     }
 937              		.loc 1 57 9 is_stmt 1
 938 03bc 6FF05FD4 		j	.L3
 939              	.LVL46:
 940              	.L36:
  43:src/kernel.cpp ****         Scheduler::timerInterrupt();
 941              		.loc 1 43 30
 942              	.LBB218:
 943              	.LBB219:
 135:src/../h/riscv.hpp **** }
 944              		.loc 2 135 5
 135:src/../h/riscv.hpp **** }
 945              		.loc 2 135 58 is_stmt 0
 946 03c0 93072000 		li	a5,2
 947              	#APP
 948              	# 135 "src/../h/riscv.hpp" 1
 949              		csrc sip, a5
 950              	# 0 "" 2
 951              	.LVL47:
 952              	#NO_APP
 953              	.LBE219:
 954              	.LBE218:
  43:src/kernel.cpp ****         Scheduler::timerInterrupt();
 955              		.loc 1 43 60 is_stmt 1
 956 03c8 6FF09FD3 		j	.L3
 957              	.L37:
 958              	.LBB220:
 959              	.LBB205:
  49:src/kernel.cpp ****             uint64 sstatus = RiscV::readSstatus();
 960              		.loc 1 49 13
 961              	.LBB206:
GAS LISTING /tmp/cce9m9ZT.s 			page 29


 962              	.LBB207:
  93:src/../h/riscv.hpp ****     asm volatile("csrr %[sepc], sepc": [sepc] "=r" (sepc));
 963              		.loc 2 93 5
  94:src/../h/riscv.hpp ****     return sepc;
 964              		.loc 2 94 5
  94:src/../h/riscv.hpp ****     return sepc;
 965              		.loc 2 94 59 is_stmt 0
 966              	#APP
 967              	# 94 "src/../h/riscv.hpp" 1
 968              		csrr a5, sepc
 969              	# 0 "" 2
 970              	#NO_APP
 971 03d0 233CF4F2 		sd	a5,-200(s0)
  95:src/../h/riscv.hpp **** }
 972              		.loc 2 95 5 is_stmt 1
  95:src/../h/riscv.hpp **** }
 973              		.loc 2 95 12 is_stmt 0
 974 03d4 833484F3 		ld	s1,-200(s0)
 975              	.LVL48:
 976              	.LBE207:
 977              	.LBE206:
  50:src/kernel.cpp ****             TCB::resetTimeSliceCounter();
 978              		.loc 1 50 13 is_stmt 1
 979              	.LBB208:
 980              	.LBB209:
 121:src/../h/riscv.hpp ****     asm volatile("csrr %[sstatus], sstatus": [sstatus] "=r" (sstatus));
 981              		.loc 2 121 5
 122:src/../h/riscv.hpp ****     return sstatus;
 982              		.loc 2 122 5
 122:src/../h/riscv.hpp ****     return sstatus;
 983              		.loc 2 122 71 is_stmt 0
 984              	#APP
 985              	# 122 "src/../h/riscv.hpp" 1
 986              		csrr a5, sstatus
 987              	# 0 "" 2
 988              	#NO_APP
 989 03dc 2338F4F2 		sd	a5,-208(s0)
 123:src/../h/riscv.hpp **** }
 990              		.loc 2 123 5 is_stmt 1
 123:src/../h/riscv.hpp **** }
 991              		.loc 2 123 12 is_stmt 0
 992 03e0 033904F3 		ld	s2,-208(s0)
 993              	.LVL49:
 994              	.LBE209:
 995              	.LBE208:
  51:src/kernel.cpp ****             TCB::dispatch();
 996              		.loc 1 51 13 is_stmt 1
 997              	.LBB210:
 998              	.LBB211:
  44:src/../h/tcb.hpp ****     static void resetTimeSliceCounter() { timeSliceCounter = 0; }
 999              		.loc 4 44 43
 1000              		.loc 4 44 60 is_stmt 0
 1001 03e4 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 1001      83B70700 
 1002 03ec 23B00700 		sd	zero,0(a5)
 1003              	.LBE211:
 1004              	.LBE210:
GAS LISTING /tmp/cce9m9ZT.s 			page 30


  52:src/kernel.cpp ****             RiscV::writeSstatus(sstatus);
 1005              		.loc 1 52 13 is_stmt 1
  52:src/kernel.cpp ****             RiscV::writeSstatus(sstatus);
 1006              		.loc 1 52 26 is_stmt 0
 1007 03f0 97000000 		call	_ZN3TCB8dispatchEv@plt
 1007      E7800000 
 1008              	.LVL50:
  53:src/kernel.cpp ****             RiscV::writeSepc(sepc);
 1009              		.loc 1 53 13 is_stmt 1
 1010              	.LBB212:
 1011              	.LBB213:
 127:src/../h/riscv.hpp **** }
 1012              		.loc 2 127 5
 127:src/../h/riscv.hpp **** }
 1013              		.loc 2 127 71 is_stmt 0
 1014              	#APP
 1015              	# 127 "src/../h/riscv.hpp" 1
 1016              		csrw sstatus, s2
 1017              	# 0 "" 2
 1018              	.LVL51:
 1019              	#NO_APP
 1020              	.LBE213:
 1021              	.LBE212:
  54:src/kernel.cpp ****         }
 1022              		.loc 1 54 13 is_stmt 1
 1023              	.LBB214:
 1024              	.LBB215:
  99:src/../h/riscv.hpp **** }
 1025              		.loc 2 99 5
  99:src/../h/riscv.hpp **** }
 1026              		.loc 2 99 59 is_stmt 0
 1027              	#APP
 1028              	# 99 "src/../h/riscv.hpp" 1
 100:src/../h/riscv.hpp **** 
 1029              		csrw sepc, s1
 1030              	# 0 "" 2
 1031              		.loc 2 100 1
 1032              	#NO_APP
 1033 0400 6FF05FFB 		j	.L28
 1034              	.LVL52:
 1035              	.L35:
 1036              	.LBE215:
 1037              	.LBE214:
 1038              	.LBE205:
 1039              	.LBE220:
 1040              	.LBE221:
 1041              	.LBE228:
  62:src/kernel.cpp ****         RiscV::clearSip(RiscV::SEIP);
 1042              		.loc 1 62 9 is_stmt 1
 1043              	.LBB229:
 1044              	.LBB230:
 223:src/../h/kernel.hpp **** 
 224:src/../h/kernel.hpp **** //0x0a - hardware
 225:src/../h/kernel.hpp **** inline void Kernel::uart_handler() {
 226:src/../h/kernel.hpp ****     int id = plic_claim();
 1045              		.loc 3 226 5
 1046              		.loc 3 226 24 is_stmt 0
GAS LISTING /tmp/cce9m9ZT.s 			page 31


 1047 0404 97000000 		call	plic_claim@plt
 1047      E7800000 
 1048              	.LVL53:
 1049 040c 93040500 		mv	s1,a0
 1050              	.LVL54:
 227:src/../h/kernel.hpp ****     if (id == 0x0a) {
 1051              		.loc 3 227 5 is_stmt 1
 1052 0410 9307A000 		li	a5,10
 1053 0414 630EF500 		beq	a0,a5,.L31
 1054              	.LVL55:
 1055              	.L30:
 228:src/../h/kernel.hpp ****         while (Uart::getStatus() & Uart::RX) {
 229:src/../h/kernel.hpp ****             if(Uart::rxReceive() < 0) break;
 230:src/../h/kernel.hpp ****         }
 231:src/../h/kernel.hpp ****     }
 232:src/../h/kernel.hpp ****     plic_complete(id);
 1056              		.loc 3 232 5
 1057              		.loc 3 232 18 is_stmt 0
 1058 0418 13850400 		mv	a0,s1
 1059 041c 97000000 		call	plic_complete@plt
 1059      E7800000 
 1060              	.LVL56:
 1061              	.LBE230:
 1062              	.LBE229:
  63:src/kernel.cpp ****         return;
 1063              		.loc 1 63 9 is_stmt 1
 1064              	.LBB232:
 1065              	.LBB233:
 135:src/../h/riscv.hpp **** }
 1066              		.loc 2 135 5
 135:src/../h/riscv.hpp **** }
 1067              		.loc 2 135 58 is_stmt 0
 1068 0424 93070020 		li	a5,512
 1069              	#APP
 1070              	# 135 "src/../h/riscv.hpp" 1
 1071              		csrc sip, a5
 1072              	# 0 "" 2
 1073              	.LVL57:
 1074              	#NO_APP
 1075              	.LBE233:
 1076              	.LBE232:
  64:src/kernel.cpp ****     }
 1077              		.loc 1 64 9 is_stmt 1
 1078 042c 6FF05FCD 		j	.L3
 1079              	.L31:
 1080              	.LBB234:
 1081              	.LBB231:
 228:src/../h/kernel.hpp ****             if(Uart::rxReceive() < 0) break;
 1082              		.loc 3 228 9
 228:src/../h/kernel.hpp ****             if(Uart::rxReceive() < 0) break;
 1083              		.loc 3 228 42
 228:src/../h/kernel.hpp ****             if(Uart::rxReceive() < 0) break;
 1084              		.loc 3 228 31 is_stmt 0
 1085 0430 97000000 		call	_ZN4Uart9getStatusEv@plt
 1085      E7800000 
 1086              	.LVL58:
 228:src/../h/kernel.hpp ****             if(Uart::rxReceive() < 0) break;
GAS LISTING /tmp/cce9m9ZT.s 			page 32


 1087              		.loc 3 228 42
 1088 0438 93771500 		andi	a5,a0,1
 1089 043c E38E07FC 		beqz	a5,.L30
 229:src/../h/kernel.hpp ****         }
 1090              		.loc 3 229 13 is_stmt 1
 229:src/../h/kernel.hpp ****         }
 1091              		.loc 3 229 31 is_stmt 0
 1092 0440 97000000 		call	_ZN4Uart9rxReceiveEv@plt
 1092      E7800000 
 1093              	.LVL59:
 1094 0448 6FF09FFE 		j	.L31
 1095              	.LBE231:
 1096              	.LBE234:
 1097              		.cfi_endproc
 1098              	.LFE74:
 1100              		.align	2
 1101              		.globl	_ZN6Kernel12finishKernelEv
 1103              	_ZN6Kernel12finishKernelEv:
 1104              	.LFB75:
  79:src/kernel.cpp **** 
  80:src/kernel.cpp **** void Kernel::finishKernel() {
 1105              		.loc 1 80 29 is_stmt 1
 1106              		.cfi_startproc
 1107 044c 130101FF 		addi	sp,sp,-16
 1108              		.cfi_def_cfa_offset 16
 1109 0450 23341100 		sd	ra,8(sp)
 1110 0454 23308100 		sd	s0,0(sp)
 1111              		.cfi_offset 1, -8
 1112              		.cfi_offset 8, -16
 1113 0458 13040101 		addi	s0,sp,16
 1114              		.cfi_def_cfa 8, 0
  81:src/kernel.cpp ****     finished = true;
 1115              		.loc 1 81 5
 1116              		.loc 1 81 14 is_stmt 0
 1117 045c 93071000 		li	a5,1
 1118 0460 17070000 		sb	a5,.LANCHOR0,a4
 1118      2300F700 
  82:src/kernel.cpp ****     Scheduler::finish();
 1119              		.loc 1 82 5 is_stmt 1
 1120              		.loc 1 82 22 is_stmt 0
 1121 0468 97000000 		call	_ZN9Scheduler6finishEv@plt
 1121      E7800000 
 1122              	.LVL60:
  83:src/kernel.cpp ****     //Uart::finish();
  84:src/kernel.cpp **** }
 1123              		.loc 1 84 1
 1124 0470 83308100 		ld	ra,8(sp)
 1125              		.cfi_restore 1
 1126 0474 03340100 		ld	s0,0(sp)
 1127              		.cfi_restore 8
 1128              		.cfi_def_cfa 2, 16
 1129 0478 13010101 		addi	sp,sp,16
 1130              		.cfi_def_cfa_offset 0
 1131 047c 67800000 		jr	ra
 1132              		.cfi_endproc
 1133              	.LFE75:
 1135              		.align	2
GAS LISTING /tmp/cce9m9ZT.s 			page 33


 1136              		.globl	_ZN6Kernel10isFinishedEv
 1138              	_ZN6Kernel10isFinishedEv:
 1139              	.LFB76:
  85:src/kernel.cpp **** 
  86:src/kernel.cpp **** bool Kernel::isFinished() {
 1140              		.loc 1 86 27 is_stmt 1
 1141              		.cfi_startproc
 1142 0480 130101FF 		addi	sp,sp,-16
 1143              		.cfi_def_cfa_offset 16
 1144 0484 23348100 		sd	s0,8(sp)
 1145              		.cfi_offset 8, -8
 1146 0488 13040101 		addi	s0,sp,16
 1147              		.cfi_def_cfa 8, 0
  87:src/kernel.cpp ****     return finished;
 1148              		.loc 1 87 5
  88:src/kernel.cpp **** }...
 1149              		.loc 1 88 1 is_stmt 0
 1150 048c 17050000 		lbu	a0,.LANCHOR0
 1150      03450500 
 1151 0494 03348100 		ld	s0,8(sp)
 1152              		.cfi_restore 8
 1153              		.cfi_def_cfa 2, 16
 1154 0498 13010101 		addi	sp,sp,16
 1155              		.cfi_def_cfa_offset 0
 1156 049c 67800000 		jr	ra
 1157              		.cfi_endproc
 1158              	.LFE76:
 1160              		.globl	_ZN6Kernel9sysThreadE
 1161              		.globl	_ZN6Kernel8finishedE
 1162              		.bss
 1163              		.align	2
 1164              		.set	.LANCHOR0,. + 0
 1167              	_ZN6Kernel8finishedE:
 1168 0000 00       		.zero	1
 1169 0001 000000   		.zero	3
 1172              	_ZN6Kernel9sysThreadE:
 1173 0004 00000000 		.zero	4
 1174              		.text
 1175              	.Letext0:
 1176              		.file 6 "src/../h/../lib/hw.h"
 1177              		.file 7 "src/../h/memory_allocator.hpp"
 1178              		.file 8 "src/../h/scheduler.hpp"
 1179              		.file 9 "src/../h/list.hpp"
 1180              		.file 10 "src/../h/uart.hpp"
 1181              		.file 11 "src/../h/__print.hpp"
 1182              		.file 12 "src/../h/syscall_c.h"
GAS LISTING /tmp/cce9m9ZT.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 kernel.cpp
     /tmp/cce9m9ZT.s:9      .text:0000000000000000 _ZN6Kernel10initKernelEv
     /tmp/cce9m9ZT.s:13     .text:0000000000000000 .L0 
     /tmp/cce9m9ZT.s:14     .text:0000000000000000 .L0 
     /tmp/cce9m9ZT.s:15     .text:0000000000000004 .L0 
     /tmp/cce9m9ZT.s:18     .text:000000000000000c .L0 
     /tmp/cce9m9ZT.s:19     .text:000000000000000c .L0 
     /tmp/cce9m9ZT.s:21     .text:0000000000000010 .L0 
     /tmp/cce9m9ZT.s:23     .text:0000000000000010 .L0 
     /tmp/cce9m9ZT.s:24     .text:0000000000000010 .L0 
     /tmp/cce9m9ZT.s:27     .text:0000000000000018 .L0 
     /tmp/cce9m9ZT.s:28     .text:0000000000000018 .L0 
     /tmp/cce9m9ZT.s:34     .text:0000000000000020 .L0 
  src/../h/riscv.hpp:109    .text:0000000000000020 .L0 
     /tmp/cce9m9ZT.s:44     .text:0000000000000024 .L0 
     /tmp/cce9m9ZT.s:45     .text:0000000000000024 .L0 
     /tmp/cce9m9ZT.s:48     .text:000000000000002c .L0 
     /tmp/cce9m9ZT.s:49     .text:0000000000000030 .L0 
     /tmp/cce9m9ZT.s:51     .text:0000000000000034 .L0 
     /tmp/cce9m9ZT.s:52     .text:0000000000000034 .L0 
     /tmp/cce9m9ZT.s:54     .text:0000000000000038 .L0 
     /tmp/cce9m9ZT.s:56     .text:000000000000003c .L0 
     /tmp/cce9m9ZT.s:76     .text:000000000000003c _ZN6Kernel21supervisorTrapHandlerEv
     /tmp/cce9m9ZT.s:79     .text:000000000000003c .L0 
     /tmp/cce9m9ZT.s:80     .text:000000000000003c .L0 
     /tmp/cce9m9ZT.s:81     .text:0000000000000040 .L0 
     /tmp/cce9m9ZT.s:87     .text:0000000000000054 .L0 
     /tmp/cce9m9ZT.s:88     .text:0000000000000054 .L0 
     /tmp/cce9m9ZT.s:89     .text:0000000000000054 .L0 
     /tmp/cce9m9ZT.s:90     .text:0000000000000054 .L0 
     /tmp/cce9m9ZT.s:91     .text:0000000000000054 .L0 
     /tmp/cce9m9ZT.s:93     .text:0000000000000058 .L0 
     /tmp/cce9m9ZT.s:97     .text:0000000000000058 .L0 
     /tmp/cce9m9ZT.s:98     .text:0000000000000058 .L0 
     /tmp/cce9m9ZT.s:99     .text:0000000000000058 .L0 
  src/../h/riscv.hpp:84     .text:0000000000000058 .L0 
     /tmp/cce9m9ZT.s:107    .text:0000000000000060 .L0 
     /tmp/cce9m9ZT.s:108    .text:0000000000000060 .L0 
     /tmp/cce9m9ZT.s:114    .text:0000000000000064 .L0 
     /tmp/cce9m9ZT.s:115    .text:0000000000000064 .L0 
     /tmp/cce9m9ZT.s:117    .text:0000000000000068 .L0 
     /tmp/cce9m9ZT.s:122    .text:0000000000000070 .L0 
     /tmp/cce9m9ZT.s:128    .text:0000000000000080 .L0 
     /tmp/cce9m9ZT.s:135    .text:0000000000000090 .L0 
     /tmp/cce9m9ZT.s:136    .text:0000000000000090 .L0 
     /tmp/cce9m9ZT.s:137    .text:0000000000000090 .L0 
  src/../h/riscv.hpp:94     .text:0000000000000090 .L0 
     /tmp/cce9m9ZT.s:145    .text:0000000000000098 .L0 
     /tmp/cce9m9ZT.s:146    .text:0000000000000098 .L0 
     /tmp/cce9m9ZT.s:151    .text:000000000000009c .L0 
     /tmp/cce9m9ZT.s:152    .text:000000000000009c .L0 
     /tmp/cce9m9ZT.s:156    .text:00000000000000ac .L0 
     /tmp/cce9m9ZT.s:157    .text:00000000000000ac .L0 
     /tmp/cce9m9ZT.s:161    .text:00000000000000bc .L0 
     /tmp/cce9m9ZT.s:162    .text:00000000000000bc .L0 
     /tmp/cce9m9ZT.s:166    .text:00000000000000c8 .L0 
GAS LISTING /tmp/cce9m9ZT.s 			page 35


     /tmp/cce9m9ZT.s:167    .text:00000000000000c8 .L0 
     /tmp/cce9m9ZT.s:171    .text:00000000000000d4 .L0 
     /tmp/cce9m9ZT.s:172    .text:00000000000000d4 .L0 
     /tmp/cce9m9ZT.s:176    .text:00000000000000e4 .L0 
     /tmp/cce9m9ZT.s:177    .text:00000000000000e4 .L0 
     /tmp/cce9m9ZT.s:181    .text:00000000000000f0 .L0 
     /tmp/cce9m9ZT.s:182    .text:00000000000000f0 .L0 
     /tmp/cce9m9ZT.s:188    .text:00000000000000fc .L0 
     /tmp/cce9m9ZT.s:189    .text:00000000000000fc .L0 
  src/../h/riscv.hpp:99     .text:00000000000000fc .L0 
     /tmp/cce9m9ZT.s:200    .text:0000000000000100 .L0 
     /tmp/cce9m9ZT.s:201    .text:0000000000000104 .L0 
     /tmp/cce9m9ZT.s:202    .text:0000000000000104 .L0 
     /tmp/cce9m9ZT.s:204    .text:0000000000000108 .L0 
     /tmp/cce9m9ZT.s:205    .text:0000000000000108 .L0 
     /tmp/cce9m9ZT.s:207    .text:000000000000010c .L0 
     /tmp/cce9m9ZT.s:209    .text:0000000000000110 .L0 
     /tmp/cce9m9ZT.s:211    .text:0000000000000114 .L0 
     /tmp/cce9m9ZT.s:213    .text:0000000000000118 .L0 
     /tmp/cce9m9ZT.s:217    .text:000000000000011c .L0 
     /tmp/cce9m9ZT.s:223    .text:000000000000011c .L0 
     /tmp/cce9m9ZT.s:224    .text:000000000000011c .L0 
     /tmp/cce9m9ZT.s:225    .text:000000000000011c .L0 
  src/../h/riscv.hpp:94     .text:000000000000011c .L0 
     /tmp/cce9m9ZT.s:233    .text:0000000000000124 .L0 
     /tmp/cce9m9ZT.s:234    .text:0000000000000124 .L0 
     /tmp/cce9m9ZT.s:239    .text:0000000000000128 .L0 
     /tmp/cce9m9ZT.s:244    .text:000000000000012c .L0 
     /tmp/cce9m9ZT.s:245    .text:000000000000012c .L0 
     /tmp/cce9m9ZT.s:246    .text:000000000000012c .L0 
  src/../h/riscv.hpp:122    .text:000000000000012c .L0 
     /tmp/cce9m9ZT.s:254    .text:0000000000000134 .L0 
     /tmp/cce9m9ZT.s:255    .text:0000000000000134 .L0 
     /tmp/cce9m9ZT.s:263    .text:0000000000000138 .L0 
     /tmp/cce9m9ZT.s:264    .text:0000000000000138 .L0 
     /tmp/cce9m9ZT.s:265    .text:0000000000000138 .L0 
 src/../h/kernel.hpp:58     .text:0000000000000138 .L0 
     /tmp/cce9m9ZT.s:273    .text:0000000000000140 .L0 
     /tmp/cce9m9ZT.s:274    .text:0000000000000140 .L0 
     /tmp/cce9m9ZT.s:358    .text:0000000000000168 .L0 
     /tmp/cce9m9ZT.s:361    .text:0000000000000168 .L0 
     /tmp/cce9m9ZT.s:362    .text:0000000000000168 .L0 
     /tmp/cce9m9ZT.s:363    .text:0000000000000168 .L0 
 src/../h/kernel.hpp:111    .text:0000000000000168 .L0 
     /tmp/cce9m9ZT.s:371    .text:0000000000000170 .L0 
     /tmp/cce9m9ZT.s:372    .text:0000000000000170 .L0 
     /tmp/cce9m9ZT.s:381    .text:000000000000017c .L0 
      src/kernel.cpp:36     .text:000000000000017c .L0 
     /tmp/cce9m9ZT.s:391    .text:0000000000000180 .L0 
     /tmp/cce9m9ZT.s:392    .text:0000000000000180 .L0 
  src/../h/riscv.hpp:127    .text:0000000000000180 .L0 
     /tmp/cce9m9ZT.s:404    .text:0000000000000184 .L0 
     /tmp/cce9m9ZT.s:405    .text:0000000000000184 .L0 
  src/../h/riscv.hpp:99     .text:0000000000000184 .L0 
     /tmp/cce9m9ZT.s:417    .text:0000000000000188 .L0 
     /tmp/cce9m9ZT.s:418    .text:0000000000000188 .L0 
     /tmp/cce9m9ZT.s:419    .text:0000000000000188 .L0 
GAS LISTING /tmp/cce9m9ZT.s 			page 36


     /tmp/cce9m9ZT.s:429    .text:0000000000000190 .L0 
     /tmp/cce9m9ZT.s:434    .text:0000000000000194 .L0 
     /tmp/cce9m9ZT.s:437    .text:0000000000000194 .L0 
     /tmp/cce9m9ZT.s:438    .text:0000000000000194 .L0 
     /tmp/cce9m9ZT.s:439    .text:0000000000000194 .L0 
 src/../h/kernel.hpp:118    .text:0000000000000194 .L0 
     /tmp/cce9m9ZT.s:447    .text:000000000000019c .L0 
     /tmp/cce9m9ZT.s:448    .text:000000000000019c .L0 
     /tmp/cce9m9ZT.s:452    .text:00000000000001a8 .L0 
     /tmp/cce9m9ZT.s:457    .text:00000000000001ac .L0 
     /tmp/cce9m9ZT.s:460    .text:00000000000001ac .L0 
     /tmp/cce9m9ZT.s:461    .text:00000000000001ac .L0 
     /tmp/cce9m9ZT.s:462    .text:00000000000001ac .L0 
 src/../h/kernel.hpp:125    .text:00000000000001ac .L0 
     /tmp/cce9m9ZT.s:470    .text:00000000000001b4 .L0 
 src/../h/kernel.hpp:126    .text:00000000000001b4 .L0 
     /tmp/cce9m9ZT.s:478    .text:00000000000001bc .L0 
 src/../h/kernel.hpp:127    .text:00000000000001bc .L0 
     /tmp/cce9m9ZT.s:486    .text:00000000000001c4 .L0 
     /tmp/cce9m9ZT.s:487    .text:00000000000001c4 .L0 
     /tmp/cce9m9ZT.s:490    .text:00000000000001cc .L0 
     /tmp/cce9m9ZT.s:492    .text:00000000000001d0 .L0 
     /tmp/cce9m9ZT.s:495    .text:00000000000001d8 .L0 
     /tmp/cce9m9ZT.s:497    .text:00000000000001dc .L0 
 src/../h/kernel.hpp:131    .text:00000000000001dc .L0 
     /tmp/cce9m9ZT.s:503    .text:00000000000001e0 .L0 
     /tmp/cce9m9ZT.s:505    .text:00000000000001e0 .L0 
     /tmp/cce9m9ZT.s:508    .text:00000000000001e8 .L0 
     /tmp/cce9m9ZT.s:510    .text:00000000000001ec .L0 
 src/../h/kernel.hpp:132    .text:00000000000001ec .L0 
     /tmp/cce9m9ZT.s:517    .text:00000000000001f0 .L0 
     /tmp/cce9m9ZT.s:522    .text:00000000000001f4 .L0 
     /tmp/cce9m9ZT.s:525    .text:00000000000001f4 .L0 
     /tmp/cce9m9ZT.s:526    .text:00000000000001f4 .L0 
     /tmp/cce9m9ZT.s:527    .text:00000000000001f4 .L0 
     /tmp/cce9m9ZT.s:534    .text:0000000000000200 .L0 
     /tmp/cce9m9ZT.s:535    .text:0000000000000200 .L0 
     /tmp/cce9m9ZT.s:541    .text:0000000000000208 .L0 
 src/../h/kernel.hpp:138    .text:0000000000000208 .L0 
     /tmp/cce9m9ZT.s:547    .text:000000000000020c .L0 
     /tmp/cce9m9ZT.s:549    .text:000000000000020c .L0 
     /tmp/cce9m9ZT.s:552    .text:0000000000000214 .L0 
     /tmp/cce9m9ZT.s:557    .text:0000000000000218 .L0 
     /tmp/cce9m9ZT.s:560    .text:0000000000000218 .L0 
     /tmp/cce9m9ZT.s:561    .text:0000000000000218 .L0 
     /tmp/cce9m9ZT.s:562    .text:0000000000000218 .L0 
     /tmp/cce9m9ZT.s:565    .text:0000000000000220 .L0 
     /tmp/cce9m9ZT.s:570    .text:0000000000000224 .L0 
     /tmp/cce9m9ZT.s:573    .text:0000000000000224 .L0 
     /tmp/cce9m9ZT.s:574    .text:0000000000000224 .L0 
     /tmp/cce9m9ZT.s:575    .text:0000000000000224 .L0 
 src/../h/kernel.hpp:152    .text:0000000000000224 .L0 
     /tmp/cce9m9ZT.s:583    .text:000000000000022c .L0 
 src/../h/kernel.hpp:153    .text:000000000000022c .L0 
     /tmp/cce9m9ZT.s:591    .text:0000000000000234 .L0 
 src/../h/kernel.hpp:154    .text:0000000000000234 .L0 
     /tmp/cce9m9ZT.s:599    .text:000000000000023c .L0 
GAS LISTING /tmp/cce9m9ZT.s 			page 37


     /tmp/cce9m9ZT.s:600    .text:000000000000023c .L0 
     /tmp/cce9m9ZT.s:603    .text:0000000000000244 .L0 
     /tmp/cce9m9ZT.s:605    .text:0000000000000248 .L0 
     /tmp/cce9m9ZT.s:608    .text:0000000000000250 .L0 
     /tmp/cce9m9ZT.s:610    .text:0000000000000254 .L0 
 src/../h/kernel.hpp:158    .text:0000000000000254 .L0 
     /tmp/cce9m9ZT.s:616    .text:0000000000000258 .L0 
     /tmp/cce9m9ZT.s:618    .text:0000000000000258 .L0 
     /tmp/cce9m9ZT.s:621    .text:0000000000000260 .L0 
     /tmp/cce9m9ZT.s:623    .text:0000000000000264 .L0 
 src/../h/kernel.hpp:159    .text:0000000000000264 .L0 
     /tmp/cce9m9ZT.s:630    .text:0000000000000268 .L0 
     /tmp/cce9m9ZT.s:635    .text:000000000000026c .L0 
     /tmp/cce9m9ZT.s:638    .text:000000000000026c .L0 
     /tmp/cce9m9ZT.s:639    .text:000000000000026c .L0 
     /tmp/cce9m9ZT.s:640    .text:000000000000026c .L0 
 src/../h/kernel.hpp:165    .text:000000000000026c .L0 
     /tmp/cce9m9ZT.s:648    .text:0000000000000274 .L0 
 src/../h/kernel.hpp:166    .text:0000000000000274 .L0 
     /tmp/cce9m9ZT.s:656    .text:000000000000027c .L0 
     /tmp/cce9m9ZT.s:657    .text:000000000000027c .L0 
     /tmp/cce9m9ZT.s:659    .text:0000000000000280 .L0 
     /tmp/cce9m9ZT.s:661    .text:0000000000000284 .L0 
     /tmp/cce9m9ZT.s:665    .text:0000000000000290 .L0 
     /tmp/cce9m9ZT.s:667    .text:0000000000000294 .L0 
 src/../h/kernel.hpp:170    .text:0000000000000294 .L0 
     /tmp/cce9m9ZT.s:673    .text:0000000000000298 .L0 
     /tmp/cce9m9ZT.s:675    .text:0000000000000298 .L0 
     /tmp/cce9m9ZT.s:678    .text:00000000000002a0 .L0 
     /tmp/cce9m9ZT.s:680    .text:00000000000002a4 .L0 
 src/../h/kernel.hpp:171    .text:00000000000002a4 .L0 
     /tmp/cce9m9ZT.s:687    .text:00000000000002a8 .L0 
     /tmp/cce9m9ZT.s:692    .text:00000000000002ac .L0 
     /tmp/cce9m9ZT.s:695    .text:00000000000002ac .L0 
     /tmp/cce9m9ZT.s:696    .text:00000000000002ac .L0 
     /tmp/cce9m9ZT.s:697    .text:00000000000002ac .L0 
 src/../h/kernel.hpp:177    .text:00000000000002ac .L0 
     /tmp/cce9m9ZT.s:705    .text:00000000000002b4 .L0 
     /tmp/cce9m9ZT.s:706    .text:00000000000002b4 .L0 
     /tmp/cce9m9ZT.s:709    .text:00000000000002bc .L0 
     /tmp/cce9m9ZT.s:711    .text:00000000000002c0 .L0 
     /tmp/cce9m9ZT.s:718    .text:00000000000002cc .L0 
     /tmp/cce9m9ZT.s:719    .text:00000000000002cc .L0 
     /tmp/cce9m9ZT.s:726    .text:00000000000002d8 .L0 
 src/../h/kernel.hpp:180    .text:00000000000002d8 .L0 
     /tmp/cce9m9ZT.s:733    .text:00000000000002dc .L0 
     /tmp/cce9m9ZT.s:738    .text:00000000000002e0 .L0 
     /tmp/cce9m9ZT.s:741    .text:00000000000002e0 .L0 
     /tmp/cce9m9ZT.s:742    .text:00000000000002e0 .L0 
     /tmp/cce9m9ZT.s:743    .text:00000000000002e0 .L0 
 src/../h/kernel.hpp:186    .text:00000000000002e0 .L0 
     /tmp/cce9m9ZT.s:751    .text:00000000000002e8 .L0 
     /tmp/cce9m9ZT.s:752    .text:00000000000002e8 .L0 
     /tmp/cce9m9ZT.s:756    .text:00000000000002f4 .L0 
     /tmp/cce9m9ZT.s:761    .text:00000000000002f8 .L0 
     /tmp/cce9m9ZT.s:764    .text:00000000000002f8 .L0 
     /tmp/cce9m9ZT.s:765    .text:00000000000002f8 .L0 
GAS LISTING /tmp/cce9m9ZT.s 			page 38


     /tmp/cce9m9ZT.s:766    .text:00000000000002f8 .L0 
 src/../h/kernel.hpp:195    .text:00000000000002f8 .L0 
     /tmp/cce9m9ZT.s:774    .text:0000000000000300 .L0 
     /tmp/cce9m9ZT.s:775    .text:0000000000000300 .L0 
     /tmp/cce9m9ZT.s:779    .text:000000000000030c .L0 
     /tmp/cce9m9ZT.s:784    .text:0000000000000310 .L0 
     /tmp/cce9m9ZT.s:787    .text:0000000000000310 .L0 
     /tmp/cce9m9ZT.s:788    .text:0000000000000310 .L0 
     /tmp/cce9m9ZT.s:789    .text:0000000000000310 .L0 
 src/../h/kernel.hpp:202    .text:0000000000000310 .L0 
     /tmp/cce9m9ZT.s:797    .text:0000000000000318 .L0 
     /tmp/cce9m9ZT.s:798    .text:0000000000000318 .L0 
     /tmp/cce9m9ZT.s:802    .text:0000000000000324 .L0 
     /tmp/cce9m9ZT.s:807    .text:0000000000000328 .L0 
     /tmp/cce9m9ZT.s:810    .text:0000000000000328 .L0 
     /tmp/cce9m9ZT.s:811    .text:0000000000000328 .L0 
     /tmp/cce9m9ZT.s:812    .text:0000000000000328 .L0 
     /tmp/cce9m9ZT.s:813    .text:0000000000000328 .L0 
     /tmp/cce9m9ZT.s:816    .text:0000000000000330 .L0 
     /tmp/cce9m9ZT.s:818    .text:0000000000000334 .L0 
     /tmp/cce9m9ZT.s:819    .text:0000000000000334 .L0 
 src/../h/kernel.hpp:212    .text:0000000000000338 .L0 
     /tmp/cce9m9ZT.s:827    .text:000000000000033c .L0 
     /tmp/cce9m9ZT.s:832    .text:0000000000000340 .L0 
     /tmp/cce9m9ZT.s:835    .text:0000000000000340 .L0 
     /tmp/cce9m9ZT.s:836    .text:0000000000000340 .L0 
     /tmp/cce9m9ZT.s:837    .text:0000000000000340 .L0 
 src/../h/kernel.hpp:218    .text:0000000000000340 .L0 
     /tmp/cce9m9ZT.s:845    .text:0000000000000348 .L0 
     /tmp/cce9m9ZT.s:846    .text:0000000000000348 .L0 
     /tmp/cce9m9ZT.s:851    .text:0000000000000358 .L0 
     /tmp/cce9m9ZT.s:856    .text:000000000000035c .L0 
     /tmp/cce9m9ZT.s:857    .text:000000000000035c .L0 
 src/../h/kernel.hpp:102    .text:000000000000035c .L0 
     /tmp/cce9m9ZT.s:863    .text:0000000000000360 .L0 
     /tmp/cce9m9ZT.s:865    .text:0000000000000360 .L0 
     /tmp/cce9m9ZT.s:869    .text:0000000000000370 .L0 
     /tmp/cce9m9ZT.s:879    .text:0000000000000374 .L0 
     /tmp/cce9m9ZT.s:880    .text:0000000000000374 .L0 
     /tmp/cce9m9ZT.s:883    .text:0000000000000380 .L0 
     /tmp/cce9m9ZT.s:885    .text:0000000000000384 .L0 
     /tmp/cce9m9ZT.s:886    .text:0000000000000384 .L0 
     /tmp/cce9m9ZT.s:891    .text:000000000000038c .L0 
     /tmp/cce9m9ZT.s:892    .text:000000000000038c .L0 
     /tmp/cce9m9ZT.s:893    .text:000000000000038c .L0 
     /tmp/cce9m9ZT.s:902    .text:00000000000003a0 .L0 
     /tmp/cce9m9ZT.s:906    .text:00000000000003a0 .L0 
     /tmp/cce9m9ZT.s:907    .text:00000000000003a0 .L0 
     /tmp/cce9m9ZT.s:913    .text:00000000000003ac .L0 
     /tmp/cce9m9ZT.s:914    .text:00000000000003ac .L0 
     /tmp/cce9m9ZT.s:919    .text:00000000000003b0 .L0 
     /tmp/cce9m9ZT.s:926    .text:00000000000003b4 .L0 
     /tmp/cce9m9ZT.s:927    .text:00000000000003b4 .L0 
     /tmp/cce9m9ZT.s:928    .text:00000000000003b4 .L0 
     /tmp/cce9m9ZT.s:938    .text:00000000000003bc .L0 
     /tmp/cce9m9ZT.s:944    .text:00000000000003c0 .L0 
     /tmp/cce9m9ZT.s:945    .text:00000000000003c0 .L0 
GAS LISTING /tmp/cce9m9ZT.s 			page 39


     /tmp/cce9m9ZT.s:946    .text:00000000000003c0 .L0 
     /tmp/cce9m9ZT.s:956    .text:00000000000003c8 .L0 
     /tmp/cce9m9ZT.s:963    .text:00000000000003cc .L0 
     /tmp/cce9m9ZT.s:964    .text:00000000000003cc .L0 
     /tmp/cce9m9ZT.s:965    .text:00000000000003cc .L0 
  src/../h/riscv.hpp:94     .text:00000000000003cc .L0 
     /tmp/cce9m9ZT.s:973    .text:00000000000003d4 .L0 
     /tmp/cce9m9ZT.s:974    .text:00000000000003d4 .L0 
     /tmp/cce9m9ZT.s:981    .text:00000000000003d8 .L0 
     /tmp/cce9m9ZT.s:982    .text:00000000000003d8 .L0 
     /tmp/cce9m9ZT.s:983    .text:00000000000003d8 .L0 
  src/../h/riscv.hpp:122    .text:00000000000003d8 .L0 
     /tmp/cce9m9ZT.s:991    .text:00000000000003e0 .L0 
     /tmp/cce9m9ZT.s:992    .text:00000000000003e0 .L0 
     /tmp/cce9m9ZT.s:999    .text:00000000000003e4 .L0 
     /tmp/cce9m9ZT.s:1000   .text:00000000000003e4 .L0 
     /tmp/cce9m9ZT.s:1001   .text:00000000000003e4 .L0 
     /tmp/cce9m9ZT.s:1006   .text:00000000000003f0 .L0 
     /tmp/cce9m9ZT.s:1007   .text:00000000000003f0 .L0 
     /tmp/cce9m9ZT.s:1012   .text:00000000000003f8 .L0 
     /tmp/cce9m9ZT.s:1013   .text:00000000000003f8 .L0 
  src/../h/riscv.hpp:127    .text:00000000000003f8 .L0 
     /tmp/cce9m9ZT.s:1025   .text:00000000000003fc .L0 
     /tmp/cce9m9ZT.s:1026   .text:00000000000003fc .L0 
  src/../h/riscv.hpp:99     .text:00000000000003fc .L0 
     /tmp/cce9m9ZT.s:1033   .text:0000000000000400 .L0 
     /tmp/cce9m9ZT.s:1045   .text:0000000000000404 .L0 
     /tmp/cce9m9ZT.s:1046   .text:0000000000000404 .L0 
     /tmp/cce9m9ZT.s:1047   .text:0000000000000404 .L0 
     /tmp/cce9m9ZT.s:1052   .text:0000000000000410 .L0 
     /tmp/cce9m9ZT.s:1057   .text:0000000000000418 .L0 
     /tmp/cce9m9ZT.s:1058   .text:0000000000000418 .L0 
     /tmp/cce9m9ZT.s:1066   .text:0000000000000424 .L0 
     /tmp/cce9m9ZT.s:1067   .text:0000000000000424 .L0 
     /tmp/cce9m9ZT.s:1068   .text:0000000000000424 .L0 
     /tmp/cce9m9ZT.s:1078   .text:000000000000042c .L0 
     /tmp/cce9m9ZT.s:1083   .text:0000000000000430 .L0 
     /tmp/cce9m9ZT.s:1084   .text:0000000000000430 .L0 
     /tmp/cce9m9ZT.s:1085   .text:0000000000000430 .L0 
     /tmp/cce9m9ZT.s:1088   .text:0000000000000438 .L0 
     /tmp/cce9m9ZT.s:1091   .text:0000000000000440 .L0 
     /tmp/cce9m9ZT.s:1092   .text:0000000000000440 .L0 
     /tmp/cce9m9ZT.s:1097   .text:000000000000044c .L0 
     /tmp/cce9m9ZT.s:1103   .text:000000000000044c _ZN6Kernel12finishKernelEv
     /tmp/cce9m9ZT.s:1106   .text:000000000000044c .L0 
     /tmp/cce9m9ZT.s:1107   .text:000000000000044c .L0 
     /tmp/cce9m9ZT.s:1108   .text:0000000000000450 .L0 
     /tmp/cce9m9ZT.s:1111   .text:0000000000000458 .L0 
     /tmp/cce9m9ZT.s:1112   .text:0000000000000458 .L0 
     /tmp/cce9m9ZT.s:1114   .text:000000000000045c .L0 
     /tmp/cce9m9ZT.s:1116   .text:000000000000045c .L0 
     /tmp/cce9m9ZT.s:1117   .text:000000000000045c .L0 
     /tmp/cce9m9ZT.s:1120   .text:0000000000000468 .L0 
     /tmp/cce9m9ZT.s:1121   .text:0000000000000468 .L0 
     /tmp/cce9m9ZT.s:1124   .text:0000000000000470 .L0 
     /tmp/cce9m9ZT.s:1125   .text:0000000000000474 .L0 
     /tmp/cce9m9ZT.s:1127   .text:0000000000000478 .L0 
GAS LISTING /tmp/cce9m9ZT.s 			page 40


     /tmp/cce9m9ZT.s:1128   .text:0000000000000478 .L0 
     /tmp/cce9m9ZT.s:1130   .text:000000000000047c .L0 
     /tmp/cce9m9ZT.s:1132   .text:0000000000000480 .L0 
     /tmp/cce9m9ZT.s:1138   .text:0000000000000480 _ZN6Kernel10isFinishedEv
     /tmp/cce9m9ZT.s:1141   .text:0000000000000480 .L0 
     /tmp/cce9m9ZT.s:1142   .text:0000000000000480 .L0 
     /tmp/cce9m9ZT.s:1143   .text:0000000000000484 .L0 
     /tmp/cce9m9ZT.s:1145   .text:0000000000000488 .L0 
     /tmp/cce9m9ZT.s:1147   .text:000000000000048c .L0 
     /tmp/cce9m9ZT.s:1149   .text:000000000000048c .L0 
     /tmp/cce9m9ZT.s:1150   .text:000000000000048c .L0 
     /tmp/cce9m9ZT.s:1152   .text:0000000000000498 .L0 
     /tmp/cce9m9ZT.s:1153   .text:0000000000000498 .L0 
     /tmp/cce9m9ZT.s:1155   .text:000000000000049c .L0 
     /tmp/cce9m9ZT.s:1157   .text:00000000000004a0 .L0 
     /tmp/cce9m9ZT.s:1172   .bss:0000000000000004 _ZN6Kernel9sysThreadE
     /tmp/cce9m9ZT.s:1167   .bss:0000000000000000 _ZN6Kernel8finishedE
     /tmp/cce9m9ZT.s:1164   .bss:0000000000000000 .LANCHOR0
     /tmp/cce9m9ZT.s:1183   .text:00000000000004a0 .L0 
     /tmp/cce9m9ZT.s:28     .text:0000000000000018 .L0 
     /tmp/cce9m9ZT.s:64     .rodata.str1.8:0000000000000020 .LC1
     /tmp/cce9m9ZT.s:152    .text:000000000000009c .L0 
     /tmp/cce9m9ZT.s:67     .rodata.str1.8:0000000000000038 .LC2
     /tmp/cce9m9ZT.s:157    .text:00000000000000ac .L0 
     /tmp/cce9m9ZT.s:70     .rodata.str1.8:0000000000000048 .LC3
     /tmp/cce9m9ZT.s:172    .text:00000000000000d4 .L0 
     /tmp/cce9m9ZT.s:287    .rodata:0000000000000000 .L7
     /tmp/cce9m9ZT.s:279    .text:0000000000000150 .L0 
     /tmp/cce9m9ZT.s:527    .text:00000000000001f4 .L0 
     /tmp/cce9m9ZT.s:61     .rodata.str1.8:0000000000000000 .LC0
     /tmp/cce9m9ZT.s:865    .text:0000000000000360 .L0 
     /tmp/cce9m9ZT.s:880    .text:0000000000000374 .L0 
     /tmp/cce9m9ZT.s:893    .text:000000000000038c .L0 
     /tmp/cce9m9ZT.s:907    .text:00000000000003a0 .L0 
     /tmp/cce9m9ZT.s:1001   .text:00000000000003e4 .L0 
     /tmp/cce9m9ZT.s:1118   .text:0000000000000460 .L0 
     /tmp/cce9m9ZT.s:1150   .text:000000000000048c .L0 
     /tmp/cce9m9ZT.s:216    .text:000000000000011c .L33
     /tmp/cce9m9ZT.s:871    .text:0000000000000374 .L34
     /tmp/cce9m9ZT.s:1035   .text:0000000000000404 .L35
     /tmp/cce9m9ZT.s:852    .text:000000000000035c .L5
     /tmp/cce9m9ZT.s:196    .text:0000000000000100 .L3
     /tmp/cce9m9ZT.s:375    .text:000000000000017c .L20
     /tmp/cce9m9ZT.s:722    .text:00000000000002d8 .L24
     /tmp/cce9m9ZT.s:940    .text:00000000000003c0 .L36
     /tmp/cce9m9ZT.s:957    .text:00000000000003cc .L37
     /tmp/cce9m9ZT.s:921    .text:00000000000003b4 .L28
     /tmp/cce9m9ZT.s:1079   .text:0000000000000430 .L31
     /tmp/cce9m9ZT.s:1055   .text:0000000000000418 .L30
     /tmp/cce9m9ZT.s:356    .text:0000000000000168 .L19
     /tmp/cce9m9ZT.s:430    .text:0000000000000194 .L18
     /tmp/cce9m9ZT.s:453    .text:00000000000001ac .L17
     /tmp/cce9m9ZT.s:518    .text:00000000000001f4 .L16
     /tmp/cce9m9ZT.s:553    .text:0000000000000218 .L15
     /tmp/cce9m9ZT.s:566    .text:0000000000000224 .L14
     /tmp/cce9m9ZT.s:631    .text:000000000000026c .L13
     /tmp/cce9m9ZT.s:688    .text:00000000000002ac .L12
GAS LISTING /tmp/cce9m9ZT.s 			page 41


     /tmp/cce9m9ZT.s:734    .text:00000000000002e0 .L11
     /tmp/cce9m9ZT.s:757    .text:00000000000002f8 .L10
     /tmp/cce9m9ZT.s:780    .text:0000000000000310 .L9
     /tmp/cce9m9ZT.s:803    .text:0000000000000328 .L8
     /tmp/cce9m9ZT.s:828    .text:0000000000000340 .L6
     /tmp/cce9m9ZT.s:4007   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cce9m9ZT.s:5979   .debug_str:0000000000000eb4 .LASF282
     /tmp/cce9m9ZT.s:5583   .debug_str:000000000000021a .LASF283
     /tmp/cce9m9ZT.s:5935   .debug_str:0000000000000d82 .LASF284
     /tmp/cce9m9ZT.s:5      .text:0000000000000000 .Ltext0
     /tmp/cce9m9ZT.s:1175   .text:00000000000004a0 .Letext0
     /tmp/cce9m9ZT.s:5521   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cce9m9ZT.s:5707   .debug_str:0000000000000619 .LASF0
     /tmp/cce9m9ZT.s:5747   .debug_str:000000000000076c .LASF1
     /tmp/cce9m9ZT.s:5895   .debug_str:0000000000000c33 .LASF2
     /tmp/cce9m9ZT.s:5649   .debug_str:000000000000041d .LASF3
     /tmp/cce9m9ZT.s:5525   .debug_str:0000000000000008 .LASF4
     /tmp/cce9m9ZT.s:5905   .debug_str:0000000000000c81 .LASF5
     /tmp/cce9m9ZT.s:5719   .debug_str:0000000000000667 .LASF6
     /tmp/cce9m9ZT.s:5541   .debug_str:0000000000000095 .LASF7
     /tmp/cce9m9ZT.s:5861   .debug_str:0000000000000b6b .LASF8
     /tmp/cce9m9ZT.s:5847   .debug_str:0000000000000ae8 .LASF9
     /tmp/cce9m9ZT.s:5737   .debug_str:000000000000071e .LASF10
     /tmp/cce9m9ZT.s:5675   .debug_str:00000000000004bf .LASF11
     /tmp/cce9m9ZT.s:5685   .debug_str:0000000000000525 .LASF12
     /tmp/cce9m9ZT.s:5591   .debug_str:000000000000026a .LASF13
     /tmp/cce9m9ZT.s:5661   .debug_str:0000000000000476 .LASF14
     /tmp/cce9m9ZT.s:5611   .debug_str:0000000000000304 .LASF15
     /tmp/cce9m9ZT.s:5589   .debug_str:000000000000025a .LASF16
     /tmp/cce9m9ZT.s:5951   .debug_str:0000000000000e02 .LASF17
     /tmp/cce9m9ZT.s:5641   .debug_str:00000000000003d8 .LASF18
     /tmp/cce9m9ZT.s:5941   .debug_str:0000000000000dc2 .LASF19
     /tmp/cce9m9ZT.s:5839   .debug_str:0000000000000aa6 .LASF31
     /tmp/cce9m9ZT.s:5973   .debug_str:0000000000000e98 .LASF285
     /tmp/cce9m9ZT.s:5745   .debug_str:0000000000000767 .LASF20
     /tmp/cce9m9ZT.s:5553   .debug_str:000000000000010d .LASF21
     /tmp/cce9m9ZT.s:5593   .debug_str:0000000000000279 .LASF22
     /tmp/cce9m9ZT.s:6111   .debug_str:000000000000135d .LASF70
     /tmp/cce9m9ZT.s:5683   .debug_str:0000000000000505 .LASF72
     /tmp/cce9m9ZT.s:6007   .debug_str:0000000000001040 .LASF23
     /tmp/cce9m9ZT.s:5725   .debug_str:0000000000000690 .LASF25
     /tmp/cce9m9ZT.s:5795   .debug_str:000000000000091c .LASF36
     /tmp/cce9m9ZT.s:5911   .debug_str:0000000000000ca7 .LASF38
     /tmp/cce9m9ZT.s:6081   .debug_str:000000000000126f .LASF106
     /tmp/cce9m9ZT.s:5741   .debug_str:0000000000000749 .LASF24
     /tmp/cce9m9ZT.s:5815   .debug_str:00000000000009db .LASF26
     /tmp/cce9m9ZT.s:5643   .debug_str:00000000000003ee .LASF27
     /tmp/cce9m9ZT.s:6039   .debug_str:0000000000001127 .LASF28
     /tmp/cce9m9ZT.s:6105   .debug_str:0000000000001328 .LASF29
     /tmp/cce9m9ZT.s:5557   .debug_str:000000000000012d .LASF30
     /tmp/cce9m9ZT.s:5597   .debug_str:000000000000029d .LASF286
     /tmp/cce9m9ZT.s:5969   .debug_str:0000000000000e61 .LASF287
     /tmp/cce9m9ZT.s:6009   .debug_str:0000000000001045 .LASF32
     /tmp/cce9m9ZT.s:5571   .debug_str:00000000000001b5 .LASF33
     /tmp/cce9m9ZT.s:6055   .debug_str:00000000000011aa .LASF34
     /tmp/cce9m9ZT.s:5879   .debug_str:0000000000000bd7 .LASF35
     /tmp/cce9m9ZT.s:5697   .debug_str:00000000000005b1 .LASF37
GAS LISTING /tmp/cce9m9ZT.s 			page 42


     /tmp/cce9m9ZT.s:5803   .debug_str:0000000000000977 .LASF39
     /tmp/cce9m9ZT.s:5913   .debug_str:0000000000000cc6 .LASF40
     /tmp/cce9m9ZT.s:5687   .debug_str:0000000000000533 .LASF41
     /tmp/cce9m9ZT.s:5709   .debug_str:0000000000000626 .LASF42
     /tmp/cce9m9ZT.s:5809   .debug_str:00000000000009a5 .LASF43
     /tmp/cce9m9ZT.s:5669   .debug_str:000000000000049e .LASF46
     /tmp/cce9m9ZT.s:5601   .debug_str:00000000000002bb .LASF48
     /tmp/cce9m9ZT.s:5819   .debug_str:0000000000000a04 .LASF44
     /tmp/cce9m9ZT.s:5991   .debug_str:0000000000000fdc .LASF45
     /tmp/cce9m9ZT.s:6041   .debug_str:0000000000001158 .LASF47
     /tmp/cce9m9ZT.s:6063   .debug_str:00000000000011d0 .LASF49
     /tmp/cce9m9ZT.s:5875   .debug_str:0000000000000bc3 .LASF50
     /tmp/cce9m9ZT.s:6087   .debug_str:00000000000012a7 .LASF51
     /tmp/cce9m9ZT.s:5605   .debug_str:00000000000002e4 .LASF52
     /tmp/cce9m9ZT.s:5579   .debug_str:00000000000001e4 .LASF53
     /tmp/cce9m9ZT.s:5619   .debug_str:000000000000033a .LASF54
     /tmp/cce9m9ZT.s:5739   .debug_str:0000000000000731 .LASF55
     /tmp/cce9m9ZT.s:5781   .debug_str:000000000000087e .LASF56
     /tmp/cce9m9ZT.s:6065   .debug_str:00000000000011e5 .LASF57
     /tmp/cce9m9ZT.s:5993   .debug_str:0000000000000ff5 .LASF58
     /tmp/cce9m9ZT.s:5909   .debug_str:0000000000000c8d .LASF59
     /tmp/cce9m9ZT.s:5867   .debug_str:0000000000000b87 .LASF60
     /tmp/cce9m9ZT.s:5753   .debug_str:000000000000079b .LASF61
     /tmp/cce9m9ZT.s:5647   .debug_str:0000000000000410 .LASF62
     /tmp/cce9m9ZT.s:5651   .debug_str:0000000000000423 .LASF63
     /tmp/cce9m9ZT.s:5953   .debug_str:0000000000000e0e .LASF64
     /tmp/cce9m9ZT.s:5921   .debug_str:0000000000000d18 .LASF65
     /tmp/cce9m9ZT.s:5863   .debug_str:0000000000000b72 .LASF66
     /tmp/cce9m9ZT.s:5711   .debug_str:0000000000000633 .LASF67
     /tmp/cce9m9ZT.s:5523   .debug_str:0000000000000000 .LASF68
     /tmp/cce9m9ZT.s:5987   .debug_str:0000000000000fbd .LASF69
     /tmp/cce9m9ZT.s:5927   .debug_str:0000000000000d41 .LASF115
     /tmp/cce9m9ZT.s:5743   .debug_str:0000000000000752 .LASF117
     /tmp/cce9m9ZT.s:5959   .debug_str:0000000000000e32 .LASF288
     /tmp/cce9m9ZT.s:6093   .debug_str:00000000000012c7 .LASF71
     /tmp/cce9m9ZT.s:5587   .debug_str:000000000000023e .LASF73
     /tmp/cce9m9ZT.s:5833   .debug_str:0000000000000a85 .LASF289
     /tmp/cce9m9ZT.s:5801   .debug_str:0000000000000962 .LASF74
     /tmp/cce9m9ZT.s:5929   .debug_str:0000000000000d4a .LASF75
     /tmp/cce9m9ZT.s:6003   .debug_str:0000000000001024 .LASF76
     /tmp/cce9m9ZT.s:6109   .debug_str:0000000000001336 .LASF77
     /tmp/cce9m9ZT.s:5961   .debug_str:0000000000000e3a .LASF80
     /tmp/cce9m9ZT.s:5811   .debug_str:00000000000009bf .LASF82
     /tmp/cce9m9ZT.s:5563   .debug_str:0000000000000180 .LASF78
     /tmp/cce9m9ZT.s:5831   .debug_str:0000000000000a6e .LASF79
     /tmp/cce9m9ZT.s:5899   .debug_str:0000000000000c4e .LASF81
     /tmp/cce9m9ZT.s:5585   .debug_str:0000000000000229 .LASF83
     /tmp/cce9m9ZT.s:5963   .debug_str:0000000000000e45 .LASF84
     /tmp/cce9m9ZT.s:5657   .debug_str:0000000000000451 .LASF85
     /tmp/cce9m9ZT.s:5755   .debug_str:00000000000007b4 .LASF86
     /tmp/cce9m9ZT.s:6023   .debug_str:00000000000010b3 .LASF87
     /tmp/cce9m9ZT.s:5975   .debug_str:0000000000000ea0 .LASF290
     /tmp/cce9m9ZT.s:5631   .debug_str:0000000000000384 .LASF88
     /tmp/cce9m9ZT.s:5599   .debug_str:00000000000002a8 .LASF89
     /tmp/cce9m9ZT.s:5633   .debug_str:000000000000038d .LASF90
     /tmp/cce9m9ZT.s:5901   .debug_str:0000000000000c58 .LASF91
     /tmp/cce9m9ZT.s:5767   .debug_str:00000000000007fd .LASF92
GAS LISTING /tmp/cce9m9ZT.s 			page 43


     /tmp/cce9m9ZT.s:5691   .debug_str:0000000000000569 .LASF93
     /tmp/cce9m9ZT.s:5827   .debug_str:0000000000000a50 .LASF94
     /tmp/cce9m9ZT.s:6017   .debug_str:000000000000105e .LASF95
     /tmp/cce9m9ZT.s:5907   .debug_str:0000000000000c88 .LASF96
     /tmp/cce9m9ZT.s:5535   .debug_str:0000000000000063 .LASF97
     /tmp/cce9m9ZT.s:6101   .debug_str:0000000000001312 .LASF98
     /tmp/cce9m9ZT.s:5681   .debug_str:00000000000004f9 .LASF99
     /tmp/cce9m9ZT.s:5575   .debug_str:00000000000001c8 .LASF100
     /tmp/cce9m9ZT.s:5671   .debug_str:00000000000004a9 .LASF101
     /tmp/cce9m9ZT.s:5531   .debug_str:000000000000002b .LASF102
     /tmp/cce9m9ZT.s:5777   .debug_str:0000000000000858 .LASF103
     /tmp/cce9m9ZT.s:5939   .debug_str:0000000000000daf .LASF104
     /tmp/cce9m9ZT.s:5897   .debug_str:0000000000000c41 .LASF105
     /tmp/cce9m9ZT.s:5527   .debug_str:000000000000000f .LASF136
     /tmp/cce9m9ZT.s:5917   .debug_str:0000000000000ce3 .LASF107
     /tmp/cce9m9ZT.s:5529   .debug_str:0000000000000026 .LASF108
     /tmp/cce9m9ZT.s:6091   .debug_str:00000000000012c2 .LASF109
     /tmp/cce9m9ZT.s:5933   .debug_str:0000000000000d7c .LASF110
     /tmp/cce9m9ZT.s:5957   .debug_str:0000000000000e29 .LASF111
     /tmp/cce9m9ZT.s:5829   .debug_str:0000000000000a66 .LASF112
     /tmp/cce9m9ZT.s:5985   .debug_str:0000000000000fb3 .LASF113
     /tmp/cce9m9ZT.s:6005   .debug_str:0000000000001038 .LASF114
     /tmp/cce9m9ZT.s:5621   .debug_str:0000000000000345 .LASF116
     /tmp/cce9m9ZT.s:5533   .debug_str:000000000000003b .LASF118
     /tmp/cce9m9ZT.s:5573   .debug_str:00000000000001ba .LASF119
     /tmp/cce9m9ZT.s:5757   .debug_str:00000000000007c1 .LASF121
     /tmp/cce9m9ZT.s:5659   .debug_str:0000000000000467 .LASF120
     /tmp/cce9m9ZT.s:6095   .debug_str:00000000000012d1 .LASF122
     /tmp/cce9m9ZT.s:5881   .debug_str:0000000000000bdc .LASF123
     /tmp/cce9m9ZT.s:5937   .debug_str:0000000000000da5 .LASF124
     /tmp/cce9m9ZT.s:5775   .debug_str:0000000000000844 .LASF125
     /tmp/cce9m9ZT.s:5759   .debug_str:00000000000007da .LASF126
     /tmp/cce9m9ZT.s:5865   .debug_str:0000000000000b7b .LASF127
     /tmp/cce9m9ZT.s:5841   .debug_str:0000000000000ab6 .LASF128
     /tmp/cce9m9ZT.s:5785   .debug_str:000000000000089e .LASF129
     /tmp/cce9m9ZT.s:5567   .debug_str:0000000000000199 .LASF130
     /tmp/cce9m9ZT.s:5749   .debug_str:000000000000077f .LASF131
     /tmp/cce9m9ZT.s:5677   .debug_str:00000000000004cf .LASF132
     /tmp/cce9m9ZT.s:5977   .debug_str:0000000000000ea8 .LASF133
     /tmp/cce9m9ZT.s:5735   .debug_str:0000000000000711 .LASF134
     /tmp/cce9m9ZT.s:5653   .debug_str:000000000000043d .LASF135
     /tmp/cce9m9ZT.s:5577   .debug_str:00000000000001d8 .LASF137
     /tmp/cce9m9ZT.s:6089   .debug_str:00000000000012bd .LASF138
     /tmp/cce9m9ZT.s:5869   .debug_str:0000000000000b93 .LASF139
     /tmp/cce9m9ZT.s:5673   .debug_str:00000000000004b5 .LASF140
     /tmp/cce9m9ZT.s:5609   .debug_str:00000000000002f9 .LASF141
     /tmp/cce9m9ZT.s:5989   .debug_str:0000000000000fd1 .LASF142
     /tmp/cce9m9ZT.s:5955   .debug_str:0000000000000e15 .LASF291
     /tmp/cce9m9ZT.s:5701   .debug_str:00000000000005d9 .LASF143
     /tmp/cce9m9ZT.s:5543   .debug_str:000000000000009c .LASF144
     /tmp/cce9m9ZT.s:6019   .debug_str:000000000000107f .LASF145
     /tmp/cce9m9ZT.s:5995   .debug_str:0000000000001002 .LASF146
     /tmp/cce9m9ZT.s:5789   .debug_str:00000000000008c6 .LASF147
     /tmp/cce9m9ZT.s:6037   .debug_str:0000000000001120 .LASF148
     /tmp/cce9m9ZT.s:5637   .debug_str:00000000000003aa .LASF149
     /tmp/cce9m9ZT.s:5849   .debug_str:0000000000000afb .LASF150
     /tmp/cce9m9ZT.s:5625   .debug_str:000000000000035d .LASF292
GAS LISTING /tmp/cce9m9ZT.s 			page 44


     /tmp/cce9m9ZT.s:5947   .debug_str:0000000000000df2 .LASF151
     /tmp/cce9m9ZT.s:5813   .debug_str:00000000000009d6 .LASF152
     /tmp/cce9m9ZT.s:5805   .debug_str:000000000000098f .LASF153
     /tmp/cce9m9ZT.s:5943   .debug_str:0000000000000dd8 .LASF154
     /tmp/cce9m9ZT.s:5639   .debug_str:00000000000003c1 .LASF155
     /tmp/cce9m9ZT.s:5623   .debug_str:0000000000000353 .LASF293
     /tmp/cce9m9ZT.s:5883   .debug_str:0000000000000be1 .LASF294
     /tmp/cce9m9ZT.s:6015   .debug_str:0000000000001055 .LASF156
     /tmp/cce9m9ZT.s:5699   .debug_str:00000000000005bc .LASF157
     /tmp/cce9m9ZT.s:5751   .debug_str:0000000000000793 .LASF158
     /tmp/cce9m9ZT.s:5797   .debug_str:0000000000000924 .LASF159
     /tmp/cce9m9ZT.s:5903   .debug_str:0000000000000c77 .LASF160
     /tmp/cce9m9ZT.s:5679   .debug_str:00000000000004db .LASF161
     /tmp/cce9m9ZT.s:5891   .debug_str:0000000000000c1f .LASF162
     /tmp/cce9m9ZT.s:5689   .debug_str:000000000000054e .LASF163
     /tmp/cce9m9ZT.s:6051   .debug_str:0000000000001199 .LASF164
     /tmp/cce9m9ZT.s:6067   .debug_str:00000000000011fd .LASF165
     /tmp/cce9m9ZT.s:5837   .debug_str:0000000000000a9d .LASF166
     /tmp/cce9m9ZT.s:5539   .debug_str:000000000000007b .LASF167
     /tmp/cce9m9ZT.s:6113   .debug_str:0000000000001366 .LASF168
     /tmp/cce9m9ZT.s:5855   .debug_str:0000000000000b25 .LASF169
     /tmp/cce9m9ZT.s:5607   .debug_str:00000000000002ee .LASF170
     /tmp/cce9m9ZT.s:5695   .debug_str:0000000000000594 .LASF171
     /tmp/cce9m9ZT.s:5967   .debug_str:0000000000000e55 .LASF172
     /tmp/cce9m9ZT.s:5873   .debug_str:0000000000000ba5 .LASF173
     /tmp/cce9m9ZT.s:5555   .debug_str:0000000000000112 .LASF295
     /tmp/cce9m9ZT.s:5635   .debug_str:00000000000003a1 .LASF174
     /tmp/cce9m9ZT.s:6107   .debug_str:0000000000001331 .LASF175
     /tmp/cce9m9ZT.s:5717   .debug_str:0000000000000661 .LASF176
     /tmp/cce9m9ZT.s:5923   .debug_str:0000000000000d2b .LASF177
     /tmp/cce9m9ZT.s:5845   .debug_str:0000000000000ad4 .LASF178
     /tmp/cce9m9ZT.s:5877   .debug_str:0000000000000bcd .LASF179
     /tmp/cce9m9ZT.s:5887   .debug_str:0000000000000bfe .LASF180
     /tmp/cce9m9ZT.s:6033   .debug_str:000000000000110b .LASF181
     /tmp/cce9m9ZT.s:6083   .debug_str:0000000000001278 .LASF182
     /tmp/cce9m9ZT.s:5723   .debug_str:000000000000068a .LASF183
     /tmp/cce9m9ZT.s:6027   .debug_str:00000000000010d6 .LASF184
     /tmp/cce9m9ZT.s:5931   .debug_str:0000000000000d72 .LASF185
     /tmp/cce9m9ZT.s:5851   .debug_str:0000000000000b05 .LASF186
     /tmp/cce9m9ZT.s:5885   .debug_str:0000000000000bf8 .LASF187
     /tmp/cce9m9ZT.s:5715   .debug_str:0000000000000650 .LASF188
     /tmp/cce9m9ZT.s:5997   .debug_str:000000000000100c .LASF189
     /tmp/cce9m9ZT.s:5821   .debug_str:0000000000000a10 .LASF190
     /tmp/cce9m9ZT.s:6059   .debug_str:00000000000011bc .LASF191
     /tmp/cce9m9ZT.s:5603   .debug_str:00000000000002d3 .LASF192
     /tmp/cce9m9ZT.s:5857   .debug_str:0000000000000b3e .LASF193
     /tmp/cce9m9ZT.s:6075   .debug_str:000000000000124f .LASF194
     /tmp/cce9m9ZT.s:6103   .debug_str:000000000000131f .LASF195
     /tmp/cce9m9ZT.s:5773   .debug_str:0000000000000830 .LASF196
     /tmp/cce9m9ZT.s:5655   .debug_str:000000000000044a .LASF197
     /tmp/cce9m9ZT.s:5569   .debug_str:00000000000001a3 .LASF198
     /tmp/cce9m9ZT.s:5817   .debug_str:00000000000009fb .LASF199
     /tmp/cce9m9ZT.s:5731   .debug_str:00000000000006cd .LASF200
     /tmp/cce9m9ZT.s:5537   .debug_str:000000000000006f .LASF296
     /tmp/cce9m9ZT.s:6001   .debug_str:000000000000101d .LASF201
     /tmp/cce9m9ZT.s:5971   .debug_str:0000000000000e90 .LASF202
     /tmp/cce9m9ZT.s:6071   .debug_str:0000000000001227 .LASF203
GAS LISTING /tmp/cce9m9ZT.s 			page 45


     /tmp/cce9m9ZT.s:6025   .debug_str:00000000000010cc .LASF204
     /tmp/cce9m9ZT.s:5617   .debug_str:0000000000000332 .LASF205
     /tmp/cce9m9ZT.s:5663   .debug_str:0000000000000485 .LASF206
     /tmp/cce9m9ZT.s:6077   .debug_str:0000000000001261 .LASF207
     /tmp/cce9m9ZT.s:5893   .debug_str:0000000000000c29 .LASF208
     /tmp/cce9m9ZT.s:5713   .debug_str:0000000000000648 .LASF209
     /tmp/cce9m9ZT.s:6115   .debug_str:000000000000136e .LASF210
     /tmp/cce9m9ZT.s:5771   .debug_str:0000000000000829 .LASF211
     /tmp/cce9m9ZT.s:5705   .debug_str:000000000000060c .LASF212
     /tmp/cce9m9ZT.s:5889   .debug_str:0000000000000c13 .LASF213
     /tmp/cce9m9ZT.s:5825   .debug_str:0000000000000a43 .LASF214
     /tmp/cce9m9ZT.s:5693   .debug_str:0000000000000588 .LASF215
     /tmp/cce9m9ZT.s:6045   .debug_str:0000000000001166 .LASF216
     /tmp/cce9m9ZT.s:5949   .debug_str:0000000000000df7 .LASF217
     /tmp/cce9m9ZT.s:5965   .debug_str:0000000000000e50 .LASF218
     /tmp/cce9m9ZT.s:6079   .debug_str:0000000000001268 .LASF219
     /tmp/cce9m9ZT.s:6057   .debug_str:00000000000011af .LASF220
     /tmp/cce9m9ZT.s:5613   .debug_str:0000000000000314 .LASF221
     /tmp/cce9m9ZT.s:5761   .debug_str:00000000000007df .LASF222
     /tmp/cce9m9ZT.s:5999   .debug_str:0000000000001013 .LASF223
     /tmp/cce9m9ZT.s:5853   .debug_str:0000000000000b1a .LASF224
     /tmp/cce9m9ZT.s:5981   .debug_str:0000000000000f78 .LASF225
     /tmp/cce9m9ZT.s:5915   .debug_str:0000000000000cd4 .LASF226
     /tmp/cce9m9ZT.s:6097   .debug_str:00000000000012eb .LASF227
     /tmp/cce9m9ZT.s:5925   .debug_str:0000000000000d34 .LASF228
     /tmp/cce9m9ZT.s:5549   .debug_str:00000000000000e1 .LASF229
     /tmp/cce9m9ZT.s:5779   .debug_str:0000000000000865 .LASF230
     /tmp/cce9m9ZT.s:5843   .debug_str:0000000000000abe .LASF231
     /tmp/cce9m9ZT.s:5545   .debug_str:00000000000000ab .LASF232
     /tmp/cce9m9ZT.s:6069   .debug_str:0000000000001217 .LASF233
     /tmp/cce9m9ZT.s:6085   .debug_str:0000000000001289 .LASF234
     /tmp/cce9m9ZT.s:5547   .debug_str:00000000000000cf .LASF235
     /tmp/cce9m9ZT.s:5581   .debug_str:00000000000001fa .LASF236
     /tmp/cce9m9ZT.s:5807   .debug_str:0000000000000994 .LASF237
     /tmp/cce9m9ZT.s:6029   .debug_str:00000000000010e7 .LASF238
     /tmp/cce9m9ZT.s:6047   .debug_str:0000000000001171 .LASF239
     /tmp/cce9m9ZT.s:5919   .debug_str:0000000000000cf4 .LASF240
     /tmp/cce9m9ZT.s:6021   .debug_str:000000000000109f .LASF241
     /tmp/cce9m9ZT.s:5983   .debug_str:0000000000000f91 .LASF242
     /tmp/cce9m9ZT.s:5769   .debug_str:0000000000000811 .LASF243
     /tmp/cce9m9ZT.s:5859   .debug_str:0000000000000b45 .LASF244
     /tmp/cce9m9ZT.s:5799   .debug_str:0000000000000940 .LASF245
     /tmp/cce9m9ZT.s:5733   .debug_str:00000000000006e1 .LASF246
     /tmp/cce9m9ZT.s:5551   .debug_str:00000000000000fc .LASF247
     /tmp/cce9m9ZT.s:5561   .debug_str:0000000000000161 .LASF248
     /tmp/cce9m9ZT.s:6049   .debug_str:0000000000001187 .LASF249
     /tmp/cce9m9ZT.s:6073   .debug_str:000000000000122f .LASF250
     /tmp/cce9m9ZT.s:5721   .debug_str:0000000000000679 .LASF251
     /tmp/cce9m9ZT.s:5595   .debug_str:000000000000027e .LASF252
     /tmp/cce9m9ZT.s:5629   .debug_str:0000000000000371 .LASF253
     /tmp/cce9m9ZT.s:5823   .debug_str:0000000000000a22 .LASF254
     /tmp/cce9m9ZT.s:5835   .debug_str:0000000000000a8a .LASF255
     /tmp/cce9m9ZT.s:5793   .debug_str:00000000000008fb .LASF256
     /tmp/cce9m9ZT.s:5871   .debug_str:0000000000000b98 .LASF257
     /tmp/cce9m9ZT.s:5703   .debug_str:00000000000005f1 .LASF258
     /tmp/cce9m9ZT.s:5565   .debug_str:000000000000018c .LASF259
     /tmp/cce9m9ZT.s:5791   .debug_str:00000000000008e0 .LASF260
GAS LISTING /tmp/cce9m9ZT.s 			page 46


     /tmp/cce9m9ZT.s:5665   .debug_str:000000000000048c .LASF261
     /tmp/cce9m9ZT.s:5727   .debug_str:00000000000006ad .LASF262
     /tmp/cce9m9ZT.s:6099   .debug_str:0000000000001308 .LASF263
     /tmp/cce9m9ZT.s:5783   .debug_str:0000000000000889 .LASF264
     /tmp/cce9m9ZT.s:5645   .debug_str:00000000000003fa .LASF265
     /tmp/cce9m9ZT.s:1139   .text:0000000000000480 .LFB76
     /tmp/cce9m9ZT.s:1158   .text:00000000000004a0 .LFE76
     /tmp/cce9m9ZT.s:1104   .text:000000000000044c .LFB75
     /tmp/cce9m9ZT.s:1133   .text:0000000000000480 .LFE75
     /tmp/cce9m9ZT.s:1122   .text:0000000000000470 .LVL60
     /tmp/cce9m9ZT.s:77     .text:000000000000003c .LFB74
     /tmp/cce9m9ZT.s:1098   .text:000000000000044c .LFE74
     /tmp/cce9m9ZT.s:5945   .debug_str:0000000000000deb .LASF266
     /tmp/cce9m9ZT.s:5326   .debug_loc:0000000000000000 .LLST0
     /tmp/cce9m9ZT.s:6043   .debug_str:0000000000001161 .LASF267
     /tmp/cce9m9ZT.s:5355   .debug_loc:0000000000000084 .LLST1
     /tmp/cce9m9ZT.s:219    .text:000000000000011c .LBB153
     /tmp/cce9m9ZT.s:874    .text:0000000000000374 .LBE153
     /tmp/cce9m9ZT.s:5362   .debug_loc:00000000000000a7 .LLST2
     /tmp/cce9m9ZT.s:6053   .debug_str:00000000000011a2 .LASF268
     /tmp/cce9m9ZT.s:5369   .debug_loc:00000000000000ca .LLST3
     /tmp/cce9m9ZT.s:221    .text:000000000000011c .LBB154
     /tmp/cce9m9ZT.s:237    .text:0000000000000128 .LBE154
     /tmp/cce9m9ZT.s:242    .text:000000000000012c .LBB156
     /tmp/cce9m9ZT.s:258    .text:0000000000000138 .LBE156
     /tmp/cce9m9ZT.s:260    .text:0000000000000138 .LBB158
     /tmp/cce9m9ZT.s:5507   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cce9m9ZT.s:359    .text:0000000000000168 .LBB160
     /tmp/cce9m9ZT.s:377    .text:000000000000017c .LBE160
     /tmp/cce9m9ZT.s:374    .text:000000000000017c .LVL19
     /tmp/cce9m9ZT.s:435    .text:0000000000000194 .LBB162
     /tmp/cce9m9ZT.s:455    .text:00000000000001ac .LBE162
     /tmp/cce9m9ZT.s:450    .text:00000000000001a8 .LVL24
     /tmp/cce9m9ZT.s:458    .text:00000000000001ac .LBB164
     /tmp/cce9m9ZT.s:520    .text:00000000000001f4 .LBE164
     /tmp/cce9m9ZT.s:493    .text:00000000000001d8 .LVL25
     /tmp/cce9m9ZT.s:523    .text:00000000000001f4 .LBB166
     /tmp/cce9m9ZT.s:555    .text:0000000000000218 .LBE166
     /tmp/cce9m9ZT.s:530    .text:0000000000000200 .LBB168
     /tmp/cce9m9ZT.s:539    .text:0000000000000208 .LBE168
     /tmp/cce9m9ZT.s:5376   .debug_loc:00000000000000ed .LLST4
     /tmp/cce9m9ZT.s:5384   .debug_loc:0000000000000111 .LLST5
     /tmp/cce9m9ZT.s:550    .text:0000000000000214 .LVL28
     /tmp/cce9m9ZT.s:558    .text:0000000000000218 .LBB170
     /tmp/cce9m9ZT.s:568    .text:0000000000000224 .LBE170
     /tmp/cce9m9ZT.s:563    .text:0000000000000220 .LVL29
     /tmp/cce9m9ZT.s:571    .text:0000000000000224 .LBB172
     /tmp/cce9m9ZT.s:633    .text:000000000000026c .LBE172
     /tmp/cce9m9ZT.s:606    .text:0000000000000250 .LVL30
     /tmp/cce9m9ZT.s:636    .text:000000000000026c .LBB174
     /tmp/cce9m9ZT.s:690    .text:00000000000002ac .LBE174
     /tmp/cce9m9ZT.s:663    .text:0000000000000290 .LVL31
     /tmp/cce9m9ZT.s:693    .text:00000000000002ac .LBB176
     /tmp/cce9m9ZT.s:736    .text:00000000000002e0 .LBE176
     /tmp/cce9m9ZT.s:714    .text:00000000000002cc .LBB178
     /tmp/cce9m9ZT.s:724    .text:00000000000002d8 .LBE178
     /tmp/cce9m9ZT.s:5391   .debug_loc:0000000000000134 .LLST6
GAS LISTING /tmp/cce9m9ZT.s 			page 47


     /tmp/cce9m9ZT.s:721    .text:00000000000002d8 .LVL33
     /tmp/cce9m9ZT.s:713    .text:00000000000002cc .LVL32
     /tmp/cce9m9ZT.s:739    .text:00000000000002e0 .LBB180
     /tmp/cce9m9ZT.s:759    .text:00000000000002f8 .LBE180
     /tmp/cce9m9ZT.s:754    .text:00000000000002f4 .LVL34
     /tmp/cce9m9ZT.s:762    .text:00000000000002f8 .LBB182
     /tmp/cce9m9ZT.s:782    .text:0000000000000310 .LBE182
     /tmp/cce9m9ZT.s:777    .text:000000000000030c .LVL35
     /tmp/cce9m9ZT.s:785    .text:0000000000000310 .LBB184
     /tmp/cce9m9ZT.s:805    .text:0000000000000328 .LBE184
     /tmp/cce9m9ZT.s:800    .text:0000000000000324 .LVL36
     /tmp/cce9m9ZT.s:808    .text:0000000000000328 .LBB186
     /tmp/cce9m9ZT.s:830    .text:0000000000000340 .LBE186
     /tmp/cce9m9ZT.s:814    .text:0000000000000330 .LVL37
     /tmp/cce9m9ZT.s:833    .text:0000000000000340 .LBB188
     /tmp/cce9m9ZT.s:854    .text:000000000000035c .LBE188
     /tmp/cce9m9ZT.s:849    .text:0000000000000358 .LVL38
     /tmp/cce9m9ZT.s:867    .text:0000000000000370 .LVL39
     /tmp/cce9m9ZT.s:389    .text:0000000000000180 .LBB191
     /tmp/cce9m9ZT.s:400    .text:0000000000000184 .LBE191
     /tmp/cce9m9ZT.s:5398   .debug_loc:0000000000000157 .LLST7
     /tmp/cce9m9ZT.s:402    .text:0000000000000184 .LBB193
     /tmp/cce9m9ZT.s:413    .text:0000000000000188 .LBE193
     /tmp/cce9m9ZT.s:5405   .debug_loc:000000000000017a .LLST8
     /tmp/cce9m9ZT.s:415    .text:0000000000000188 .LBB195
     /tmp/cce9m9ZT.s:427    .text:0000000000000190 .LBE195
     /tmp/cce9m9ZT.s:5412   .debug_loc:000000000000019d .LLST9
     /tmp/cce9m9ZT.s:959    .text:00000000000003cc .LBB205
     /tmp/cce9m9ZT.s:1038   .text:0000000000000404 .LBE205
     /tmp/cce9m9ZT.s:5420   .debug_loc:00000000000001c1 .LLST11
     /tmp/cce9m9ZT.s:5427   .debug_loc:00000000000001e4 .LLST12
     /tmp/cce9m9ZT.s:961    .text:00000000000003cc .LBB206
     /tmp/cce9m9ZT.s:977    .text:00000000000003d8 .LBE206
     /tmp/cce9m9ZT.s:979    .text:00000000000003d8 .LBB208
     /tmp/cce9m9ZT.s:995    .text:00000000000003e4 .LBE208
     /tmp/cce9m9ZT.s:997    .text:00000000000003e4 .LBB210
     /tmp/cce9m9ZT.s:1004   .text:00000000000003f0 .LBE210
     /tmp/cce9m9ZT.s:1010   .text:00000000000003f8 .LBB212
     /tmp/cce9m9ZT.s:1021   .text:00000000000003fc .LBE212
     /tmp/cce9m9ZT.s:5434   .debug_loc:0000000000000207 .LLST13
     /tmp/cce9m9ZT.s:1023   .text:00000000000003fc .LBB214
     /tmp/cce9m9ZT.s:1037   .text:0000000000000404 .LBE214
     /tmp/cce9m9ZT.s:5441   .debug_loc:000000000000022a .LLST14
     /tmp/cce9m9ZT.s:1008   .text:00000000000003f8 .LVL50
     /tmp/cce9m9ZT.s:95     .text:0000000000000058 .LBB150
     /tmp/cce9m9ZT.s:111    .text:0000000000000064 .LBE150
     /tmp/cce9m9ZT.s:889    .text:000000000000038c .LBB200
     /tmp/cce9m9ZT.s:898    .text:00000000000003a0 .LBE200
     /tmp/cce9m9ZT.s:910    .text:00000000000003ac .LBB203
     /tmp/cce9m9ZT.s:917    .text:00000000000003b0 .LBE203
     /tmp/cce9m9ZT.s:5448   .debug_loc:000000000000024d .LLST10
     /tmp/cce9m9ZT.s:924    .text:00000000000003b4 .LBB216
     /tmp/cce9m9ZT.s:936    .text:00000000000003bc .LBE216
     /tmp/cce9m9ZT.s:5455   .debug_loc:0000000000000270 .LLST15
     /tmp/cce9m9ZT.s:942    .text:00000000000003c0 .LBB218
     /tmp/cce9m9ZT.s:954    .text:00000000000003c8 .LBE218
     /tmp/cce9m9ZT.s:5463   .debug_loc:0000000000000294 .LLST16
GAS LISTING /tmp/cce9m9ZT.s 			page 48


     /tmp/cce9m9ZT.s:133    .text:0000000000000090 .LBB222
     /tmp/cce9m9ZT.s:149    .text:000000000000009c .LBE222
     /tmp/cce9m9ZT.s:186    .text:00000000000000fc .LBB224
     /tmp/cce9m9ZT.s:198    .text:0000000000000100 .LBE224
     /tmp/cce9m9ZT.s:5471   .debug_loc:00000000000002b8 .LLST17
     /tmp/cce9m9ZT.s:1043   .text:0000000000000404 .LBB229
     /tmp/cce9m9ZT.s:5478   .debug_loc:00000000000002db .LLST18
     /tmp/cce9m9ZT.s:1048   .text:000000000000040c .LVL53
     /tmp/cce9m9ZT.s:1060   .text:0000000000000424 .LVL56
     /tmp/cce9m9ZT.s:1086   .text:0000000000000438 .LVL58
     /tmp/cce9m9ZT.s:1093   .text:0000000000000448 .LVL59
     /tmp/cce9m9ZT.s:1064   .text:0000000000000424 .LBB232
     /tmp/cce9m9ZT.s:1076   .text:000000000000042c .LBE232
     /tmp/cce9m9ZT.s:5485   .debug_loc:00000000000002fe .LLST19
     /tmp/cce9m9ZT.s:154    .text:00000000000000ac .LVL6
     /tmp/cce9m9ZT.s:159    .text:00000000000000bc .LVL7
     /tmp/cce9m9ZT.s:164    .text:00000000000000c8 .LVL8
     /tmp/cce9m9ZT.s:169    .text:00000000000000d4 .LVL9
     /tmp/cce9m9ZT.s:174    .text:00000000000000e4 .LVL10
     /tmp/cce9m9ZT.s:179    .text:00000000000000f0 .LVL11
     /tmp/cce9m9ZT.s:184    .text:00000000000000fc .LVL12
     /tmp/cce9m9ZT.s:887    .text:000000000000038c .LVL41
     /tmp/cce9m9ZT.s:10     .text:0000000000000000 .LFB73
     /tmp/cce9m9ZT.s:57     .text:000000000000003c .LFE73
     /tmp/cce9m9ZT.s:30     .text:0000000000000020 .LBB72
     /tmp/cce9m9ZT.s:42     .text:0000000000000024 .LBE72
     /tmp/cce9m9ZT.s:25     .text:0000000000000018 .LVL0
     /tmp/cce9m9ZT.s:46     .text:000000000000002c .LVL3
     /tmp/cce9m9ZT.s:6011   .debug_str:000000000000104b .LASF269
     /tmp/cce9m9ZT.s:6013   .debug_str:0000000000001050 .LASF270
     /tmp/cce9m9ZT.s:5729   .debug_str:00000000000006c8 .LASF271
     /tmp/cce9m9ZT.s:5615   .debug_str:0000000000000327 .LASF272
     /tmp/cce9m9ZT.s:5667   .debug_str:0000000000000499 .LASF273
     /tmp/cce9m9ZT.s:6031   .debug_str:0000000000001106 .LASF274
     /tmp/cce9m9ZT.s:5763   .debug_str:00000000000007ec .LASF275
     /tmp/cce9m9ZT.s:5787   .debug_str:00000000000008b0 .LASF276
     /tmp/cce9m9ZT.s:5627   .debug_str:0000000000000362 .LASF278
     /tmp/cce9m9ZT.s:5765   .debug_str:00000000000007f2 .LASF277
     /tmp/cce9m9ZT.s:6061   .debug_str:00000000000011c2 .LASF279
     /tmp/cce9m9ZT.s:5559   .debug_str:000000000000014d .LASF280
     /tmp/cce9m9ZT.s:6035   .debug_str:0000000000001111 .LASF281
     /tmp/cce9m9ZT.s:109    .text:0000000000000064 .LVL4
     /tmp/cce9m9ZT.s:194    .text:0000000000000100 .LVL13
     /tmp/cce9m9ZT.s:215    .text:000000000000011c .LVL14
     /tmp/cce9m9ZT.s:235    .text:0000000000000128 .LVL15
     /tmp/cce9m9ZT.s:276    .text:0000000000000148 .LVL18
     /tmp/cce9m9ZT.s:870    .text:0000000000000374 .LVL40
     /tmp/cce9m9ZT.s:920    .text:00000000000003b4 .LVL44
     /tmp/cce9m9ZT.s:939    .text:00000000000003c0 .LVL46
     /tmp/cce9m9ZT.s:975    .text:00000000000003d8 .LVL48
     /tmp/cce9m9ZT.s:1034   .text:0000000000000404 .LVL52
     /tmp/cce9m9ZT.s:1050   .text:0000000000000410 .LVL54
     /tmp/cce9m9ZT.s:147    .text:000000000000009c .LVL5
     /tmp/cce9m9ZT.s:240    .text:000000000000012c .LVL16
     /tmp/cce9m9ZT.s:256    .text:0000000000000138 .LVL17
     /tmp/cce9m9ZT.s:529    .text:0000000000000200 .LVL26
     /tmp/cce9m9ZT.s:537    .text:0000000000000208 .LVL27
GAS LISTING /tmp/cce9m9ZT.s 			page 49


     /tmp/cce9m9ZT.s:387    .text:0000000000000180 .LVL20
     /tmp/cce9m9ZT.s:397    .text:0000000000000184 .LVL21
     /tmp/cce9m9ZT.s:410    .text:0000000000000188 .LVL22
     /tmp/cce9m9ZT.s:424    .text:0000000000000190 .LVL23
     /tmp/cce9m9ZT.s:993    .text:00000000000003e4 .LVL49
     /tmp/cce9m9ZT.s:1018   .text:00000000000003fc .LVL51
     /tmp/cce9m9ZT.s:909    .text:00000000000003ac .LVL42
     /tmp/cce9m9ZT.s:915    .text:00000000000003b0 .LVL43
     /tmp/cce9m9ZT.s:933    .text:00000000000003bc .LVL45
     /tmp/cce9m9ZT.s:951    .text:00000000000003c8 .LVL47
     /tmp/cce9m9ZT.s:1054   .text:0000000000000418 .LVL55
     /tmp/cce9m9ZT.s:1073   .text:000000000000042c .LVL57
     /tmp/cce9m9ZT.s:1184   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cce9m9ZT.s:379    .text:000000000000017c .LBE158
     /tmp/cce9m9ZT.s:431    .text:0000000000000194 .LBB197
     /tmp/cce9m9ZT.s:873    .text:0000000000000374 .LBE197
     /tmp/cce9m9ZT.s:1062   .text:0000000000000424 .LBE229
     /tmp/cce9m9ZT.s:1080   .text:0000000000000430 .LBB234
     /tmp/cce9m9ZT.s:1096   .text:000000000000044c .LBE234

UNDEFINED SYMBOLS
_ZN15MemoryAllocator7initMemEv
_ZN6Kernel14supervisorTrapEv
_ZN4Uart8initUartEv
_Z14__print_stringPKc
_Z14__print_uint64m
_ZN4Uart5txPutEc
_ZN15MemoryAllocator8allocateEm
_ZN15MemoryAllocator4freeEPv
_ZN3TCB9createTCBEPFvPvES0_
_ZN3TCB7runningE
_ZN3TCB8dispatchEv
_ZN3TCB20createDeactivatedTCBEPFvPvES0_
_ZN3Sem9createSemEj
_ZN3SemD1Ev
_ZN3Sem7semWaitEv
_ZN3Sem9semSignalEv
_ZN9Scheduler9timeSleepEm
_ZN4Uart5rxGetEv
_ZN9Scheduler14timerInterruptEv
_ZN3TCB16timeSliceCounterE
plic_claim
plic_complete
_ZN4Uart9getStatusEv
_ZN4Uart9rxReceiveEv
_ZN9Scheduler6finishEv
