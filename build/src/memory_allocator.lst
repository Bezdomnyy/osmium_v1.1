GAS LISTING /tmp/ccFRDfWQ.s 			page 1


   1              		.file	"memory_allocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator7initMemEv
   9              	_ZN15MemoryAllocator7initMemEv:
  10              	.LFB2:
  11              		.file 1 "src/memory_allocator.cpp"
   1:src/memory_allocator.cpp **** //
   2:src/memory_allocator.cpp **** // Created by os on 9/6/22.
   3:src/memory_allocator.cpp **** //
   4:src/memory_allocator.cpp **** 
   5:src/memory_allocator.cpp **** #include "../h/memory_allocator.hpp"
   6:src/memory_allocator.cpp **** 
   7:src/memory_allocator.cpp **** MemoryAllocator::FreeMem* MemoryAllocator::fMemHead = nullptr;
   8:src/memory_allocator.cpp **** /*const void* MemoryAllocator::FreeMemStart = HEAP_START_ADDR;
   9:src/memory_allocator.cpp **** const void* MemoryAllocator::FreeMemEnd = HEAP_END_ADDR;
  10:src/memory_allocator.cpp **** const size_t MemoryAllocator::BlockSize = MEM_BLOCK_SIZE;*/
  11:src/memory_allocator.cpp **** 
  12:src/memory_allocator.cpp **** void *MemoryAllocator::allocate(size_t size) {
  13:src/memory_allocator.cpp ****     return allocBlocks(firstFit(size), size);
  14:src/memory_allocator.cpp **** }
  15:src/memory_allocator.cpp **** 
  16:src/memory_allocator.cpp **** void MemoryAllocator::free(void* addr) {
  17:src/memory_allocator.cpp ****     addr = (void*)((uint64)addr - sizeof(size_t));
  18:src/memory_allocator.cpp ****     size_t deallocSize = *(size_t*)addr;
  19:src/memory_allocator.cpp **** 
  20:src/memory_allocator.cpp ****     FreeMem* curr = nullptr;
  21:src/memory_allocator.cpp ****     if (fMemHead && addr>(void*)fMemHead)
  22:src/memory_allocator.cpp ****         for(curr = fMemHead; curr->next != 0 && (void*)curr->next < addr; curr = curr->next);
  23:src/memory_allocator.cpp **** 
  24:src/memory_allocator.cpp ****     FreeMem* newNode = (FreeMem*)addr;
  25:src/memory_allocator.cpp ****     newNode->size = deallocSize; //this line may be unnecessary
  26:src/memory_allocator.cpp ****     newNode->prev = curr;
  27:src/memory_allocator.cpp ****     if (curr) newNode->next = curr->next, curr->next = newNode;
  28:src/memory_allocator.cpp ****     else newNode->next = fMemHead, fMemHead = newNode;
  29:src/memory_allocator.cpp ****     if (newNode->next) newNode->next->prev = newNode;
  30:src/memory_allocator.cpp **** 
  31:src/memory_allocator.cpp ****     tryToMerge(newNode);
  32:src/memory_allocator.cpp ****     tryToMerge(curr);
  33:src/memory_allocator.cpp **** 
  34:src/memory_allocator.cpp **** }
  35:src/memory_allocator.cpp **** 
  36:src/memory_allocator.cpp **** void MemoryAllocator::initMem()  {
  12              		.loc 1 36 34
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  37:src/memory_allocator.cpp ****     fMemHead = (FreeMem*)HEAP_START_ADDR;
  20              		.loc 1 37 5
  21              		.loc 1 37 14 is_stmt 0
GAS LISTING /tmp/ccFRDfWQ.s 			page 2


  22 000c 97070000 		la	a5,HEAP_START_ADDR
  22      83B70700 
  23 0014 83B70700 		ld	a5,0(a5)
  24 0018 97060000 		lla	a3,.LANCHOR0
  24      93860600 
  25 0020 23B0F600 		sd	a5,0(a3)
  38:src/memory_allocator.cpp ****     fMemHead->size = (size_t) ((uint64)HEAP_END_ADDR - (uint64)HEAP_START_ADDR );
  26              		.loc 1 38 5 is_stmt 1
  27              		.loc 1 38 22 is_stmt 0
  28 0024 17070000 		la	a4,HEAP_END_ADDR
  28      03370700 
  29 002c 03370700 		ld	a4,0(a4)
  30              		.loc 1 38 54
  31 0030 3307F740 		sub	a4,a4,a5
  32              		.loc 1 38 20
  33 0034 23B0E700 		sd	a4,0(a5)
  39:src/memory_allocator.cpp ****     /*fMemHead->prev = fMemHead;
  40:src/memory_allocator.cpp ****     fMemHead->next = fMemHead;*/
  41:src/memory_allocator.cpp ****     fMemHead->prev = nullptr;
  34              		.loc 1 41 5 is_stmt 1
  35              		.loc 1 41 15 is_stmt 0
  36 0038 83B70600 		ld	a5,0(a3)
  37              		.loc 1 41 20
  38 003c 23B40700 		sd	zero,8(a5)
  42:src/memory_allocator.cpp ****     fMemHead->next = nullptr;
  39              		.loc 1 42 5 is_stmt 1
  40              		.loc 1 42 20 is_stmt 0
  41 0040 23B80700 		sd	zero,16(a5)
  43:src/memory_allocator.cpp **** }
  42              		.loc 1 43 1
  43 0044 03348100 		ld	s0,8(sp)
  44              		.cfi_restore 8
  45              		.cfi_def_cfa 2, 16
  46 0048 13010101 		addi	sp,sp,16
  47              		.cfi_def_cfa_offset 0
  48 004c 67800000 		jr	ra
  49              		.cfi_endproc
  50              	.LFE2:
  52              		.align	2
  53              		.globl	_ZN15MemoryAllocator8firstFitEm
  55              	_ZN15MemoryAllocator8firstFitEm:
  56              	.LFB3:
  44:src/memory_allocator.cpp **** 
  45:src/memory_allocator.cpp **** MemoryAllocator::FreeMem *MemoryAllocator::firstFit(size_t size) {
  57              		.loc 1 45 66 is_stmt 1
  58              		.cfi_startproc
  59              	.LVL0:
  60 0050 130101FF 		addi	sp,sp,-16
  61              		.cfi_def_cfa_offset 16
  62 0054 23348100 		sd	s0,8(sp)
  63              		.cfi_offset 8, -8
  64 0058 13040101 		addi	s0,sp,16
  65              		.cfi_def_cfa 8, 0
  66 005c 13060500 		mv	a2,a0
  46:src/memory_allocator.cpp ****     FreeMem* curr = fMemHead;
  67              		.loc 1 46 5
  68              		.loc 1 46 14 is_stmt 0
GAS LISTING /tmp/ccFRDfWQ.s 			page 3


  69 0060 17050000 		ld	a0,.LANCHOR0
  69      03350500 
  70              	.LVL1:
  71              	.L6:
  47:src/memory_allocator.cpp ****     for(; curr && curr->next; curr = curr->next)
  72              		.loc 1 47 5 is_stmt 1 discriminator 2
  73              		.loc 1 47 16 discriminator 2
  74 0068 63000502 		beqz	a0,.L4
  75              		.loc 1 47 25 is_stmt 0 discriminator 1
  76 006c 03370501 		ld	a4,16(a0)
  77              		.loc 1 47 16 discriminator 1
  78 0070 630C0700 		beqz	a4,.L4
  48:src/memory_allocator.cpp ****         if (size + sizeof(size_t) <= curr->size) return curr;
  79              		.loc 1 48 9 is_stmt 1
  80              		.loc 1 48 18 is_stmt 0
  81 0074 93078600 		addi	a5,a2,8
  82              		.loc 1 48 44
  83 0078 83360500 		ld	a3,0(a0)
  84              		.loc 1 48 9
  85 007c 63FEF600 		bleu	a5,a3,.L3
  47:src/memory_allocator.cpp ****     for(; curr && curr->next; curr = curr->next)
  86              		.loc 1 47 36
  87 0080 13050700 		mv	a0,a4
  88              	.LVL2:
  89 0084 6FF05FFE 		j	.L6
  90              	.LVL3:
  91              	.L4:
  49:src/memory_allocator.cpp ****     if (curr && (size + sizeof(size_t) <= curr->size)) return curr;
  92              		.loc 1 49 5 is_stmt 1
  93 0088 63080500 		beqz	a0,.L3
  94              		.loc 1 49 23 is_stmt 0 discriminator 1
  95 008c 13068600 		addi	a2,a2,8
  96              	.LVL4:
  97              		.loc 1 49 49 discriminator 1
  98 0090 83370500 		ld	a5,0(a0)
  99              		.loc 1 49 14 discriminator 1
 100 0094 63E8C700 		bgtu	a2,a5,.L8
 101              	.LVL5:
 102              	.L3:
  50:src/memory_allocator.cpp ****     return nullptr;
  51:src/memory_allocator.cpp **** }
 103              		.loc 1 51 1
 104 0098 03348100 		ld	s0,8(sp)
 105              		.cfi_remember_state
 106              		.cfi_restore 8
 107              		.cfi_def_cfa 2, 16
 108 009c 13010101 		addi	sp,sp,16
 109              		.cfi_def_cfa_offset 0
 110 00a0 67800000 		jr	ra
 111              	.LVL6:
 112              	.L8:
 113              		.cfi_restore_state
  50:src/memory_allocator.cpp ****     return nullptr;
 114              		.loc 1 50 12
 115 00a4 13050000 		li	a0,0
 116              	.LVL7:
 117 00a8 6FF01FFF 		j	.L3
GAS LISTING /tmp/ccFRDfWQ.s 			page 4


 118              		.cfi_endproc
 119              	.LFE3:
 121              		.align	2
 122              		.globl	_ZN15MemoryAllocator8calcSizeEm
 124              	_ZN15MemoryAllocator8calcSizeEm:
 125              	.LFB5:
  52:src/memory_allocator.cpp **** 
  53:src/memory_allocator.cpp **** void *MemoryAllocator::allocBlocks(MemoryAllocator::FreeMem *node, size_t size) {
  54:src/memory_allocator.cpp ****     void* ret = nullptr;
  55:src/memory_allocator.cpp ****     if (node) {
  56:src/memory_allocator.cpp ****         size_t allocSize = calcSize(size);
  57:src/memory_allocator.cpp **** 
  58:src/memory_allocator.cpp ****         FreeMem* newNode = nullptr;
  59:src/memory_allocator.cpp ****         if (node->size - allocSize >= MEM_BLOCK_SIZE) {
  60:src/memory_allocator.cpp ****             newNode = (FreeMem*)((uint64)node + (uint64)allocSize);
  61:src/memory_allocator.cpp ****             newNode->size = node->size - allocSize;
  62:src/memory_allocator.cpp ****             if (node->prev) node->prev->next = newNode;
  63:src/memory_allocator.cpp ****             else fMemHead = newNode;
  64:src/memory_allocator.cpp ****             if (node->next) node->next->prev = newNode;
  65:src/memory_allocator.cpp ****             newNode->next = node->next;
  66:src/memory_allocator.cpp ****             newNode->prev = node->prev;
  67:src/memory_allocator.cpp ****         }
  68:src/memory_allocator.cpp ****         else {
  69:src/memory_allocator.cpp ****             if (node->prev) node->prev->next = node->next;
  70:src/memory_allocator.cpp ****             else fMemHead = newNode;
  71:src/memory_allocator.cpp ****             if (node->next) node->next->prev = node->prev;
  72:src/memory_allocator.cpp ****         }
  73:src/memory_allocator.cpp **** 
  74:src/memory_allocator.cpp ****         *(size_t*)node = allocSize;
  75:src/memory_allocator.cpp ****         ret = (void*)((uint64)node + sizeof(size_t));
  76:src/memory_allocator.cpp **** 
  77:src/memory_allocator.cpp ****     }
  78:src/memory_allocator.cpp ****     return ret;
  79:src/memory_allocator.cpp **** }
  80:src/memory_allocator.cpp **** 
  81:src/memory_allocator.cpp **** size_t MemoryAllocator::calcSize(size_t size) {
 126              		.loc 1 81 47 is_stmt 1
 127              		.cfi_startproc
 128              	.LVL8:
 129 00ac 130101FF 		addi	sp,sp,-16
 130              		.cfi_def_cfa_offset 16
 131 00b0 23348100 		sd	s0,8(sp)
 132              		.cfi_offset 8, -8
 133 00b4 13040101 		addi	s0,sp,16
 134              		.cfi_def_cfa 8, 0
  82:src/memory_allocator.cpp ****     size_t allocSize = size + sizeof(size_t);
 135              		.loc 1 82 5
 136              		.loc 1 82 12 is_stmt 0
 137 00b8 13058500 		addi	a0,a0,8
 138              	.LVL9:
  83:src/memory_allocator.cpp ****     size_t BlockSize = MEM_BLOCK_SIZE;
 139              		.loc 1 83 5 is_stmt 1
  84:src/memory_allocator.cpp ****     if (allocSize % BlockSize) allocSize = allocSize + (BlockSize - allocSize % BlockSize);
 140              		.loc 1 84 5
 141              		.loc 1 84 19 is_stmt 0
 142 00bc 9377F503 		andi	a5,a0,63
 143              		.loc 1 84 5
GAS LISTING /tmp/ccFRDfWQ.s 			page 5


 144 00c0 63880700 		beqz	a5,.L9
 145              		.loc 1 84 32 is_stmt 1 discriminator 1
 146              		.loc 1 84 67 is_stmt 0 discriminator 1
 147 00c4 13070004 		li	a4,64
 148 00c8 B307F740 		sub	a5,a4,a5
 149              		.loc 1 84 42 discriminator 1
 150 00cc 3305F500 		add	a0,a0,a5
 151              	.LVL10:
  85:src/memory_allocator.cpp ****     return allocSize;
 152              		.loc 1 85 5 is_stmt 1 discriminator 1
 153              	.L9:
  86:src/memory_allocator.cpp **** }
 154              		.loc 1 86 1 is_stmt 0
 155 00d0 03348100 		ld	s0,8(sp)
 156              		.cfi_restore 8
 157              		.cfi_def_cfa 2, 16
 158 00d4 13010101 		addi	sp,sp,16
 159              		.cfi_def_cfa_offset 0
 160 00d8 67800000 		jr	ra
 161              		.cfi_endproc
 162              	.LFE5:
 164              		.align	2
 165              		.globl	_ZN15MemoryAllocator11allocBlocksEPNS_7FreeMemEm
 167              	_ZN15MemoryAllocator11allocBlocksEPNS_7FreeMemEm:
 168              	.LFB4:
  53:src/memory_allocator.cpp ****     void* ret = nullptr;
 169              		.loc 1 53 81 is_stmt 1
 170              		.cfi_startproc
 171              	.LVL11:
 172 00dc 130101FE 		addi	sp,sp,-32
 173              		.cfi_def_cfa_offset 32
 174 00e0 233C1100 		sd	ra,24(sp)
 175 00e4 23388100 		sd	s0,16(sp)
 176 00e8 23349100 		sd	s1,8(sp)
 177              		.cfi_offset 1, -8
 178              		.cfi_offset 8, -16
 179              		.cfi_offset 9, -24
 180 00ec 13040102 		addi	s0,sp,32
 181              		.cfi_def_cfa 8, 0
 182 00f0 93040500 		mv	s1,a0
  54:src/memory_allocator.cpp ****     if (node) {
 183              		.loc 1 54 5
 184              	.LVL12:
  55:src/memory_allocator.cpp ****         size_t allocSize = calcSize(size);
 185              		.loc 1 55 5
 186              	.LBB2:
 187 00f4 630C0504 		beqz	a0,.L12
 188 00f8 13850500 		mv	a0,a1
 189              	.LVL13:
 190              	.LBB3:
  56:src/memory_allocator.cpp **** 
 191              		.loc 1 56 9
  56:src/memory_allocator.cpp **** 
 192              		.loc 1 56 36 is_stmt 0
 193 00fc 97000000 		call	_ZN15MemoryAllocator8calcSizeEm
 193      E7800000 
 194              	.LVL14:
GAS LISTING /tmp/ccFRDfWQ.s 			page 6


  58:src/memory_allocator.cpp ****         if (node->size - allocSize >= MEM_BLOCK_SIZE) {
 195              		.loc 1 58 9 is_stmt 1
  59:src/memory_allocator.cpp ****             newNode = (FreeMem*)((uint64)node + (uint64)allocSize);
 196              		.loc 1 59 9
  59:src/memory_allocator.cpp ****             newNode = (FreeMem*)((uint64)node + (uint64)allocSize);
 197              		.loc 1 59 19 is_stmt 0
 198 0104 83B70400 		ld	a5,0(s1)
  59:src/memory_allocator.cpp ****             newNode = (FreeMem*)((uint64)node + (uint64)allocSize);
 199              		.loc 1 59 24
 200 0108 B387A740 		sub	a5,a5,a0
  59:src/memory_allocator.cpp ****             newNode = (FreeMem*)((uint64)node + (uint64)allocSize);
 201              		.loc 1 59 9
 202 010c 1307F003 		li	a4,63
 203 0110 637EF704 		bleu	a5,a4,.L14
  60:src/memory_allocator.cpp ****             newNode->size = node->size - allocSize;
 204              		.loc 1 60 13 is_stmt 1
  60:src/memory_allocator.cpp ****             newNode->size = node->size - allocSize;
 205              		.loc 1 60 47 is_stmt 0
 206 0114 3387A400 		add	a4,s1,a0
 207              	.LVL15:
  61:src/memory_allocator.cpp ****             if (node->prev) node->prev->next = newNode;
 208              		.loc 1 61 13 is_stmt 1
  61:src/memory_allocator.cpp ****             if (node->prev) node->prev->next = newNode;
 209              		.loc 1 61 27 is_stmt 0
 210 0118 2330F700 		sd	a5,0(a4)
  62:src/memory_allocator.cpp ****             else fMemHead = newNode;
 211              		.loc 1 62 13 is_stmt 1
  62:src/memory_allocator.cpp ****             else fMemHead = newNode;
 212              		.loc 1 62 23 is_stmt 0
 213 011c 83B78400 		ld	a5,8(s1)
  62:src/memory_allocator.cpp ****             else fMemHead = newNode;
 214              		.loc 1 62 13
 215 0120 63800704 		beqz	a5,.L15
  62:src/memory_allocator.cpp ****             else fMemHead = newNode;
 216              		.loc 1 62 29 is_stmt 1 discriminator 1
  62:src/memory_allocator.cpp ****             else fMemHead = newNode;
 217              		.loc 1 62 46 is_stmt 0 discriminator 1
 218 0124 23B8E700 		sd	a4,16(a5)
 219              	.L16:
  64:src/memory_allocator.cpp ****             newNode->next = node->next;
 220              		.loc 1 64 13 is_stmt 1
  64:src/memory_allocator.cpp ****             newNode->next = node->next;
 221              		.loc 1 64 23 is_stmt 0
 222 0128 83B70401 		ld	a5,16(s1)
  64:src/memory_allocator.cpp ****             newNode->next = node->next;
 223              		.loc 1 64 13
 224 012c 63840700 		beqz	a5,.L17
  64:src/memory_allocator.cpp ****             newNode->next = node->next;
 225              		.loc 1 64 29 is_stmt 1 discriminator 1
  64:src/memory_allocator.cpp ****             newNode->next = node->next;
 226              		.loc 1 64 46 is_stmt 0 discriminator 1
 227 0130 23B4E700 		sd	a4,8(a5)
 228              	.L17:
  65:src/memory_allocator.cpp ****             newNode->prev = node->prev;
 229              		.loc 1 65 13 is_stmt 1
  65:src/memory_allocator.cpp ****             newNode->prev = node->prev;
 230              		.loc 1 65 35 is_stmt 0
GAS LISTING /tmp/ccFRDfWQ.s 			page 7


 231 0134 83B70401 		ld	a5,16(s1)
  65:src/memory_allocator.cpp ****             newNode->prev = node->prev;
 232              		.loc 1 65 27
 233 0138 2338F700 		sd	a5,16(a4)
  66:src/memory_allocator.cpp ****         }
 234              		.loc 1 66 13 is_stmt 1
  66:src/memory_allocator.cpp ****         }
 235              		.loc 1 66 35 is_stmt 0
 236 013c 83B78400 		ld	a5,8(s1)
  66:src/memory_allocator.cpp ****         }
 237              		.loc 1 66 27
 238 0140 2334F700 		sd	a5,8(a4)
 239              	.LVL16:
 240              	.L18:
  74:src/memory_allocator.cpp ****         ret = (void*)((uint64)node + sizeof(size_t));
 241              		.loc 1 74 9 is_stmt 1
  74:src/memory_allocator.cpp ****         ret = (void*)((uint64)node + sizeof(size_t));
 242              		.loc 1 74 24 is_stmt 0
 243 0144 23B0A400 		sd	a0,0(s1)
  75:src/memory_allocator.cpp **** 
 244              		.loc 1 75 9 is_stmt 1
  75:src/memory_allocator.cpp **** 
 245              		.loc 1 75 36 is_stmt 0
 246 0148 13858400 		addi	a0,s1,8
 247              	.LVL17:
 248              	.L12:
 249              	.LBE3:
 250              	.LBE2:
  79:src/memory_allocator.cpp **** 
 251              		.loc 1 79 1
 252 014c 83308101 		ld	ra,24(sp)
 253              		.cfi_remember_state
 254              		.cfi_restore 1
 255 0150 03340101 		ld	s0,16(sp)
 256              		.cfi_restore 8
 257              		.cfi_def_cfa 2, 32
 258 0154 83348100 		ld	s1,8(sp)
 259              		.cfi_restore 9
 260              	.LVL18:
 261 0158 13010102 		addi	sp,sp,32
 262              		.cfi_def_cfa_offset 0
 263 015c 67800000 		jr	ra
 264              	.LVL19:
 265              	.L15:
 266              		.cfi_restore_state
 267              	.LBB5:
 268              	.LBB4:
  63:src/memory_allocator.cpp ****             if (node->next) node->next->prev = newNode;
 269              		.loc 1 63 18 is_stmt 1
  63:src/memory_allocator.cpp ****             if (node->next) node->next->prev = newNode;
 270              		.loc 1 63 27 is_stmt 0
 271 0160 97070000 		sd	a4,.LANCHOR0,a5
 271      23B0E700 
 272 0168 6FF01FFC 		j	.L16
 273              	.LVL20:
 274              	.L14:
  69:src/memory_allocator.cpp ****             else fMemHead = newNode;
GAS LISTING /tmp/ccFRDfWQ.s 			page 8


 275              		.loc 1 69 13 is_stmt 1
  69:src/memory_allocator.cpp ****             else fMemHead = newNode;
 276              		.loc 1 69 23 is_stmt 0
 277 016c 83B78400 		ld	a5,8(s1)
  69:src/memory_allocator.cpp ****             else fMemHead = newNode;
 278              		.loc 1 69 13
 279 0170 63800702 		beqz	a5,.L19
  69:src/memory_allocator.cpp ****             else fMemHead = newNode;
 280              		.loc 1 69 29 is_stmt 1 discriminator 1
  69:src/memory_allocator.cpp ****             else fMemHead = newNode;
 281              		.loc 1 69 54 is_stmt 0 discriminator 1
 282 0174 03B70401 		ld	a4,16(s1)
  69:src/memory_allocator.cpp ****             else fMemHead = newNode;
 283              		.loc 1 69 46 discriminator 1
 284 0178 23B8E700 		sd	a4,16(a5)
 285              	.L20:
  71:src/memory_allocator.cpp ****         }
 286              		.loc 1 71 13 is_stmt 1
  71:src/memory_allocator.cpp ****         }
 287              		.loc 1 71 23 is_stmt 0
 288 017c 83B70401 		ld	a5,16(s1)
  71:src/memory_allocator.cpp ****         }
 289              		.loc 1 71 13
 290 0180 E38207FC 		beqz	a5,.L18
  71:src/memory_allocator.cpp ****         }
 291              		.loc 1 71 29 is_stmt 1 discriminator 1
  71:src/memory_allocator.cpp ****         }
 292              		.loc 1 71 54 is_stmt 0 discriminator 1
 293 0184 03B78400 		ld	a4,8(s1)
  71:src/memory_allocator.cpp ****         }
 294              		.loc 1 71 46 discriminator 1
 295 0188 23B4E700 		sd	a4,8(a5)
 296 018c 6FF09FFB 		j	.L18
 297              	.L19:
  70:src/memory_allocator.cpp ****             if (node->next) node->next->prev = node->prev;
 298              		.loc 1 70 18 is_stmt 1
  70:src/memory_allocator.cpp ****             if (node->next) node->next->prev = node->prev;
 299              		.loc 1 70 27 is_stmt 0
 300 0190 97070000 		sd	zero,.LANCHOR0,a5
 300      23B00700 
 301 0198 6FF05FFE 		j	.L20
 302              	.LBE4:
 303              	.LBE5:
 304              		.cfi_endproc
 305              	.LFE4:
 307              		.align	2
 308              		.globl	_ZN15MemoryAllocator8allocateEm
 310              	_ZN15MemoryAllocator8allocateEm:
 311              	.LFB0:
  12:src/memory_allocator.cpp ****     return allocBlocks(firstFit(size), size);
 312              		.loc 1 12 46 is_stmt 1
 313              		.cfi_startproc
 314              	.LVL21:
 315 019c 130101FE 		addi	sp,sp,-32
 316              		.cfi_def_cfa_offset 32
 317 01a0 233C1100 		sd	ra,24(sp)
 318 01a4 23388100 		sd	s0,16(sp)
GAS LISTING /tmp/ccFRDfWQ.s 			page 9


 319 01a8 23349100 		sd	s1,8(sp)
 320              		.cfi_offset 1, -8
 321              		.cfi_offset 8, -16
 322              		.cfi_offset 9, -24
 323 01ac 13040102 		addi	s0,sp,32
 324              		.cfi_def_cfa 8, 0
 325 01b0 93040500 		mv	s1,a0
  13:src/memory_allocator.cpp **** }
 326              		.loc 1 13 5
  13:src/memory_allocator.cpp **** }
 327              		.loc 1 13 23 is_stmt 0
 328 01b4 97000000 		call	_ZN15MemoryAllocator8firstFitEm
 328      E7800000 
 329              	.LVL22:
 330 01bc 93850400 		mv	a1,s1
 331 01c0 97000000 		call	_ZN15MemoryAllocator11allocBlocksEPNS_7FreeMemEm
 331      E7800000 
 332              	.LVL23:
  14:src/memory_allocator.cpp **** 
 333              		.loc 1 14 1
 334 01c8 83308101 		ld	ra,24(sp)
 335              		.cfi_restore 1
 336 01cc 03340101 		ld	s0,16(sp)
 337              		.cfi_restore 8
 338              		.cfi_def_cfa 2, 32
 339 01d0 83348100 		ld	s1,8(sp)
 340              		.cfi_restore 9
 341              	.LVL24:
 342 01d4 13010102 		addi	sp,sp,32
 343              		.cfi_def_cfa_offset 0
 344 01d8 67800000 		jr	ra
 345              		.cfi_endproc
 346              	.LFE0:
 348              		.align	2
 349              		.globl	_ZN15MemoryAllocator10tryToMergeEPNS_7FreeMemE
 351              	_ZN15MemoryAllocator10tryToMergeEPNS_7FreeMemE:
 352              	.LFB6:
  87:src/memory_allocator.cpp **** 
  88:src/memory_allocator.cpp **** void MemoryAllocator::tryToMerge(MemoryAllocator::FreeMem *node) {
 353              		.loc 1 88 66 is_stmt 1
 354              		.cfi_startproc
 355              	.LVL25:
 356 01dc 130101FF 		addi	sp,sp,-16
 357              		.cfi_def_cfa_offset 16
 358 01e0 23348100 		sd	s0,8(sp)
 359              		.cfi_offset 8, -8
 360 01e4 13040101 		addi	s0,sp,16
 361              		.cfi_def_cfa 8, 0
  89:src/memory_allocator.cpp ****     if(!node) return;
 362              		.loc 1 89 5
 363 01e8 63060502 		beqz	a0,.L25
  90:src/memory_allocator.cpp ****     if (!node->next && node + node->size != node->next) return;
 364              		.loc 1 90 5
 365              		.loc 1 90 16 is_stmt 0
 366 01ec 83370501 		ld	a5,16(a0)
 367              		.loc 1 90 5
 368 01f0 63880702 		beqz	a5,.L29
GAS LISTING /tmp/ccFRDfWQ.s 			page 10


 369              	.L27:
  91:src/memory_allocator.cpp **** 
  92:src/memory_allocator.cpp ****     node->size += node->next->size;
 370              		.loc 1 92 5 is_stmt 1
 371              		.loc 1 92 31 is_stmt 0
 372 01f4 83B60700 		ld	a3,0(a5)
 373              		.loc 1 92 16
 374 01f8 03370500 		ld	a4,0(a0)
 375 01fc 3307D700 		add	a4,a4,a3
 376 0200 2330E500 		sd	a4,0(a0)
  93:src/memory_allocator.cpp ****     node->next = node->next->next;
 377              		.loc 1 93 5 is_stmt 1
 378              		.loc 1 93 30 is_stmt 0
 379 0204 83B70701 		ld	a5,16(a5)
 380              		.loc 1 93 16
 381 0208 2338F500 		sd	a5,16(a0)
  94:src/memory_allocator.cpp ****     if (node->next) node->next->prev = node;
 382              		.loc 1 94 5 is_stmt 1
 383 020c 63840700 		beqz	a5,.L25
 384              		.loc 1 94 21 discriminator 1
 385              		.loc 1 94 38 is_stmt 0 discriminator 1
 386 0210 23B4A700 		sd	a0,8(a5)
 387              	.L25:
  95:src/memory_allocator.cpp **** }
 388              		.loc 1 95 1
 389 0214 03348100 		ld	s0,8(sp)
 390              		.cfi_remember_state
 391              		.cfi_restore 8
 392              		.cfi_def_cfa 2, 16
 393 0218 13010101 		addi	sp,sp,16
 394              		.cfi_def_cfa_offset 0
 395 021c 67800000 		jr	ra
 396              	.L29:
 397              		.cfi_restore_state
  90:src/memory_allocator.cpp **** 
 398              		.loc 1 90 37 discriminator 1
 399 0220 83360500 		ld	a3,0(a0)
  90:src/memory_allocator.cpp **** 
 400              		.loc 1 90 29 discriminator 1
 401 0224 13971600 		slli	a4,a3,1
 402 0228 3307D700 		add	a4,a4,a3
 403 022c 13173700 		slli	a4,a4,3
 404 0230 3307E500 		add	a4,a0,a4
  90:src/memory_allocator.cpp **** 
 405              		.loc 1 90 21 discriminator 1
 406 0234 E390E7FE 		bne	a5,a4,.L25
 407 0238 6FF0DFFB 		j	.L27
 408              		.cfi_endproc
 409              	.LFE6:
 411              		.align	2
 412              		.globl	_ZN15MemoryAllocator4freeEPv
 414              	_ZN15MemoryAllocator4freeEPv:
 415              	.LFB1:
  16:src/memory_allocator.cpp ****     addr = (void*)((uint64)addr - sizeof(size_t));
 416              		.loc 1 16 40 is_stmt 1
 417              		.cfi_startproc
 418              	.LVL26:
GAS LISTING /tmp/ccFRDfWQ.s 			page 11


 419 023c 130101FE 		addi	sp,sp,-32
 420              		.cfi_def_cfa_offset 32
 421 0240 233C1100 		sd	ra,24(sp)
 422 0244 23388100 		sd	s0,16(sp)
 423 0248 23349100 		sd	s1,8(sp)
 424              		.cfi_offset 1, -8
 425              		.cfi_offset 8, -16
 426              		.cfi_offset 9, -24
 427 024c 13040102 		addi	s0,sp,32
 428              		.cfi_def_cfa 8, 0
  17:src/memory_allocator.cpp ****     size_t deallocSize = *(size_t*)addr;
 429              		.loc 1 17 5
  17:src/memory_allocator.cpp ****     size_t deallocSize = *(size_t*)addr;
 430              		.loc 1 17 33 is_stmt 0
 431 0250 130585FF 		addi	a0,a0,-8
 432              	.LVL27:
  18:src/memory_allocator.cpp **** 
 433              		.loc 1 18 5 is_stmt 1
  20:src/memory_allocator.cpp ****     if (fMemHead && addr>(void*)fMemHead)
 434              		.loc 1 20 5
  21:src/memory_allocator.cpp ****         for(curr = fMemHead; curr->next != 0 && (void*)curr->next < addr; curr = curr->next);
 435              		.loc 1 21 5
  21:src/memory_allocator.cpp ****         for(curr = fMemHead; curr->next != 0 && (void*)curr->next < addr; curr = curr->next);
 436              		.loc 1 21 33 is_stmt 0
 437 0254 17070000 		ld	a4,.LANCHOR0
 437      03370700 
  21:src/memory_allocator.cpp ****         for(curr = fMemHead; curr->next != 0 && (void*)curr->next < addr; curr = curr->next);
 438              		.loc 1 21 5
 439 025c 63000702 		beqz	a4,.L36
  21:src/memory_allocator.cpp ****         for(curr = fMemHead; curr->next != 0 && (void*)curr->next < addr; curr = curr->next);
 440              		.loc 1 21 18 discriminator 1
 441 0260 6372A702 		bgeu	a4,a0,.L37
  22:src/memory_allocator.cpp **** 
 442              		.loc 1 22 18
 443 0264 93070700 		mv	a5,a4
 444              	.LVL28:
 445              	.L32:
  22:src/memory_allocator.cpp **** 
 446              		.loc 1 22 46 is_stmt 1 discriminator 4
 447 0268 93840700 		mv	s1,a5
  22:src/memory_allocator.cpp **** 
 448              		.loc 1 22 36 is_stmt 0 discriminator 4
 449 026c 83B70701 		ld	a5,16(a5)
 450              	.LVL29:
  22:src/memory_allocator.cpp **** 
 451              		.loc 1 22 46 discriminator 4
 452 0270 638C0700 		beqz	a5,.L31
  22:src/memory_allocator.cpp **** 
 453              		.loc 1 22 46 discriminator 2
 454 0274 E3EAA7FE 		bltu	a5,a0,.L32
 455 0278 6F000001 		j	.L31
 456              	.LVL30:
 457              	.L36:
  20:src/memory_allocator.cpp ****     if (fMemHead && addr>(void*)fMemHead)
 458              		.loc 1 20 14
 459 027c 93040700 		mv	s1,a4
 460 0280 6F008000 		j	.L31
GAS LISTING /tmp/ccFRDfWQ.s 			page 12


 461              	.L37:
 462 0284 93040000 		li	s1,0
 463              	.LVL31:
 464              	.L31:
  24:src/memory_allocator.cpp ****     newNode->size = deallocSize; //this line may be unnecessary
 465              		.loc 1 24 5 is_stmt 1
  25:src/memory_allocator.cpp ****     newNode->prev = curr;
 466              		.loc 1 25 5
  26:src/memory_allocator.cpp ****     if (curr) newNode->next = curr->next, curr->next = newNode;
 467              		.loc 1 26 5
  26:src/memory_allocator.cpp ****     if (curr) newNode->next = curr->next, curr->next = newNode;
 468              		.loc 1 26 19 is_stmt 0
 469 0288 23349500 		sd	s1,8(a0)
 470              	.LVL32:
  27:src/memory_allocator.cpp ****     else newNode->next = fMemHead, fMemHead = newNode;
 471              		.loc 1 27 5 is_stmt 1
 472 028c 63820404 		beqz	s1,.L33
  27:src/memory_allocator.cpp ****     else newNode->next = fMemHead, fMemHead = newNode;
 473              		.loc 1 27 15 discriminator 1
  27:src/memory_allocator.cpp ****     else newNode->next = fMemHead, fMemHead = newNode;
 474              		.loc 1 27 37 is_stmt 0 discriminator 1
 475 0290 83B70401 		ld	a5,16(s1)
  27:src/memory_allocator.cpp ****     else newNode->next = fMemHead, fMemHead = newNode;
 476              		.loc 1 27 29 discriminator 1
 477 0294 2338F500 		sd	a5,16(a0)
  27:src/memory_allocator.cpp ****     else newNode->next = fMemHead, fMemHead = newNode;
 478              		.loc 1 27 54 discriminator 1
 479 0298 23B8A400 		sd	a0,16(s1)
 480              	.L34:
  29:src/memory_allocator.cpp **** 
 481              		.loc 1 29 5 is_stmt 1
  29:src/memory_allocator.cpp **** 
 482              		.loc 1 29 18 is_stmt 0
 483 029c 83370501 		ld	a5,16(a0)
  29:src/memory_allocator.cpp **** 
 484              		.loc 1 29 5
 485 02a0 63840700 		beqz	a5,.L35
  29:src/memory_allocator.cpp **** 
 486              		.loc 1 29 24 is_stmt 1 discriminator 1
  29:src/memory_allocator.cpp **** 
 487              		.loc 1 29 44 is_stmt 0 discriminator 1
 488 02a4 23B4A700 		sd	a0,8(a5)
 489              	.L35:
  31:src/memory_allocator.cpp ****     tryToMerge(curr);
 490              		.loc 1 31 5 is_stmt 1
  31:src/memory_allocator.cpp ****     tryToMerge(curr);
 491              		.loc 1 31 15 is_stmt 0
 492 02a8 97000000 		call	_ZN15MemoryAllocator10tryToMergeEPNS_7FreeMemE
 492      E7800000 
 493              	.LVL33:
  32:src/memory_allocator.cpp **** 
 494              		.loc 1 32 5 is_stmt 1
  32:src/memory_allocator.cpp **** 
 495              		.loc 1 32 15 is_stmt 0
 496 02b0 13850400 		mv	a0,s1
 497 02b4 97000000 		call	_ZN15MemoryAllocator10tryToMergeEPNS_7FreeMemE
 497      E7800000 
GAS LISTING /tmp/ccFRDfWQ.s 			page 13


 498              	.LVL34:
  34:src/memory_allocator.cpp **** 
 499              		.loc 1 34 1
 500 02bc 83308101 		ld	ra,24(sp)
 501              		.cfi_remember_state
 502              		.cfi_restore 1
 503 02c0 03340101 		ld	s0,16(sp)
 504              		.cfi_restore 8
 505              		.cfi_def_cfa 2, 32
 506 02c4 83348100 		ld	s1,8(sp)
 507              		.cfi_restore 9
 508              	.LVL35:
 509 02c8 13010102 		addi	sp,sp,32
 510              		.cfi_def_cfa_offset 0
 511 02cc 67800000 		jr	ra
 512              	.LVL36:
 513              	.L33:
 514              		.cfi_restore_state
  28:src/memory_allocator.cpp ****     if (newNode->next) newNode->next->prev = newNode;
 515              		.loc 1 28 10 is_stmt 1
  28:src/memory_allocator.cpp ****     if (newNode->next) newNode->next->prev = newNode;
 516              		.loc 1 28 24 is_stmt 0
 517 02d0 2338E500 		sd	a4,16(a0)
  28:src/memory_allocator.cpp ****     if (newNode->next) newNode->next->prev = newNode;
 518              		.loc 1 28 45
 519 02d4 97070000 		sd	a0,.LANCHOR0,a5
 519      23B0A700 
 520 02dc 6FF01FFC 		j	.L34
 521              		.cfi_endproc
 522              	.LFE1:
 524              		.globl	_ZN15MemoryAllocator8fMemHeadE
 525              		.bss
 526              		.align	3
 527              		.set	.LANCHOR0,. + 0
 530              	_ZN15MemoryAllocator8fMemHeadE:
 531 0000 00000000 		.zero	8
 531      00000000 
 532              		.text
 533              	.Letext0:
 534              		.file 2 "src/../h/../lib/hw.h"
 535              		.file 3 "src/../h/memory_allocator.hpp"
GAS LISTING /tmp/ccFRDfWQ.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 memory_allocator.cpp
     /tmp/ccFRDfWQ.s:9      .text:0000000000000000 _ZN15MemoryAllocator7initMemEv
     /tmp/ccFRDfWQ.s:13     .text:0000000000000000 .L0 
     /tmp/ccFRDfWQ.s:14     .text:0000000000000000 .L0 
     /tmp/ccFRDfWQ.s:15     .text:0000000000000004 .L0 
     /tmp/ccFRDfWQ.s:17     .text:0000000000000008 .L0 
     /tmp/ccFRDfWQ.s:19     .text:000000000000000c .L0 
     /tmp/ccFRDfWQ.s:21     .text:000000000000000c .L0 
     /tmp/ccFRDfWQ.s:22     .text:000000000000000c .L0 
     /tmp/ccFRDfWQ.s:27     .text:0000000000000024 .L0 
     /tmp/ccFRDfWQ.s:28     .text:0000000000000024 .L0 
     /tmp/ccFRDfWQ.s:31     .text:0000000000000030 .L0 
     /tmp/ccFRDfWQ.s:33     .text:0000000000000034 .L0 
     /tmp/ccFRDfWQ.s:35     .text:0000000000000038 .L0 
     /tmp/ccFRDfWQ.s:36     .text:0000000000000038 .L0 
     /tmp/ccFRDfWQ.s:38     .text:000000000000003c .L0 
     /tmp/ccFRDfWQ.s:40     .text:0000000000000040 .L0 
     /tmp/ccFRDfWQ.s:41     .text:0000000000000040 .L0 
     /tmp/ccFRDfWQ.s:43     .text:0000000000000044 .L0 
     /tmp/ccFRDfWQ.s:44     .text:0000000000000048 .L0 
     /tmp/ccFRDfWQ.s:45     .text:0000000000000048 .L0 
     /tmp/ccFRDfWQ.s:47     .text:000000000000004c .L0 
     /tmp/ccFRDfWQ.s:49     .text:0000000000000050 .L0 
     /tmp/ccFRDfWQ.s:55     .text:0000000000000050 _ZN15MemoryAllocator8firstFitEm
     /tmp/ccFRDfWQ.s:58     .text:0000000000000050 .L0 
     /tmp/ccFRDfWQ.s:60     .text:0000000000000050 .L0 
     /tmp/ccFRDfWQ.s:61     .text:0000000000000054 .L0 
     /tmp/ccFRDfWQ.s:63     .text:0000000000000058 .L0 
     /tmp/ccFRDfWQ.s:65     .text:000000000000005c .L0 
     /tmp/ccFRDfWQ.s:68     .text:0000000000000060 .L0 
     /tmp/ccFRDfWQ.s:69     .text:0000000000000060 .L0 
     /tmp/ccFRDfWQ.s:73     .text:0000000000000068 .L0 
     /tmp/ccFRDfWQ.s:74     .text:0000000000000068 .L0 
     /tmp/ccFRDfWQ.s:76     .text:000000000000006c .L0 
     /tmp/ccFRDfWQ.s:78     .text:0000000000000070 .L0 
     /tmp/ccFRDfWQ.s:80     .text:0000000000000074 .L0 
     /tmp/ccFRDfWQ.s:81     .text:0000000000000074 .L0 
     /tmp/ccFRDfWQ.s:83     .text:0000000000000078 .L0 
     /tmp/ccFRDfWQ.s:85     .text:000000000000007c .L0 
     /tmp/ccFRDfWQ.s:87     .text:0000000000000080 .L0 
     /tmp/ccFRDfWQ.s:93     .text:0000000000000088 .L0 
     /tmp/ccFRDfWQ.s:95     .text:000000000000008c .L0 
     /tmp/ccFRDfWQ.s:98     .text:0000000000000090 .L0 
     /tmp/ccFRDfWQ.s:100    .text:0000000000000094 .L0 
     /tmp/ccFRDfWQ.s:104    .text:0000000000000098 .L0 
     /tmp/ccFRDfWQ.s:105    .text:000000000000009c .L0 
     /tmp/ccFRDfWQ.s:106    .text:000000000000009c .L0 
     /tmp/ccFRDfWQ.s:107    .text:000000000000009c .L0 
     /tmp/ccFRDfWQ.s:109    .text:00000000000000a0 .L0 
     /tmp/ccFRDfWQ.s:113    .text:00000000000000a4 .L0 
     /tmp/ccFRDfWQ.s:115    .text:00000000000000a4 .L0 
     /tmp/ccFRDfWQ.s:118    .text:00000000000000ac .L0 
     /tmp/ccFRDfWQ.s:124    .text:00000000000000ac _ZN15MemoryAllocator8calcSizeEm
     /tmp/ccFRDfWQ.s:127    .text:00000000000000ac .L0 
     /tmp/ccFRDfWQ.s:129    .text:00000000000000ac .L0 
     /tmp/ccFRDfWQ.s:130    .text:00000000000000b0 .L0 
GAS LISTING /tmp/ccFRDfWQ.s 			page 15


     /tmp/ccFRDfWQ.s:132    .text:00000000000000b4 .L0 
     /tmp/ccFRDfWQ.s:134    .text:00000000000000b8 .L0 
     /tmp/ccFRDfWQ.s:136    .text:00000000000000b8 .L0 
     /tmp/ccFRDfWQ.s:137    .text:00000000000000b8 .L0 
     /tmp/ccFRDfWQ.s:140    .text:00000000000000bc .L0 
     /tmp/ccFRDfWQ.s:141    .text:00000000000000bc .L0 
     /tmp/ccFRDfWQ.s:142    .text:00000000000000bc .L0 
     /tmp/ccFRDfWQ.s:144    .text:00000000000000c0 .L0 
     /tmp/ccFRDfWQ.s:146    .text:00000000000000c4 .L0 
     /tmp/ccFRDfWQ.s:147    .text:00000000000000c4 .L0 
     /tmp/ccFRDfWQ.s:150    .text:00000000000000cc .L0 
     /tmp/ccFRDfWQ.s:154    .text:00000000000000d0 .L0 
     /tmp/ccFRDfWQ.s:155    .text:00000000000000d0 .L0 
     /tmp/ccFRDfWQ.s:156    .text:00000000000000d4 .L0 
     /tmp/ccFRDfWQ.s:157    .text:00000000000000d4 .L0 
     /tmp/ccFRDfWQ.s:159    .text:00000000000000d8 .L0 
     /tmp/ccFRDfWQ.s:161    .text:00000000000000dc .L0 
     /tmp/ccFRDfWQ.s:167    .text:00000000000000dc _ZN15MemoryAllocator11allocBlocksEPNS_7FreeMemEm
     /tmp/ccFRDfWQ.s:170    .text:00000000000000dc .L0 
     /tmp/ccFRDfWQ.s:172    .text:00000000000000dc .L0 
     /tmp/ccFRDfWQ.s:173    .text:00000000000000e0 .L0 
     /tmp/ccFRDfWQ.s:177    .text:00000000000000ec .L0 
     /tmp/ccFRDfWQ.s:178    .text:00000000000000ec .L0 
     /tmp/ccFRDfWQ.s:179    .text:00000000000000ec .L0 
     /tmp/ccFRDfWQ.s:181    .text:00000000000000f0 .L0 
     /tmp/ccFRDfWQ.s:185    .text:00000000000000f4 .L0 
     /tmp/ccFRDfWQ.s:187    .text:00000000000000f4 .L0 
     /tmp/ccFRDfWQ.s:192    .text:00000000000000fc .L0 
     /tmp/ccFRDfWQ.s:193    .text:00000000000000fc .L0 
     /tmp/ccFRDfWQ.s:196    .text:0000000000000104 .L0 
     /tmp/ccFRDfWQ.s:197    .text:0000000000000104 .L0 
     /tmp/ccFRDfWQ.s:198    .text:0000000000000104 .L0 
     /tmp/ccFRDfWQ.s:200    .text:0000000000000108 .L0 
     /tmp/ccFRDfWQ.s:202    .text:000000000000010c .L0 
     /tmp/ccFRDfWQ.s:205    .text:0000000000000114 .L0 
     /tmp/ccFRDfWQ.s:206    .text:0000000000000114 .L0 
     /tmp/ccFRDfWQ.s:209    .text:0000000000000118 .L0 
     /tmp/ccFRDfWQ.s:210    .text:0000000000000118 .L0 
     /tmp/ccFRDfWQ.s:212    .text:000000000000011c .L0 
     /tmp/ccFRDfWQ.s:213    .text:000000000000011c .L0 
     /tmp/ccFRDfWQ.s:215    .text:0000000000000120 .L0 
     /tmp/ccFRDfWQ.s:217    .text:0000000000000124 .L0 
     /tmp/ccFRDfWQ.s:218    .text:0000000000000124 .L0 
     /tmp/ccFRDfWQ.s:221    .text:0000000000000128 .L0 
     /tmp/ccFRDfWQ.s:222    .text:0000000000000128 .L0 
     /tmp/ccFRDfWQ.s:224    .text:000000000000012c .L0 
     /tmp/ccFRDfWQ.s:226    .text:0000000000000130 .L0 
     /tmp/ccFRDfWQ.s:227    .text:0000000000000130 .L0 
     /tmp/ccFRDfWQ.s:230    .text:0000000000000134 .L0 
     /tmp/ccFRDfWQ.s:231    .text:0000000000000134 .L0 
     /tmp/ccFRDfWQ.s:233    .text:0000000000000138 .L0 
     /tmp/ccFRDfWQ.s:235    .text:000000000000013c .L0 
     /tmp/ccFRDfWQ.s:236    .text:000000000000013c .L0 
     /tmp/ccFRDfWQ.s:238    .text:0000000000000140 .L0 
     /tmp/ccFRDfWQ.s:242    .text:0000000000000144 .L0 
     /tmp/ccFRDfWQ.s:243    .text:0000000000000144 .L0 
     /tmp/ccFRDfWQ.s:245    .text:0000000000000148 .L0 
GAS LISTING /tmp/ccFRDfWQ.s 			page 16


     /tmp/ccFRDfWQ.s:246    .text:0000000000000148 .L0 
     /tmp/ccFRDfWQ.s:252    .text:000000000000014c .L0 
     /tmp/ccFRDfWQ.s:253    .text:0000000000000150 .L0 
     /tmp/ccFRDfWQ.s:254    .text:0000000000000150 .L0 
     /tmp/ccFRDfWQ.s:256    .text:0000000000000154 .L0 
     /tmp/ccFRDfWQ.s:257    .text:0000000000000154 .L0 
     /tmp/ccFRDfWQ.s:259    .text:0000000000000158 .L0 
     /tmp/ccFRDfWQ.s:262    .text:000000000000015c .L0 
     /tmp/ccFRDfWQ.s:266    .text:0000000000000160 .L0 
     /tmp/ccFRDfWQ.s:270    .text:0000000000000160 .L0 
     /tmp/ccFRDfWQ.s:271    .text:0000000000000160 .L0 
     /tmp/ccFRDfWQ.s:276    .text:000000000000016c .L0 
     /tmp/ccFRDfWQ.s:277    .text:000000000000016c .L0 
     /tmp/ccFRDfWQ.s:279    .text:0000000000000170 .L0 
     /tmp/ccFRDfWQ.s:281    .text:0000000000000174 .L0 
     /tmp/ccFRDfWQ.s:282    .text:0000000000000174 .L0 
     /tmp/ccFRDfWQ.s:284    .text:0000000000000178 .L0 
     /tmp/ccFRDfWQ.s:287    .text:000000000000017c .L0 
     /tmp/ccFRDfWQ.s:288    .text:000000000000017c .L0 
     /tmp/ccFRDfWQ.s:290    .text:0000000000000180 .L0 
     /tmp/ccFRDfWQ.s:292    .text:0000000000000184 .L0 
     /tmp/ccFRDfWQ.s:293    .text:0000000000000184 .L0 
     /tmp/ccFRDfWQ.s:295    .text:0000000000000188 .L0 
     /tmp/ccFRDfWQ.s:299    .text:0000000000000190 .L0 
     /tmp/ccFRDfWQ.s:300    .text:0000000000000190 .L0 
     /tmp/ccFRDfWQ.s:304    .text:000000000000019c .L0 
     /tmp/ccFRDfWQ.s:310    .text:000000000000019c _ZN15MemoryAllocator8allocateEm
     /tmp/ccFRDfWQ.s:313    .text:000000000000019c .L0 
     /tmp/ccFRDfWQ.s:315    .text:000000000000019c .L0 
     /tmp/ccFRDfWQ.s:316    .text:00000000000001a0 .L0 
     /tmp/ccFRDfWQ.s:320    .text:00000000000001ac .L0 
     /tmp/ccFRDfWQ.s:321    .text:00000000000001ac .L0 
     /tmp/ccFRDfWQ.s:322    .text:00000000000001ac .L0 
     /tmp/ccFRDfWQ.s:324    .text:00000000000001b0 .L0 
     /tmp/ccFRDfWQ.s:327    .text:00000000000001b4 .L0 
     /tmp/ccFRDfWQ.s:328    .text:00000000000001b4 .L0 
     /tmp/ccFRDfWQ.s:334    .text:00000000000001c8 .L0 
     /tmp/ccFRDfWQ.s:335    .text:00000000000001cc .L0 
     /tmp/ccFRDfWQ.s:337    .text:00000000000001d0 .L0 
     /tmp/ccFRDfWQ.s:338    .text:00000000000001d0 .L0 
     /tmp/ccFRDfWQ.s:340    .text:00000000000001d4 .L0 
     /tmp/ccFRDfWQ.s:343    .text:00000000000001d8 .L0 
     /tmp/ccFRDfWQ.s:345    .text:00000000000001dc .L0 
     /tmp/ccFRDfWQ.s:351    .text:00000000000001dc _ZN15MemoryAllocator10tryToMergeEPNS_7FreeMemE
     /tmp/ccFRDfWQ.s:354    .text:00000000000001dc .L0 
     /tmp/ccFRDfWQ.s:356    .text:00000000000001dc .L0 
     /tmp/ccFRDfWQ.s:357    .text:00000000000001e0 .L0 
     /tmp/ccFRDfWQ.s:359    .text:00000000000001e4 .L0 
     /tmp/ccFRDfWQ.s:361    .text:00000000000001e8 .L0 
     /tmp/ccFRDfWQ.s:363    .text:00000000000001e8 .L0 
     /tmp/ccFRDfWQ.s:365    .text:00000000000001ec .L0 
     /tmp/ccFRDfWQ.s:366    .text:00000000000001ec .L0 
     /tmp/ccFRDfWQ.s:368    .text:00000000000001f0 .L0 
     /tmp/ccFRDfWQ.s:371    .text:00000000000001f4 .L0 
     /tmp/ccFRDfWQ.s:372    .text:00000000000001f4 .L0 
     /tmp/ccFRDfWQ.s:374    .text:00000000000001f8 .L0 
     /tmp/ccFRDfWQ.s:378    .text:0000000000000204 .L0 
GAS LISTING /tmp/ccFRDfWQ.s 			page 17


     /tmp/ccFRDfWQ.s:379    .text:0000000000000204 .L0 
     /tmp/ccFRDfWQ.s:381    .text:0000000000000208 .L0 
     /tmp/ccFRDfWQ.s:383    .text:000000000000020c .L0 
     /tmp/ccFRDfWQ.s:385    .text:0000000000000210 .L0 
     /tmp/ccFRDfWQ.s:386    .text:0000000000000210 .L0 
     /tmp/ccFRDfWQ.s:389    .text:0000000000000214 .L0 
     /tmp/ccFRDfWQ.s:390    .text:0000000000000218 .L0 
     /tmp/ccFRDfWQ.s:391    .text:0000000000000218 .L0 
     /tmp/ccFRDfWQ.s:392    .text:0000000000000218 .L0 
     /tmp/ccFRDfWQ.s:394    .text:000000000000021c .L0 
     /tmp/ccFRDfWQ.s:397    .text:0000000000000220 .L0 
     /tmp/ccFRDfWQ.s:399    .text:0000000000000220 .L0 
     /tmp/ccFRDfWQ.s:401    .text:0000000000000224 .L0 
     /tmp/ccFRDfWQ.s:406    .text:0000000000000234 .L0 
     /tmp/ccFRDfWQ.s:408    .text:000000000000023c .L0 
     /tmp/ccFRDfWQ.s:414    .text:000000000000023c _ZN15MemoryAllocator4freeEPv
     /tmp/ccFRDfWQ.s:417    .text:000000000000023c .L0 
     /tmp/ccFRDfWQ.s:419    .text:000000000000023c .L0 
     /tmp/ccFRDfWQ.s:420    .text:0000000000000240 .L0 
     /tmp/ccFRDfWQ.s:424    .text:000000000000024c .L0 
     /tmp/ccFRDfWQ.s:425    .text:000000000000024c .L0 
     /tmp/ccFRDfWQ.s:426    .text:000000000000024c .L0 
     /tmp/ccFRDfWQ.s:428    .text:0000000000000250 .L0 
     /tmp/ccFRDfWQ.s:430    .text:0000000000000250 .L0 
     /tmp/ccFRDfWQ.s:431    .text:0000000000000250 .L0 
     /tmp/ccFRDfWQ.s:434    .text:0000000000000254 .L0 
     /tmp/ccFRDfWQ.s:435    .text:0000000000000254 .L0 
     /tmp/ccFRDfWQ.s:436    .text:0000000000000254 .L0 
     /tmp/ccFRDfWQ.s:437    .text:0000000000000254 .L0 
     /tmp/ccFRDfWQ.s:439    .text:000000000000025c .L0 
     /tmp/ccFRDfWQ.s:441    .text:0000000000000260 .L0 
     /tmp/ccFRDfWQ.s:443    .text:0000000000000264 .L0 
     /tmp/ccFRDfWQ.s:447    .text:0000000000000268 .L0 
     /tmp/ccFRDfWQ.s:449    .text:000000000000026c .L0 
     /tmp/ccFRDfWQ.s:452    .text:0000000000000270 .L0 
     /tmp/ccFRDfWQ.s:454    .text:0000000000000274 .L0 
     /tmp/ccFRDfWQ.s:459    .text:000000000000027c .L0 
     /tmp/ccFRDfWQ.s:466    .text:0000000000000288 .L0 
     /tmp/ccFRDfWQ.s:467    .text:0000000000000288 .L0 
     /tmp/ccFRDfWQ.s:468    .text:0000000000000288 .L0 
     /tmp/ccFRDfWQ.s:469    .text:0000000000000288 .L0 
     /tmp/ccFRDfWQ.s:472    .text:000000000000028c .L0 
     /tmp/ccFRDfWQ.s:474    .text:0000000000000290 .L0 
     /tmp/ccFRDfWQ.s:475    .text:0000000000000290 .L0 
     /tmp/ccFRDfWQ.s:477    .text:0000000000000294 .L0 
     /tmp/ccFRDfWQ.s:479    .text:0000000000000298 .L0 
     /tmp/ccFRDfWQ.s:482    .text:000000000000029c .L0 
     /tmp/ccFRDfWQ.s:483    .text:000000000000029c .L0 
     /tmp/ccFRDfWQ.s:485    .text:00000000000002a0 .L0 
     /tmp/ccFRDfWQ.s:487    .text:00000000000002a4 .L0 
     /tmp/ccFRDfWQ.s:488    .text:00000000000002a4 .L0 
     /tmp/ccFRDfWQ.s:491    .text:00000000000002a8 .L0 
     /tmp/ccFRDfWQ.s:492    .text:00000000000002a8 .L0 
     /tmp/ccFRDfWQ.s:495    .text:00000000000002b0 .L0 
     /tmp/ccFRDfWQ.s:496    .text:00000000000002b0 .L0 
     /tmp/ccFRDfWQ.s:500    .text:00000000000002bc .L0 
     /tmp/ccFRDfWQ.s:501    .text:00000000000002c0 .L0 
GAS LISTING /tmp/ccFRDfWQ.s 			page 18


     /tmp/ccFRDfWQ.s:502    .text:00000000000002c0 .L0 
     /tmp/ccFRDfWQ.s:504    .text:00000000000002c4 .L0 
     /tmp/ccFRDfWQ.s:505    .text:00000000000002c4 .L0 
     /tmp/ccFRDfWQ.s:507    .text:00000000000002c8 .L0 
     /tmp/ccFRDfWQ.s:510    .text:00000000000002cc .L0 
     /tmp/ccFRDfWQ.s:514    .text:00000000000002d0 .L0 
     /tmp/ccFRDfWQ.s:516    .text:00000000000002d0 .L0 
     /tmp/ccFRDfWQ.s:517    .text:00000000000002d0 .L0 
     /tmp/ccFRDfWQ.s:519    .text:00000000000002d4 .L0 
     /tmp/ccFRDfWQ.s:521    .text:00000000000002e0 .L0 
     /tmp/ccFRDfWQ.s:530    .bss:0000000000000000 _ZN15MemoryAllocator8fMemHeadE
     /tmp/ccFRDfWQ.s:527    .bss:0000000000000000 .LANCHOR0
     /tmp/ccFRDfWQ.s:536    .text:00000000000002e0 .L0 
     /tmp/ccFRDfWQ.s:22     .text:000000000000000c .L0 
     /tmp/ccFRDfWQ.s:24     .text:0000000000000018 .L0 
     /tmp/ccFRDfWQ.s:28     .text:0000000000000024 .L0 
     /tmp/ccFRDfWQ.s:69     .text:0000000000000060 .L0 
     /tmp/ccFRDfWQ.s:271    .text:0000000000000160 .L0 
     /tmp/ccFRDfWQ.s:300    .text:0000000000000190 .L0 
     /tmp/ccFRDfWQ.s:437    .text:0000000000000254 .L0 
     /tmp/ccFRDfWQ.s:519    .text:00000000000002d4 .L0 
     /tmp/ccFRDfWQ.s:91     .text:0000000000000088 .L4
     /tmp/ccFRDfWQ.s:102    .text:0000000000000098 .L3
     /tmp/ccFRDfWQ.s:71     .text:0000000000000068 .L6
     /tmp/ccFRDfWQ.s:112    .text:00000000000000a4 .L8
     /tmp/ccFRDfWQ.s:153    .text:00000000000000d0 .L9
     /tmp/ccFRDfWQ.s:248    .text:000000000000014c .L12
     /tmp/ccFRDfWQ.s:274    .text:000000000000016c .L14
     /tmp/ccFRDfWQ.s:265    .text:0000000000000160 .L15
     /tmp/ccFRDfWQ.s:228    .text:0000000000000134 .L17
     /tmp/ccFRDfWQ.s:219    .text:0000000000000128 .L16
     /tmp/ccFRDfWQ.s:297    .text:0000000000000190 .L19
     /tmp/ccFRDfWQ.s:240    .text:0000000000000144 .L18
     /tmp/ccFRDfWQ.s:285    .text:000000000000017c .L20
     /tmp/ccFRDfWQ.s:387    .text:0000000000000214 .L25
     /tmp/ccFRDfWQ.s:396    .text:0000000000000220 .L29
     /tmp/ccFRDfWQ.s:369    .text:00000000000001f4 .L27
     /tmp/ccFRDfWQ.s:457    .text:000000000000027c .L36
     /tmp/ccFRDfWQ.s:461    .text:0000000000000284 .L37
     /tmp/ccFRDfWQ.s:464    .text:0000000000000288 .L31
     /tmp/ccFRDfWQ.s:445    .text:0000000000000268 .L32
     /tmp/ccFRDfWQ.s:513    .text:00000000000002d0 .L33
     /tmp/ccFRDfWQ.s:489    .text:00000000000002a8 .L35
     /tmp/ccFRDfWQ.s:480    .text:000000000000029c .L34
     /tmp/ccFRDfWQ.s:1029   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccFRDfWQ.s:1925   .debug_str:0000000000000182 .LASF35
     /tmp/ccFRDfWQ.s:1965   .debug_str:0000000000000397 .LASF36
     /tmp/ccFRDfWQ.s:1963   .debug_str:0000000000000374 .LASF37
     /tmp/ccFRDfWQ.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccFRDfWQ.s:533    .text:00000000000002e0 .Letext0
     /tmp/ccFRDfWQ.s:1875   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccFRDfWQ.s:1933   .debug_str:000000000000028c .LASF0
     /tmp/ccFRDfWQ.s:1917   .debug_str:000000000000014e .LASF1
     /tmp/ccFRDfWQ.s:1909   .debug_str:000000000000011e .LASF2
     /tmp/ccFRDfWQ.s:1893   .debug_str:0000000000000089 .LASF4
     /tmp/ccFRDfWQ.s:1915   .debug_str:000000000000013c .LASF3
     /tmp/ccFRDfWQ.s:1881   .debug_str:0000000000000023 .LASF5
GAS LISTING /tmp/ccFRDfWQ.s 			page 19


     /tmp/ccFRDfWQ.s:1877   .debug_str:0000000000000000 .LASF6
     /tmp/ccFRDfWQ.s:1905   .debug_str:00000000000000fc .LASF7
     /tmp/ccFRDfWQ.s:1937   .debug_str:00000000000002b8 .LASF8
     /tmp/ccFRDfWQ.s:1891   .debug_str:000000000000007b .LASF9
     /tmp/ccFRDfWQ.s:1971   .debug_str:00000000000003ba .LASF10
     /tmp/ccFRDfWQ.s:1907   .debug_str:000000000000010f .LASF11
     /tmp/ccFRDfWQ.s:1961   .debug_str:0000000000000364 .LASF12
     /tmp/ccFRDfWQ.s:1941   .debug_str:00000000000002de .LASF13
     /tmp/ccFRDfWQ.s:1921   .debug_str:000000000000016b .LASF14
     /tmp/ccFRDfWQ.s:1901   .debug_str:00000000000000e1 .LASF15
     /tmp/ccFRDfWQ.s:1939   .debug_str:00000000000002c8 .LASF16
     /tmp/ccFRDfWQ.s:1879   .debug_str:0000000000000013 .LASF38
     /tmp/ccFRDfWQ.s:1911   .debug_str:000000000000012c .LASF39
     /tmp/ccFRDfWQ.s:1967   .debug_str:00000000000003b0 .LASF17
     /tmp/ccFRDfWQ.s:1969   .debug_str:00000000000003b5 .LASF18
     /tmp/ccFRDfWQ.s:1883   .debug_str:000000000000002a .LASF19
     /tmp/ccFRDfWQ.s:1931   .debug_str:0000000000000283 .LASF40
     /tmp/ccFRDfWQ.s:1889   .debug_str:000000000000005b .LASF41
     /tmp/ccFRDfWQ.s:1943   .debug_str:00000000000002ee .LASF20
     /tmp/ccFRDfWQ.s:1899   .debug_str:00000000000000c4 .LASF22
     /tmp/ccFRDfWQ.s:1947   .debug_str:0000000000000312 .LASF42
     /tmp/ccFRDfWQ.s:1935   .debug_str:0000000000000299 .LASF43
     /tmp/ccFRDfWQ.s:1959   .debug_str:000000000000035b .LASF44
     /tmp/ccFRDfWQ.s:1951   .debug_str:000000000000033a .LASF21
     /tmp/ccFRDfWQ.s:1887   .debug_str:000000000000003b .LASF23
     /tmp/ccFRDfWQ.s:1885   .debug_str:000000000000002f .LASF24
     /tmp/ccFRDfWQ.s:1927   .debug_str:0000000000000246 .LASF25
     /tmp/ccFRDfWQ.s:1957   .debug_str:0000000000000352 .LASF26
     /tmp/ccFRDfWQ.s:1949   .debug_str:000000000000031a .LASF27
     /tmp/ccFRDfWQ.s:1923   .debug_str:0000000000000177 .LASF45
     /tmp/ccFRDfWQ.s:1895   .debug_str:0000000000000090 .LASF46
     /tmp/ccFRDfWQ.s:1945   .debug_str:00000000000002f3 .LASF47
     /tmp/ccFRDfWQ.s:352    .text:00000000000001dc .LFB6
     /tmp/ccFRDfWQ.s:409    .text:000000000000023c .LFE6
     /tmp/ccFRDfWQ.s:1953   .debug_str:0000000000000343 .LASF28
     /tmp/ccFRDfWQ.s:125    .text:00000000000000ac .LFB5
     /tmp/ccFRDfWQ.s:162    .text:00000000000000dc .LFE5
     /tmp/ccFRDfWQ.s:1609   .debug_loc:0000000000000000 .LLST2
     /tmp/ccFRDfWQ.s:1955   .debug_str:0000000000000348 .LASF29
     /tmp/ccFRDfWQ.s:1919   .debug_str:0000000000000161 .LASF30
     /tmp/ccFRDfWQ.s:168    .text:00000000000000dc .LFB4
     /tmp/ccFRDfWQ.s:305    .text:000000000000019c .LFE4
     /tmp/ccFRDfWQ.s:1629   .debug_loc:000000000000004e .LLST3
     /tmp/ccFRDfWQ.s:1651   .debug_loc:00000000000000ad .LLST4
     /tmp/ccFRDfWQ.s:1665   .debug_loc:00000000000000e6 .LLST5
     /tmp/ccFRDfWQ.s:1867   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccFRDfWQ.s:1678   .debug_loc:000000000000011e .LLST6
     /tmp/ccFRDfWQ.s:1913   .debug_str:0000000000000134 .LASF31
     /tmp/ccFRDfWQ.s:1689   .debug_loc:0000000000000154 .LLST7
     /tmp/ccFRDfWQ.s:194    .text:0000000000000104 .LVL14
     /tmp/ccFRDfWQ.s:56     .text:0000000000000050 .LFB3
     /tmp/ccFRDfWQ.s:119    .text:00000000000000ac .LFE3
     /tmp/ccFRDfWQ.s:1710   .debug_loc:00000000000001b2 .LLST0
     /tmp/ccFRDfWQ.s:1897   .debug_str:00000000000000bf .LASF32
     /tmp/ccFRDfWQ.s:1740   .debug_loc:0000000000000228 .LLST1
     /tmp/ccFRDfWQ.s:10     .text:0000000000000000 .LFB2
     /tmp/ccFRDfWQ.s:50     .text:0000000000000050 .LFE2
GAS LISTING /tmp/ccFRDfWQ.s 			page 20


     /tmp/ccFRDfWQ.s:415    .text:000000000000023c .LFB1
     /tmp/ccFRDfWQ.s:522    .text:00000000000002e0 .LFE1
     /tmp/ccFRDfWQ.s:1903   .debug_str:00000000000000f7 .LASF33
     /tmp/ccFRDfWQ.s:1755   .debug_loc:0000000000000271 .LLST9
     /tmp/ccFRDfWQ.s:1929   .debug_str:0000000000000277 .LASF34
     /tmp/ccFRDfWQ.s:1779   .debug_loc:00000000000002d2 .LLST10
     /tmp/ccFRDfWQ.s:1787   .debug_loc:00000000000002f6 .LLST11
     /tmp/ccFRDfWQ.s:1816   .debug_loc:000000000000037a .LLST12
     /tmp/ccFRDfWQ.s:493    .text:00000000000002b0 .LVL33
     /tmp/ccFRDfWQ.s:498    .text:00000000000002bc .LVL34
     /tmp/ccFRDfWQ.s:311    .text:000000000000019c .LFB0
     /tmp/ccFRDfWQ.s:346    .text:00000000000001dc .LFE0
     /tmp/ccFRDfWQ.s:1836   .debug_loc:00000000000003c8 .LLST8
     /tmp/ccFRDfWQ.s:329    .text:00000000000001bc .LVL22
     /tmp/ccFRDfWQ.s:332    .text:00000000000001c8 .LVL23
     /tmp/ccFRDfWQ.s:128    .text:00000000000000ac .LVL8
     /tmp/ccFRDfWQ.s:138    .text:00000000000000bc .LVL9
     /tmp/ccFRDfWQ.s:151    .text:00000000000000d0 .LVL10
     /tmp/ccFRDfWQ.s:171    .text:00000000000000dc .LVL11
     /tmp/ccFRDfWQ.s:189    .text:00000000000000fc .LVL13
     /tmp/ccFRDfWQ.s:260    .text:0000000000000158 .LVL18
     /tmp/ccFRDfWQ.s:264    .text:0000000000000160 .LVL19
     /tmp/ccFRDfWQ.s:184    .text:00000000000000f4 .LVL12
     /tmp/ccFRDfWQ.s:247    .text:000000000000014c .LVL17
     /tmp/ccFRDfWQ.s:207    .text:0000000000000118 .LVL15
     /tmp/ccFRDfWQ.s:239    .text:0000000000000144 .LVL16
     /tmp/ccFRDfWQ.s:273    .text:000000000000016c .LVL20
     /tmp/ccFRDfWQ.s:59     .text:0000000000000050 .LVL0
     /tmp/ccFRDfWQ.s:70     .text:0000000000000068 .LVL1
     /tmp/ccFRDfWQ.s:96     .text:0000000000000090 .LVL4
     /tmp/ccFRDfWQ.s:101    .text:0000000000000098 .LVL5
     /tmp/ccFRDfWQ.s:111    .text:00000000000000a4 .LVL6
     /tmp/ccFRDfWQ.s:88     .text:0000000000000084 .LVL2
     /tmp/ccFRDfWQ.s:90     .text:0000000000000088 .LVL3
     /tmp/ccFRDfWQ.s:116    .text:00000000000000a8 .LVL7
     /tmp/ccFRDfWQ.s:418    .text:000000000000023c .LVL26
     /tmp/ccFRDfWQ.s:432    .text:0000000000000254 .LVL27
     /tmp/ccFRDfWQ.s:512    .text:00000000000002d0 .LVL36
     /tmp/ccFRDfWQ.s:470    .text:000000000000028c .LVL32
     /tmp/ccFRDfWQ.s:444    .text:0000000000000268 .LVL28
     /tmp/ccFRDfWQ.s:450    .text:0000000000000270 .LVL29
     /tmp/ccFRDfWQ.s:456    .text:000000000000027c .LVL30
     /tmp/ccFRDfWQ.s:463    .text:0000000000000288 .LVL31
     /tmp/ccFRDfWQ.s:508    .text:00000000000002c8 .LVL35
     /tmp/ccFRDfWQ.s:314    .text:000000000000019c .LVL21
     /tmp/ccFRDfWQ.s:341    .text:00000000000001d4 .LVL24
     /tmp/ccFRDfWQ.s:537    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccFRDfWQ.s:190    .text:00000000000000fc .LBB3
     /tmp/ccFRDfWQ.s:249    .text:000000000000014c .LBE3
     /tmp/ccFRDfWQ.s:268    .text:0000000000000160 .LBB4
     /tmp/ccFRDfWQ.s:302    .text:000000000000019c .LBE4

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
