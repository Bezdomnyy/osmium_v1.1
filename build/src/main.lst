GAS LISTING /tmp/ccanT0fi.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z10backgroundv
   9              	_Z10backgroundv:
  10              	.LFB73:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../lib/hw.h"
   2:src/main.cpp  **** #include "../h/kernel.hpp"
   3:src/main.cpp  **** #include "../h/uart_consumer.hpp"
   4:src/main.cpp  **** 
   5:src/main.cpp  **** void userMain();
   6:src/main.cpp  **** 
   7:src/main.cpp  **** void background() {
  12              		.loc 1 7 19
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  22              	.L3:
   8:src/main.cpp  ****     while(!Kernel::isFinished()) {
  23              		.loc 1 8 5
  24              		.loc 1 8 11
  25              		.loc 1 8 30 is_stmt 0
  26 0010 97000000 		call	_ZN6Kernel10isFinishedEv@plt
  26      E7800000 
  27              	.LVL0:
  28              		.loc 1 8 11
  29 0018 63180500 		bnez	a0,.L1
   9:src/main.cpp  ****         thread_dispatch();
  30              		.loc 1 9 9 is_stmt 1
  31              		.loc 1 9 24 is_stmt 0
  32 001c 97000000 		call	thread_dispatch@plt
  32      E7800000 
  33              	.LVL1:
   8:src/main.cpp  ****     while(!Kernel::isFinished()) {
  34              		.loc 1 8 5
  35 0024 6FF0DFFE 		j	.L3
  36              	.L1:
  10:src/main.cpp  ****     }
  11:src/main.cpp  **** }
  37              		.loc 1 11 1
  38 0028 83308100 		ld	ra,8(sp)
  39              		.cfi_restore 1
  40 002c 03340100 		ld	s0,0(sp)
  41              		.cfi_restore 8
  42              		.cfi_def_cfa 2, 16
  43 0030 13010101 		addi	sp,sp,16
  44              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/ccanT0fi.s 			page 2


  45 0034 67800000 		jr	ra
  46              		.cfi_endproc
  47              	.LFE73:
  49              		.align	2
  50              		.globl	main
  52              	main:
  53              	.LFB74:
  12:src/main.cpp  **** 
  13:src/main.cpp  **** void main() {
  54              		.loc 1 13 13 is_stmt 1
  55              		.cfi_startproc
  56              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  57              		.cfi_lsda 0x1b,.LLSDA74
  58 0038 130101FE 		addi	sp,sp,-32
  59              		.cfi_def_cfa_offset 32
  60 003c 233C1100 		sd	ra,24(sp)
  61 0040 23388100 		sd	s0,16(sp)
  62 0044 23349100 		sd	s1,8(sp)
  63 0048 23302101 		sd	s2,0(sp)
  64              		.cfi_offset 1, -8
  65              		.cfi_offset 8, -16
  66              		.cfi_offset 9, -24
  67              		.cfi_offset 18, -32
  68 004c 13040102 		addi	s0,sp,32
  69              		.cfi_def_cfa 8, 0
  14:src/main.cpp  ****     Kernel::initKernel();
  70              		.loc 1 14 5
  71              	.LEHB0:
  72              		.loc 1 14 23 is_stmt 0
  73 0050 97000000 		call	_ZN6Kernel10initKernelEv@plt
  73      E7800000 
  74              	.LVL2:
  15:src/main.cpp  **** 
  16:src/main.cpp  ****     TCB* mainTCB = TCB::createTCB(nullptr, nullptr);
  75              		.loc 1 16 5 is_stmt 1
  76              		.loc 1 16 34 is_stmt 0
  77 0058 93050000 		li	a1,0
  78 005c 13050000 		li	a0,0
  79 0060 97000000 		call	_ZN3TCB9createTCBEPFvPvES0_@plt
  79      E7800000 
  80              	.LVL3:
  81 0068 13090500 		mv	s2,a0
  82              	.LVL4:
  17:src/main.cpp  ****     TCB* userTCB = TCB::createTCB((void(*)(void*))&userMain, nullptr);
  83              		.loc 1 17 5 is_stmt 1
  84              		.loc 1 17 34 is_stmt 0
  85 006c 93050000 		li	a1,0
  86 0070 17050000 		la	a0,_Z8userMainv
  86      03350500 
  87              	.LVL5:
  88 0078 97000000 		call	_ZN3TCB9createTCBEPFvPvES0_@plt
  88      E7800000 
  89              	.LVL6:
  90 0080 93040500 		mv	s1,a0
  91              	.LVL7:
  18:src/main.cpp  ****     TCB* backgroundTCB = TCB::createTCB((void(*)(void*))&background, nullptr);
  92              		.loc 1 18 5 is_stmt 1
GAS LISTING /tmp/ccanT0fi.s 			page 3


  93              		.loc 1 18 40 is_stmt 0
  94 0084 93050000 		li	a1,0
  95 0088 17050000 		lla	a0,_Z10backgroundv
  95      13050500 
  96 0090 97000000 		call	_ZN3TCB9createTCBEPFvPvES0_@plt
  96      E7800000 
  97              	.LVL8:
  19:src/main.cpp  ****     TCB::running = mainTCB;
  98              		.loc 1 19 5 is_stmt 1
  99              		.loc 1 19 18 is_stmt 0
 100 0098 97070000 		la	a5,_ZN3TCB7runningE
 100      83B70700 
 101 00a0 23B02701 		sd	s2,0(a5)
  20:src/main.cpp  **** 
  21:src/main.cpp  ****     TCB* uartTX_TCB = TCB::createTCB((void(*)(void*))&uart_consumer, nullptr);
 102              		.loc 1 21 5 is_stmt 1
 103              		.loc 1 21 37 is_stmt 0
 104 00a4 93050000 		li	a1,0
 105 00a8 17050000 		la	a0,_Z13uart_consumerv
 105      03350500 
 106 00b0 97000000 		call	_ZN3TCB9createTCBEPFvPvES0_@plt
 106      E7800000 
 107              	.LVL9:
  22:src/main.cpp  **** 
  23:src/main.cpp  ****     uartTX_TCB->isFinished();
 108              		.loc 1 23 5 is_stmt 1
 109              		.file 2 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by os on 9/9/22.
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OSMIUM_TCB_HPP
   6:src/../h/tcb.hpp **** #define OSMIUM_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** //#include "../h/scheduler.hpp"
  10:src/../h/tcb.hpp **** #include "riscv.hpp"
  11:src/../h/tcb.hpp **** #include "memory_allocator.hpp"
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp **** class Scheduler;
  14:src/../h/tcb.hpp **** 
  15:src/../h/tcb.hpp **** 
  16:src/../h/tcb.hpp **** class TCB {
  17:src/../h/tcb.hpp **** public:
  18:src/../h/tcb.hpp ****     using Body = void (*)(void*);
  19:src/../h/tcb.hpp **** 
  20:src/../h/tcb.hpp ****     static TCB* createTCB(Body body, void* args);
  21:src/../h/tcb.hpp **** 
  22:src/../h/tcb.hpp ****     static TCB* createDeactivatedTCB(Body body, void* args);
  23:src/../h/tcb.hpp **** 
  24:src/../h/tcb.hpp ****     static TCB* createSupervisorTCB(Body body, void* args);
  25:src/../h/tcb.hpp **** 
  26:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
 110              		.loc 2 26 31
  24:src/main.cpp  ****     backgroundTCB->isFinished();
 111              		.loc 1 24 5
 112              		.loc 2 26 31
GAS LISTING /tmp/ccanT0fi.s 			page 4


  25:src/main.cpp  ****     RiscV::setSstatus(RiscV::SIE);
 113              		.loc 1 25 5
 114              	.LBB15:
 115              	.LBB16:
 116              		.file 3 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 9/6/22.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OSMIUM_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OSMIUM_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** 
   9:src/../h/riscv.hpp **** #include "../lib/hw.h"
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp **** class RiscV {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp ****     // pop spp and spie sstatus bits
  14:src/../h/riscv.hpp ****     static void popSppSpie();
  15:src/../h/riscv.hpp **** 
  16:src/../h/riscv.hpp ****     //push x3...x31 registers on stack
  17:src/../h/riscv.hpp ****     static void pushRegisters();
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     //pop x3...x31 registers from stack
  20:src/../h/riscv.hpp ****     static void popRegisters();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     //read from scause register
  23:src/../h/riscv.hpp ****     static uint64 readScause();
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     //write to scause register
  26:src/../h/riscv.hpp ****     static void writeScause(uint64 scause);
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     //read from sepc register
  29:src/../h/riscv.hpp ****     static uint64 readSepc();
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     //write to sepc register
  32:src/../h/riscv.hpp ****     static void writeSepc(uint64 sepc);
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     //read from stvec register
  35:src/../h/riscv.hpp ****     static uint64 readStvec();
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     //write to stvec register
  38:src/../h/riscv.hpp ****     static void writeStvec(uint64 stvec);
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     enum SSTATUS
  41:src/../h/riscv.hpp ****     {
  42:src/../h/riscv.hpp ****         SIE = (1 << 1), //supervisor interrupt enable
  43:src/../h/riscv.hpp ****         SPIE = (1 << 5),//supervisor previous interrupt enable
  44:src/../h/riscv.hpp ****         SPP = (1 << 8), //supervisor previous privilege
  45:src/../h/riscv.hpp ****     };
  46:src/../h/riscv.hpp **** 
  47:src/../h/riscv.hpp ****     //set bit-mask bits in the sstatus register
  48:src/../h/riscv.hpp ****     static void setSstatus(uint64 mask);
  49:src/../h/riscv.hpp **** 
  50:src/../h/riscv.hpp ****     //clear bit-mask bits in the sstatus register
  51:src/../h/riscv.hpp ****     static void clearSstatus(uint64 mask);
  52:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccanT0fi.s 			page 5


  53:src/../h/riscv.hpp ****     //read from sstatus register
  54:src/../h/riscv.hpp ****     static uint64 readSstatus();
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp ****     //write to sstatus register
  57:src/../h/riscv.hpp ****     static void writeSstatus(uint64 sstatus);
  58:src/../h/riscv.hpp **** 
  59:src/../h/riscv.hpp ****     enum SIP
  60:src/../h/riscv.hpp ****     {
  61:src/../h/riscv.hpp ****         SSIP = (1 << 1), //supervisor software interrupt pending
  62:src/../h/riscv.hpp ****         STIP = (1 << 5), //supervisor timer interrupt pending
  63:src/../h/riscv.hpp ****                          //(timer is configured to throw a software interrupt, so this is not used)
  64:src/../h/riscv.hpp ****         SEIP = (1 << 9), //supervisor external interrupt pending
  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     //set bit-mask bits in the sip register
  68:src/../h/riscv.hpp ****     static void setSip(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     //clear bit-mask bits in the sip register
  71:src/../h/riscv.hpp ****     static void clearSip(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     //read from sip register
  74:src/../h/riscv.hpp ****     static uint64 readSip();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     //write to sip register
  77:src/../h/riscv.hpp ****     static void writeSip(uint64 Sip);
  78:src/../h/riscv.hpp **** private:
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp **** };
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp **** inline uint64 RiscV::readScause() {
  83:src/../h/riscv.hpp ****     uint64 volatile scause;
  84:src/../h/riscv.hpp ****     asm volatile("csrr %[scause], scause": [scause] "=r" (scause));
  85:src/../h/riscv.hpp ****     return scause;
  86:src/../h/riscv.hpp **** }
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp **** inline void RiscV::writeScause(uint64 scause) {
  89:src/../h/riscv.hpp ****     asm volatile("csrw scause, %[scause]":: [scause] "r" (scause));
  90:src/../h/riscv.hpp **** }
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp **** inline uint64 RiscV::readSepc() {
  93:src/../h/riscv.hpp ****     uint64 volatile sepc;
  94:src/../h/riscv.hpp ****     asm volatile("csrr %[sepc], sepc": [sepc] "=r" (sepc));
  95:src/../h/riscv.hpp ****     return sepc;
  96:src/../h/riscv.hpp **** }
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** inline void RiscV::writeSepc(uint64 sepc) {
  99:src/../h/riscv.hpp ****     asm volatile("csrw sepc, %[sepc]":: [sepc] "r" (sepc));
 100:src/../h/riscv.hpp **** }
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp **** inline uint64 RiscV::readStvec() {
 103:src/../h/riscv.hpp ****     uint64 volatile stvec;
 104:src/../h/riscv.hpp ****     asm volatile("csrr %[stvec], stvec": [stvec] "=r" (stvec));
 105:src/../h/riscv.hpp ****     return stvec;
 106:src/../h/riscv.hpp **** }
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp **** inline void RiscV::writeStvec(uint64 stvec) {
 109:src/../h/riscv.hpp ****     asm volatile("csrw stvec, %[stvec]":: [stvec] "r" (stvec));
GAS LISTING /tmp/ccanT0fi.s 			page 6


 110:src/../h/riscv.hpp **** }
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp **** inline void RiscV::setSstatus(uint64 mask) {
 113:src/../h/riscv.hpp ****     asm volatile("csrs sstatus, %[mask]":: [mask] "r" (mask));
 117              		.loc 3 113 5
 118              		.loc 3 113 62 is_stmt 0
 119 00b8 93072000 		li	a5,2
 120              	#APP
 121              	# 113 "src/../h/riscv.hpp" 1
 114              	}
 122              		csrs sstatus, a5
 123              	# 0 "" 2
 124              	.LVL10:
 125              	#NO_APP
 126              	.L7:
 127              	.LBE16:
 128              	.LBE15:
  26:src/main.cpp  ****     while(!userTCB->isFinished()) {
 129              		.loc 1 26 5 is_stmt 1
 130              		.loc 1 26 11
 131              	.LBB17:
 132              	.LBB18:
 133              		.loc 2 26 31
 134              		.loc 2 26 38 is_stmt 0
 135 00c0 83C78401 		lbu	a5,24(s1)
 136              	.LVL11:
 137              	.LBE18:
 138              	.LBE17:
 139              		.loc 1 26 11
 140 00c4 63980700 		bnez	a5,.L6
  27:src/main.cpp  ****         TCB::dispatch();
 141              		.loc 1 27 9 is_stmt 1
 142              		.loc 1 27 22 is_stmt 0
 143 00c8 97000000 		call	_ZN3TCB8dispatchEv@plt
 143      E7800000 
 144              	.LVL12:
  26:src/main.cpp  ****     while(!userTCB->isFinished()) {
 145              		.loc 1 26 5
 146 00d0 6FF01FFF 		j	.L7
 147              	.L6:
  28:src/main.cpp  ****     }
  29:src/main.cpp  **** 
  30:src/main.cpp  ****     Kernel::finishKernel();
 148              		.loc 1 30 5 is_stmt 1
 149              		.loc 1 30 25 is_stmt 0
 150 00d4 97000000 		call	_ZN6Kernel12finishKernelEv@plt
 150      E7800000 
 151              	.LVL13:
 152              	.LEHE0:
  31:src/main.cpp  ****     delete userTCB;
 153              		.loc 1 31 5 is_stmt 1
 154              		.loc 1 31 19 is_stmt 0
 155 00dc 638E0400 		beqz	s1,.L5
 156              	.LVL14:
 157              	.LBB19:
 158              	.LBB20:
  27:src/../h/tcb.hpp **** 
GAS LISTING /tmp/ccanT0fi.s 			page 7


  28:src/../h/tcb.hpp ****     void setFinished(bool val) { finished = val; }
  29:src/../h/tcb.hpp **** 
  30:src/../h/tcb.hpp ****     bool isBlocked() const { return blocked; }
  31:src/../h/tcb.hpp **** 
  32:src/../h/tcb.hpp ****     void setBlocked(bool val) { blocked = val; }
  33:src/../h/tcb.hpp **** 
  34:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  35:src/../h/tcb.hpp **** 
  36:src/../h/tcb.hpp ****     static TCB* running;
  37:src/../h/tcb.hpp **** 
  38:src/../h/tcb.hpp ****     //static void yield();
  39:src/../h/tcb.hpp **** 
  40:src/../h/tcb.hpp ****     static void dispatch();
  41:src/../h/tcb.hpp **** 
  42:src/../h/tcb.hpp ****     static void incTimeSliceCounter() { timeSliceCounter++; }
  43:src/../h/tcb.hpp ****     static uint64 getTimeSliceCounter() { return timeSliceCounter; }
  44:src/../h/tcb.hpp ****     static void resetTimeSliceCounter() { timeSliceCounter = 0; }
  45:src/../h/tcb.hpp **** 
  46:src/../h/tcb.hpp ****     ~TCB() { MemoryAllocator::free(stack); }
 159              		.loc 2 46 14 is_stmt 1
 160              		.loc 2 46 35 is_stmt 0
 161 00e0 03B50401 		ld	a0,16(s1)
 162 00e4 97000000 		call	_ZN15MemoryAllocator4freeEPv@plt
 162      E7800000 
 163              	.LVL15:
 164              	.LBE20:
 165              	.LBE19:
 166              	.LBB21:
 167              	.LBB22:
  47:src/../h/tcb.hpp **** 
  48:src/../h/tcb.hpp ****     void* operator new(size_t size) {
  49:src/../h/tcb.hpp ****         return MemoryAllocator::allocate(size);
  50:src/../h/tcb.hpp ****     }
  51:src/../h/tcb.hpp **** 
  52:src/../h/tcb.hpp ****     void* operator new[](size_t size) {
  53:src/../h/tcb.hpp ****         return MemoryAllocator::allocate(size);
  54:src/../h/tcb.hpp ****     }
  55:src/../h/tcb.hpp **** 
  56:src/../h/tcb.hpp ****     void operator delete(void* ptr) {
  57:src/../h/tcb.hpp ****         MemoryAllocator::free(ptr);
 168              		.loc 2 57 9 is_stmt 1
 169              		.loc 2 57 30 is_stmt 0
 170 00ec 13850400 		mv	a0,s1
 171              	.LEHB1:
 172 00f0 97000000 		call	_ZN15MemoryAllocator4freeEPv@plt
 172      E7800000 
 173              	.LVL16:
 174              	.LEHE1:
 175              	.L5:
 176              	.LBE22:
 177              	.LBE21:
  32:src/main.cpp  **** }...
 178              		.loc 1 32 1
 179 00f8 83308101 		ld	ra,24(sp)
 180              		.cfi_restore 1
 181 00fc 03340101 		ld	s0,16(sp)
 182              		.cfi_restore 8
GAS LISTING /tmp/ccanT0fi.s 			page 8


 183              		.cfi_def_cfa 2, 32
 184 0100 83348100 		ld	s1,8(sp)
 185              		.cfi_restore 9
 186              	.LVL17:
 187 0104 03390100 		ld	s2,0(sp)
 188              		.cfi_restore 18
 189              	.LVL18:
 190 0108 13010102 		addi	sp,sp,32
 191              		.cfi_def_cfa_offset 0
 192 010c 67800000 		jr	ra
 193              		.cfi_endproc
 194              	.LFE74:
 195              		.globl	__gxx_personality_v0
 196              		.section	.gcc_except_table,"a",@progbits
 197              	.LLSDA74:
 198 0000 FF       		.byte	0xff
 199 0001 FF       		.byte	0xff
 200 0002 03       		.byte	0x3
 201 0003 1A       		.byte	0x1a
 202 0004 00000000 		.4byte	.LEHB0-.LFB74
 203 0008 00000000 		.4byte	.LEHE0-.LEHB0
 204 000c 00000000 		.4byte	0
 205 0010 00       		.byte	0
 206 0011 00000000 		.4byte	.LEHB1-.LFB74
 207 0015 00000000 		.4byte	.LEHE1-.LEHB1
 208 0019 00000000 		.4byte	0
 209 001d 00       		.byte	0
 210              		.text
 212              	.Letext0:
 213              		.file 4 "src/../lib/hw.h"
 214              		.file 5 "src/../h/memory_allocator.hpp"
 215              		.file 6 "src/../h/kernel.hpp"
 216              		.file 7 "src/../h/syscall_c.h"
 2891              		.align	3
 2894              	DW.ref.__gxx_personality_v0:
 2895 0000 00000000 		.dword	__gxx_personality_v0
 2895      00000000 
 2896              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 2897              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccanT0fi.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccanT0fi.s:9      .text:0000000000000000 _Z10backgroundv
     /tmp/ccanT0fi.s:13     .text:0000000000000000 .L0 
     /tmp/ccanT0fi.s:14     .text:0000000000000000 .L0 
     /tmp/ccanT0fi.s:15     .text:0000000000000004 .L0 
     /tmp/ccanT0fi.s:18     .text:000000000000000c .L0 
     /tmp/ccanT0fi.s:19     .text:000000000000000c .L0 
     /tmp/ccanT0fi.s:21     .text:0000000000000010 .L0 
     /tmp/ccanT0fi.s:24     .text:0000000000000010 .L0 
     /tmp/ccanT0fi.s:25     .text:0000000000000010 .L0 
     /tmp/ccanT0fi.s:26     .text:0000000000000010 .L0 
     /tmp/ccanT0fi.s:29     .text:0000000000000018 .L0 
     /tmp/ccanT0fi.s:31     .text:000000000000001c .L0 
     /tmp/ccanT0fi.s:32     .text:000000000000001c .L0 
     /tmp/ccanT0fi.s:35     .text:0000000000000024 .L0 
     /tmp/ccanT0fi.s:38     .text:0000000000000028 .L0 
     /tmp/ccanT0fi.s:39     .text:000000000000002c .L0 
     /tmp/ccanT0fi.s:41     .text:0000000000000030 .L0 
     /tmp/ccanT0fi.s:42     .text:0000000000000030 .L0 
     /tmp/ccanT0fi.s:44     .text:0000000000000034 .L0 
     /tmp/ccanT0fi.s:46     .text:0000000000000038 .L0 
     /tmp/ccanT0fi.s:52     .text:0000000000000038 main
     /tmp/ccanT0fi.s:55     .text:0000000000000038 .L0 
     /tmp/ccanT0fi.s:2894   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccanT0fi.s:58     .text:0000000000000038 .L0 
     /tmp/ccanT0fi.s:59     .text:000000000000003c .L0 
     /tmp/ccanT0fi.s:64     .text:000000000000004c .L0 
     /tmp/ccanT0fi.s:65     .text:000000000000004c .L0 
     /tmp/ccanT0fi.s:66     .text:000000000000004c .L0 
     /tmp/ccanT0fi.s:67     .text:000000000000004c .L0 
     /tmp/ccanT0fi.s:69     .text:0000000000000050 .L0 
     /tmp/ccanT0fi.s:72     .text:0000000000000050 .L0 
     /tmp/ccanT0fi.s:73     .text:0000000000000050 .L0 
     /tmp/ccanT0fi.s:76     .text:0000000000000058 .L0 
     /tmp/ccanT0fi.s:77     .text:0000000000000058 .L0 
     /tmp/ccanT0fi.s:84     .text:000000000000006c .L0 
     /tmp/ccanT0fi.s:85     .text:000000000000006c .L0 
     /tmp/ccanT0fi.s:93     .text:0000000000000084 .L0 
     /tmp/ccanT0fi.s:94     .text:0000000000000084 .L0 
     /tmp/ccanT0fi.s:99     .text:0000000000000098 .L0 
     /tmp/ccanT0fi.s:100    .text:0000000000000098 .L0 
     /tmp/ccanT0fi.s:103    .text:00000000000000a4 .L0 
     /tmp/ccanT0fi.s:104    .text:00000000000000a4 .L0 
     /tmp/ccanT0fi.s:110    .text:00000000000000b8 .L0 
     /tmp/ccanT0fi.s:111    .text:00000000000000b8 .L0 
     /tmp/ccanT0fi.s:112    .text:00000000000000b8 .L0 
     /tmp/ccanT0fi.s:113    .text:00000000000000b8 .L0 
     /tmp/ccanT0fi.s:117    .text:00000000000000b8 .L0 
     /tmp/ccanT0fi.s:118    .text:00000000000000b8 .L0 
     /tmp/ccanT0fi.s:119    .text:00000000000000b8 .L0 
     /tmp/ccanT0fi.s:130    .text:00000000000000c0 .L0 
     /tmp/ccanT0fi.s:133    .text:00000000000000c0 .L0 
     /tmp/ccanT0fi.s:134    .text:00000000000000c0 .L0 
     /tmp/ccanT0fi.s:135    .text:00000000000000c0 .L0 
     /tmp/ccanT0fi.s:140    .text:00000000000000c4 .L0 
     /tmp/ccanT0fi.s:142    .text:00000000000000c8 .L0 
GAS LISTING /tmp/ccanT0fi.s 			page 10


     /tmp/ccanT0fi.s:143    .text:00000000000000c8 .L0 
     /tmp/ccanT0fi.s:146    .text:00000000000000d0 .L0 
     /tmp/ccanT0fi.s:149    .text:00000000000000d4 .L0 
     /tmp/ccanT0fi.s:150    .text:00000000000000d4 .L0 
     /tmp/ccanT0fi.s:154    .text:00000000000000dc .L0 
     /tmp/ccanT0fi.s:155    .text:00000000000000dc .L0 
     /tmp/ccanT0fi.s:160    .text:00000000000000e0 .L0 
     /tmp/ccanT0fi.s:161    .text:00000000000000e0 .L0 
     /tmp/ccanT0fi.s:169    .text:00000000000000ec .L0 
     /tmp/ccanT0fi.s:170    .text:00000000000000ec .L0 
     /tmp/ccanT0fi.s:179    .text:00000000000000f8 .L0 
     /tmp/ccanT0fi.s:180    .text:00000000000000fc .L0 
     /tmp/ccanT0fi.s:182    .text:0000000000000100 .L0 
     /tmp/ccanT0fi.s:183    .text:0000000000000100 .L0 
     /tmp/ccanT0fi.s:185    .text:0000000000000104 .L0 
     /tmp/ccanT0fi.s:188    .text:0000000000000108 .L0 
     /tmp/ccanT0fi.s:191    .text:000000000000010c .L0 
     /tmp/ccanT0fi.s:193    .text:0000000000000110 .L0 
     /tmp/ccanT0fi.s:217    .text:0000000000000110 .L0 
     /tmp/ccanT0fi.s:86     .text:0000000000000070 .L0 
     /tmp/ccanT0fi.s:95     .text:0000000000000088 .L0 
     /tmp/ccanT0fi.s:100    .text:0000000000000098 .L0 
     /tmp/ccanT0fi.s:105    .text:00000000000000a8 .L0 
     /tmp/ccanT0fi.s:36     .text:0000000000000028 .L1
     /tmp/ccanT0fi.s:22     .text:0000000000000010 .L3
     /tmp/ccanT0fi.s:147    .text:00000000000000d4 .L6
     /tmp/ccanT0fi.s:126    .text:00000000000000c0 .L7
     /tmp/ccanT0fi.s:175    .text:00000000000000f8 .L5
     /tmp/ccanT0fi.s:71     .text:0000000000000050 .LEHB0
     /tmp/ccanT0fi.s:53     .text:0000000000000038 .LFB74
     /tmp/ccanT0fi.s:152    .text:00000000000000dc .LEHE0
     /tmp/ccanT0fi.s:171    .text:00000000000000f0 .LEHB1
     /tmp/ccanT0fi.s:174    .text:00000000000000f8 .LEHE1
     /tmp/ccanT0fi.s:1460   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccanT0fi.s:2800   .debug_str:0000000000000a02 .LASF176
     /tmp/ccanT0fi.s:2602   .debug_str:0000000000000333 .LASF177
     /tmp/ccanT0fi.s:2770   .debug_str:0000000000000911 .LASF178
     /tmp/ccanT0fi.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccanT0fi.s:212    .text:0000000000000110 .Letext0
     /tmp/ccanT0fi.s:2508   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccanT0fi.s:2628   .debug_str:0000000000000413 .LASF0
     /tmp/ccanT0fi.s:2654   .debug_str:0000000000000512 .LASF1
     /tmp/ccanT0fi.s:2736   .debug_str:00000000000007e3 .LASF2
     /tmp/ccanT0fi.s:2744   .debug_str:0000000000000827 .LASF4
     /tmp/ccanT0fi.s:2634   .debug_str:0000000000000442 .LASF3
     /tmp/ccanT0fi.s:2522   .debug_str:000000000000006a .LASF5
     /tmp/ccanT0fi.s:2710   .debug_str:0000000000000729 .LASF6
     /tmp/ccanT0fi.s:2644   .debug_str:00000000000004cd .LASF7
     /tmp/ccanT0fi.s:2612   .debug_str:0000000000000369 .LASF8
     /tmp/ccanT0fi.s:2618   .debug_str:00000000000003a5 .LASF9
     /tmp/ccanT0fi.s:2558   .debug_str:00000000000001ce .LASF10
     /tmp/ccanT0fi.s:2600   .debug_str:0000000000000324 .LASF11
     /tmp/ccanT0fi.s:2572   .debug_str:0000000000000241 .LASF12
     /tmp/ccanT0fi.s:2556   .debug_str:00000000000001be .LASF13
     /tmp/ccanT0fi.s:2778   .debug_str:000000000000097c .LASF14
     /tmp/ccanT0fi.s:2588   .debug_str:00000000000002b6 .LASF15
     /tmp/ccanT0fi.s:2774   .debug_str:0000000000000947 .LASF16
GAS LISTING /tmp/ccanT0fi.s 			page 11


     /tmp/ccanT0fi.s:2708   .debug_str:0000000000000719 .LASF28
     /tmp/ccanT0fi.s:2796   .debug_str:00000000000009f2 .LASF179
     /tmp/ccanT0fi.s:2652   .debug_str:000000000000050d .LASF17
     /tmp/ccanT0fi.s:2532   .debug_str:00000000000000db .LASF18
     /tmp/ccanT0fi.s:2560   .debug_str:00000000000001dd .LASF19
     /tmp/ccanT0fi.s:2884   .debug_str:0000000000000dbf .LASF65
     /tmp/ccanT0fi.s:2616   .debug_str:0000000000000385 .LASF67
     /tmp/ccanT0fi.s:2820   .debug_str:0000000000000b5d .LASF20
     /tmp/ccanT0fi.s:2638   .debug_str:0000000000000465 .LASF22
     /tmp/ccanT0fi.s:2678   .debug_str:000000000000060a .LASF31
     /tmp/ccanT0fi.s:2752   .debug_str:0000000000000858 .LASF33
     /tmp/ccanT0fi.s:2862   .debug_str:0000000000000cf4 .LASF101
     /tmp/ccanT0fi.s:2648   .debug_str:00000000000004f8 .LASF21
     /tmp/ccanT0fi.s:2692   .debug_str:0000000000000693 .LASF23
     /tmp/ccanT0fi.s:2590   .debug_str:00000000000002cc .LASF24
     /tmp/ccanT0fi.s:2836   .debug_str:0000000000000be9 .LASF25
     /tmp/ccanT0fi.s:2880   .debug_str:0000000000000d8f .LASF26
     /tmp/ccanT0fi.s:2536   .debug_str:0000000000000101 .LASF27
     /tmp/ccanT0fi.s:2564   .debug_str:0000000000000201 .LASF180
     /tmp/ccanT0fi.s:2794   .debug_str:00000000000009c3 .LASF181
     /tmp/ccanT0fi.s:2822   .debug_str:0000000000000b62 .LASF29
     /tmp/ccanT0fi.s:2814   .debug_str:0000000000000b39 .LASF182
     /tmp/ccanT0fi.s:2730   .debug_str:00000000000007c9 .LASF30
     /tmp/ccanT0fi.s:2624   .debug_str:00000000000003ed .LASF32
     /tmp/ccanT0fi.s:2684   .debug_str:0000000000000639 .LASF34
     /tmp/ccanT0fi.s:2754   .debug_str:0000000000000877 .LASF35
     /tmp/ccanT0fi.s:2620   .debug_str:00000000000003b3 .LASF36
     /tmp/ccanT0fi.s:2630   .debug_str:0000000000000420 .LASF37
     /tmp/ccanT0fi.s:2688   .debug_str:0000000000000662 .LASF38
     /tmp/ccanT0fi.s:2608   .debug_str:0000000000000352 .LASF41
     /tmp/ccanT0fi.s:2568   .debug_str:000000000000021f .LASF43
     /tmp/ccanT0fi.s:2696   .debug_str:00000000000006ce .LASF39
     /tmp/ccanT0fi.s:2808   .debug_str:0000000000000afd .LASF40
     /tmp/ccanT0fi.s:2838   .debug_str:0000000000000c1a .LASF42
     /tmp/ccanT0fi.s:2846   .debug_str:0000000000000c56 .LASF44
     /tmp/ccanT0fi.s:2728   .debug_str:00000000000007bf .LASF45
     /tmp/ccanT0fi.s:2866   .debug_str:0000000000000d1b .LASF46
     /tmp/ccanT0fi.s:2570   .debug_str:0000000000000237 .LASF47
     /tmp/ccanT0fi.s:2548   .debug_str:000000000000016d .LASF48
     /tmp/ccanT0fi.s:2576   .debug_str:0000000000000264 .LASF49
     /tmp/ccanT0fi.s:2646   .debug_str:00000000000004e0 .LASF50
     /tmp/ccanT0fi.s:2672   .debug_str:00000000000005c3 .LASF51
     /tmp/ccanT0fi.s:2848   .debug_str:0000000000000c6b .LASF52
     /tmp/ccanT0fi.s:2810   .debug_str:0000000000000b16 .LASF53
     /tmp/ccanT0fi.s:2750   .debug_str:000000000000083e .LASF54
     /tmp/ccanT0fi.s:2724   .debug_str:00000000000007a6 .LASF55
     /tmp/ccanT0fi.s:2656   .debug_str:0000000000000525 .LASF56
     /tmp/ccanT0fi.s:2592   .debug_str:00000000000002d8 .LASF57
     /tmp/ccanT0fi.s:2594   .debug_str:00000000000002e5 .LASF58
     /tmp/ccanT0fi.s:2780   .debug_str:0000000000000988 .LASF59
     /tmp/ccanT0fi.s:2760   .debug_str:00000000000008ba .LASF60
     /tmp/ccanT0fi.s:2722   .debug_str:000000000000079d .LASF61
     /tmp/ccanT0fi.s:2632   .debug_str:000000000000042d .LASF62
     /tmp/ccanT0fi.s:2720   .debug_str:0000000000000795 .LASF63
     /tmp/ccanT0fi.s:2806   .debug_str:0000000000000ae9 .LASF64
     /tmp/ccanT0fi.s:2764   .debug_str:00000000000008da .LASF110
     /tmp/ccanT0fi.s:2542   .debug_str:000000000000013a .LASF112
GAS LISTING /tmp/ccanT0fi.s 			page 12


     /tmp/ccanT0fi.s:2786   .debug_str:00000000000009a0 .LASF183
     /tmp/ccanT0fi.s:2870   .debug_str:0000000000000d36 .LASF66
     /tmp/ccanT0fi.s:2554   .debug_str:00000000000001a2 .LASF68
     /tmp/ccanT0fi.s:2706   .debug_str:0000000000000714 .LASF184
     /tmp/ccanT0fi.s:2682   .debug_str:0000000000000624 .LASF69
     /tmp/ccanT0fi.s:2766   .debug_str:00000000000008e3 .LASF70
     /tmp/ccanT0fi.s:2816   .debug_str:0000000000000b41 .LASF71
     /tmp/ccanT0fi.s:2882   .debug_str:0000000000000d98 .LASF72
     /tmp/ccanT0fi.s:2788   .debug_str:00000000000009a8 .LASF75
     /tmp/ccanT0fi.s:2690   .debug_str:000000000000067c .LASF77
     /tmp/ccanT0fi.s:2538   .debug_str:0000000000000121 .LASF73
     /tmp/ccanT0fi.s:2704   .debug_str:00000000000006fd .LASF74
     /tmp/ccanT0fi.s:2740   .debug_str:00000000000007fe .LASF76
     /tmp/ccanT0fi.s:2552   .debug_str:000000000000018d .LASF78
     /tmp/ccanT0fi.s:2790   .debug_str:00000000000009b3 .LASF79
     /tmp/ccanT0fi.s:2596   .debug_str:00000000000002ff .LASF80
     /tmp/ccanT0fi.s:2658   .debug_str:000000000000053e .LASF81
     /tmp/ccanT0fi.s:2830   .debug_str:0000000000000bac .LASF82
     /tmp/ccanT0fi.s:2798   .debug_str:00000000000009fa .LASF185
     /tmp/ccanT0fi.s:2582   .debug_str:0000000000000290 .LASF83
     /tmp/ccanT0fi.s:2566   .debug_str:000000000000020c .LASF84
     /tmp/ccanT0fi.s:2584   .debug_str:0000000000000299 .LASF85
     /tmp/ccanT0fi.s:2742   .debug_str:0000000000000808 .LASF86
     /tmp/ccanT0fi.s:2664   .debug_str:0000000000000571 .LASF87
     /tmp/ccanT0fi.s:2622   .debug_str:00000000000003ce .LASF88
     /tmp/ccanT0fi.s:2698   .debug_str:00000000000006da .LASF89
     /tmp/ccanT0fi.s:2826   .debug_str:0000000000000b77 .LASF90
     /tmp/ccanT0fi.s:2746   .debug_str:000000000000082e .LASF91
     /tmp/ccanT0fi.s:2518   .debug_str:0000000000000054 .LASF92
     /tmp/ccanT0fi.s:2876   .debug_str:0000000000000d77 .LASF93
     /tmp/ccanT0fi.s:2614   .debug_str:0000000000000379 .LASF94
     /tmp/ccanT0fi.s:2546   .debug_str:000000000000015d .LASF95
     /tmp/ccanT0fi.s:2610   .debug_str:000000000000035d .LASF96
     /tmp/ccanT0fi.s:2514   .debug_str:000000000000001c .LASF97
     /tmp/ccanT0fi.s:2668   .debug_str:000000000000059d .LASF98
     /tmp/ccanT0fi.s:2772   .debug_str:0000000000000934 .LASF99
     /tmp/ccanT0fi.s:2738   .debug_str:00000000000007f1 .LASF100
     /tmp/ccanT0fi.s:2510   .debug_str:0000000000000000 .LASF186
     /tmp/ccanT0fi.s:2756   .debug_str:0000000000000885 .LASF102
     /tmp/ccanT0fi.s:2512   .debug_str:0000000000000017 .LASF103
     /tmp/ccanT0fi.s:2868   .debug_str:0000000000000d31 .LASF104
     /tmp/ccanT0fi.s:2768   .debug_str:000000000000090b .LASF105
     /tmp/ccanT0fi.s:2784   .debug_str:0000000000000997 .LASF106
     /tmp/ccanT0fi.s:2700   .debug_str:00000000000006f0 .LASF107
     /tmp/ccanT0fi.s:2804   .debug_str:0000000000000adf .LASF108
     /tmp/ccanT0fi.s:2818   .debug_str:0000000000000b55 .LASF109
     /tmp/ccanT0fi.s:2578   .debug_str:000000000000026f .LASF111
     /tmp/ccanT0fi.s:2516   .debug_str:000000000000002c .LASF113
     /tmp/ccanT0fi.s:2544   .debug_str:000000000000014f .LASF114
     /tmp/ccanT0fi.s:2660   .debug_str:000000000000054b .LASF116
     /tmp/ccanT0fi.s:2598   .debug_str:0000000000000315 .LASF115
     /tmp/ccanT0fi.s:2872   .debug_str:0000000000000d40 .LASF117
     /tmp/ccanT0fi.s:2734   .debug_str:00000000000007de .LASF118
     /tmp/ccanT0fi.s:2586   .debug_str:00000000000002ad .LASF119
     /tmp/ccanT0fi.s:2792   .debug_str:00000000000009be .LASF120
     /tmp/ccanT0fi.s:2860   .debug_str:0000000000000ced .LASF121
     /tmp/ccanT0fi.s:2844   .debug_str:0000000000000c49 .LASF122
GAS LISTING /tmp/ccanT0fi.s 			page 13


     /tmp/ccanT0fi.s:2574   .debug_str:0000000000000251 .LASF123
     /tmp/ccanT0fi.s:2662   .debug_str:0000000000000564 .LASF124
     /tmp/ccanT0fi.s:2550   .debug_str:0000000000000183 .LASF125
     /tmp/ccanT0fi.s:2714   .debug_str:000000000000075c .LASF126
     /tmp/ccanT0fi.s:2802   .debug_str:0000000000000ac6 .LASF127
     /tmp/ccanT0fi.s:2824   .debug_str:0000000000000b68 .LASF128
     /tmp/ccanT0fi.s:2874   .debug_str:0000000000000d5a .LASF129
     /tmp/ccanT0fi.s:2762   .debug_str:00000000000008cd .LASF130
     /tmp/ccanT0fi.s:2694   .debug_str:00000000000006b3 .LASF131
     /tmp/ccanT0fi.s:2670   .debug_str:00000000000005aa .LASF132
     /tmp/ccanT0fi.s:2812   .debug_str:0000000000000b23 .LASF133
     /tmp/ccanT0fi.s:2526   .debug_str:0000000000000084 .LASF134
     /tmp/ccanT0fi.s:2852   .debug_str:0000000000000c8d .LASF135
     /tmp/ccanT0fi.s:2864   .debug_str:0000000000000cfd .LASF136
     /tmp/ccanT0fi.s:2886   .debug_str:0000000000000dc8 .LASF137
     /tmp/ccanT0fi.s:2712   .debug_str:000000000000073c .LASF138
     /tmp/ccanT0fi.s:2686   .debug_str:0000000000000651 .LASF139
     /tmp/ccanT0fi.s:2832   .debug_str:0000000000000bc5 .LASF140
     /tmp/ccanT0fi.s:2842   .debug_str:0000000000000c33 .LASF141
     /tmp/ccanT0fi.s:2758   .debug_str:0000000000000896 .LASF142
     /tmp/ccanT0fi.s:2828   .debug_str:0000000000000b98 .LASF143
     /tmp/ccanT0fi.s:2854   .debug_str:0000000000000c9d .LASF144
     /tmp/ccanT0fi.s:2666   .debug_str:0000000000000585 .LASF145
     /tmp/ccanT0fi.s:2718   .debug_str:000000000000076f .LASF146
     /tmp/ccanT0fi.s:2528   .debug_str:00000000000000a8 .LASF147
     /tmp/ccanT0fi.s:2642   .debug_str:000000000000049d .LASF148
     /tmp/ccanT0fi.s:2530   .debug_str:00000000000000ca .LASF149
     /tmp/ccanT0fi.s:2776   .debug_str:000000000000095d .LASF150
     /tmp/ccanT0fi.s:2680   .debug_str:0000000000000612 .LASF151
     /tmp/ccanT0fi.s:2856   .debug_str:0000000000000cbf .LASF152
     /tmp/ccanT0fi.s:2636   .debug_str:0000000000000454 .LASF153
     /tmp/ccanT0fi.s:2562   .debug_str:00000000000001e2 .LASF154
     /tmp/ccanT0fi.s:2580   .debug_str:000000000000027d .LASF155
     /tmp/ccanT0fi.s:2534   .debug_str:00000000000000e0 .LASF156
     /tmp/ccanT0fi.s:2524   .debug_str:0000000000000071 .LASF157
     /tmp/ccanT0fi.s:2676   .debug_str:00000000000005e9 .LASF158
     /tmp/ccanT0fi.s:2726   .debug_str:00000000000007b2 .LASF159
     /tmp/ccanT0fi.s:2626   .debug_str:00000000000003f8 .LASF160
     /tmp/ccanT0fi.s:2540   .debug_str:000000000000012d .LASF161
     /tmp/ccanT0fi.s:2674   .debug_str:00000000000005ce .LASF162
     /tmp/ccanT0fi.s:2604   .debug_str:0000000000000340 .LASF163
     /tmp/ccanT0fi.s:2640   .debug_str:0000000000000482 .LASF164
     /tmp/ccanT0fi.s:2850   .debug_str:0000000000000c83 .LASF165
     /tmp/ccanT0fi.s:2702   .debug_str:00000000000006f8 .LASF166
     /tmp/ccanT0fi.s:194    .text:0000000000000110 .LFE74
     /tmp/ccanT0fi.s:2716   .debug_str:0000000000000767 .LASF167
     /tmp/ccanT0fi.s:2448   .debug_loc:0000000000000000 .LLST0
     /tmp/ccanT0fi.s:2782   .debug_str:000000000000098f .LASF168
     /tmp/ccanT0fi.s:2459   .debug_loc:0000000000000036 .LLST1
     /tmp/ccanT0fi.s:2858   .debug_str:0000000000000cdf .LASF169
     /tmp/ccanT0fi.s:2748   .debug_str:0000000000000833 .LASF170
     /tmp/ccanT0fi.s:114    .text:00000000000000b8 .LBB15
     /tmp/ccanT0fi.s:128    .text:00000000000000c0 .LBE15
     /tmp/ccanT0fi.s:2466   .debug_loc:0000000000000059 .LLST2
     /tmp/ccanT0fi.s:131    .text:00000000000000c0 .LBB17
     /tmp/ccanT0fi.s:138    .text:00000000000000c4 .LBE17
     /tmp/ccanT0fi.s:2474   .debug_loc:000000000000007d .LLST3
GAS LISTING /tmp/ccanT0fi.s 			page 14


     /tmp/ccanT0fi.s:157    .text:00000000000000e0 .LBB19
     /tmp/ccanT0fi.s:165    .text:00000000000000ec .LBE19
     /tmp/ccanT0fi.s:2481   .debug_loc:00000000000000a0 .LLST4
     /tmp/ccanT0fi.s:163    .text:00000000000000ec .LVL15
     /tmp/ccanT0fi.s:166    .text:00000000000000ec .LBB21
     /tmp/ccanT0fi.s:177    .text:00000000000000f8 .LBE21
     /tmp/ccanT0fi.s:2488   .debug_loc:00000000000000c3 .LLST5
     /tmp/ccanT0fi.s:173    .text:00000000000000f8 .LVL16
     /tmp/ccanT0fi.s:74     .text:0000000000000058 .LVL2
     /tmp/ccanT0fi.s:80     .text:0000000000000068 .LVL3
     /tmp/ccanT0fi.s:89     .text:0000000000000080 .LVL6
     /tmp/ccanT0fi.s:97     .text:0000000000000098 .LVL8
     /tmp/ccanT0fi.s:107    .text:00000000000000b8 .LVL9
     /tmp/ccanT0fi.s:144    .text:00000000000000d0 .LVL12
     /tmp/ccanT0fi.s:151    .text:00000000000000dc .LVL13
     /tmp/ccanT0fi.s:2878   .debug_str:0000000000000d84 .LASF171
     /tmp/ccanT0fi.s:2840   .debug_str:0000000000000c23 .LASF172
     /tmp/ccanT0fi.s:10     .text:0000000000000000 .LFB73
     /tmp/ccanT0fi.s:47     .text:0000000000000038 .LFE73
     /tmp/ccanT0fi.s:27     .text:0000000000000018 .LVL0
     /tmp/ccanT0fi.s:33     .text:0000000000000024 .LVL1
     /tmp/ccanT0fi.s:2606   .debug_str:000000000000034d .LASF173
     /tmp/ccanT0fi.s:2520   .debug_str:0000000000000060 .LASF174
     /tmp/ccanT0fi.s:2650   .debug_str:0000000000000501 .LASF187
     /tmp/ccanT0fi.s:2834   .debug_str:0000000000000be4 .LASF175
     /tmp/ccanT0fi.s:2732   .debug_str:00000000000007ce .LASF188
     /tmp/ccanT0fi.s:82     .text:000000000000006c .LVL4
     /tmp/ccanT0fi.s:87     .text:0000000000000078 .LVL5
     /tmp/ccanT0fi.s:189    .text:0000000000000108 .LVL18
     /tmp/ccanT0fi.s:91     .text:0000000000000084 .LVL7
     /tmp/ccanT0fi.s:186    .text:0000000000000104 .LVL17
     /tmp/ccanT0fi.s:124    .text:00000000000000c0 .LVL10
     /tmp/ccanT0fi.s:136    .text:00000000000000c4 .LVL11
     /tmp/ccanT0fi.s:156    .text:00000000000000e0 .LVL14
     /tmp/ccanT0fi.s:218    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccanT0fi.s:197    .gcc_except_table:0000000000000000 .LLSDA74

UNDEFINED SYMBOLS
_ZN6Kernel10isFinishedEv
thread_dispatch
_ZN6Kernel10initKernelEv
_ZN3TCB9createTCBEPFvPvES0_
_Z8userMainv
_ZN3TCB7runningE
_Z13uart_consumerv
_ZN3TCB8dispatchEv
_ZN6Kernel12finishKernelEv
_ZN15MemoryAllocator4freeEPv
__gxx_personality_v0
